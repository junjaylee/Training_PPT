PEGATRON ATS
PROJECT: D10
STATION: PGPD_F02-3FA-02_4_QT1-PREBURN
Overlay_Version : 1.0d39_EVT_32


[2016-04-05 17:38:57.457]
########################################## START DUT PROGRESS ##########################################

[2016-04-05 17:38:57.457]
PuddingPDCA Framework : pVersion = 1.0d39_EVT_32, STATOIN_NAME = D10_QT1-PREBURN.app, SOFTWARE_LIMITS = 1.0

[2016-04-05 17:38:57.457]
================================== START TEST START_TEST_QT1 (Item0) ==================================

[2016-04-05 17:38:57.457]
^=^ Begin subItem : OPEN_TARGET: ===> parameters:
{
TARGET ==> FIXTURE 
}

[2016-04-05 17:38:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART openPort:baudeRate:dataBit:parity:stopBits:endSymbol:],47) open uart : /dev/cu.usbserial-FIXTURE1 , baudeRate : 115200 

[2016-04-05 17:38:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART openPort:baudeRate:dataBit:parity:stopBits:endSymbol:],69) Open uart ok!

[2016-04-05 17:38:58.458]
OPEN_TARGET => Open uart for FIXTURE:/dev/cu.usbserial-FIXTURE1 pass!

[2016-04-05 17:38:58.458]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] OPEN_TARGET: (TestResult : PASS ; Duration : 1.505243s) +++++++++++++++++++++

[2016-04-05 17:38:58.458]
^=^ Begin subItem : OPEN_TARGET: ===> parameters:
{
TARGET ==> MOBILE 
}

[2016-04-05 17:38:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART openPort:baudeRate:dataBit:parity:stopBits:endSymbol:],47) open uart : /dev/cu.usbserial-UUT1 , baudeRate : 115200 

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART openPort:baudeRate:dataBit:parity:stopBits:endSymbol:],69) Open uart ok!

[2016-04-05 17:39:00.40]
OPEN_TARGET => Open uart for MOBILE:/dev/cu.usbserial-UUT1 pass!

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> 
+++++++++++++++++++++ [2] OPEN_TARGET: (TestResult : PASS ; Duration : 1.504527s) +++++++++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : CANCEL_ITEM_FOR_REL_OR_OTHERLINE:RETURN_VALUE: ===> parameters:
{
CancelItemForREL ==> Item0=Burn X582 Module SN ;  
CancelItemForOtherline ==>  
}

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> 
++++ [3] CANCEL_ITEM_FOR_REL_OR_OTHERLINE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) ++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : CANCEL_ITEM_BY_BOOL_VALUE:RETURN_VALUE: ===> parameters:
{
CancelItemForYES ==> Item0=Initialise Fixture ; Item1=Reset Fixture ; Item2=Check DUT Mode ;  
KEY ==> IS_REMOTE_MODE 
CancelItemForNO ==> Item0=Initialise Fixture_Auto ; Item1=Reset Fixture_Auto ; Item2=Check DUT Mode_Auto ;  
}

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> 
++++++++ [4] CANCEL_ITEM_BY_BOOL_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : LOADLIMITBASEONSOCTYPE:RETURN_VALUE: ===> parameters:
{
LocalLimitFile ==> QT1-PREBURN_Limit.plist 
}

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0>";
    units = "";
}] for key [Neon2LED2 Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0>";
    units = "";
}] for key [Neon2LED2 Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = mW;
}] for key [Battery Average Power]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = mW;
}] for key [Battery Average Power]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [SN]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [SN]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[0 -850]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[0 -850]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Sensor-Status_Init]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Sensor-Status_Init]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Board ID]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Board ID]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_BrickID_SWAP3]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_BrickID_SWAP3]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_BrickID_SWAP3]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_BrickID_SWAP3]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone TopSpeaker to MIC3_Max_Power(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone TopSpeaker to MIC3_Max_Power(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Neon2LED1 Measure Cool Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Neon2LED1 Measure Cool Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [QT1 CB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [QT1 CB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "%";
}] for key [Battery Charge Percentage]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "%";
}] for key [Battery Charge Percentage]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3400,4350]";
    units = "";
}] for key [ACC2 Bypass vldo6]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3400,4350]";
    units = "";
}] for key [ACC2 Bypass vldo6]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0x20,0x21>";
    units = "";
}] for key [Boost IC Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0x20,0x21>";
    units = "";
}] for key [Boost IC Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [IR Test With Light(Black)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [IR Test With Light(Black)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3200,3400]";
    units = "";
}] for key [ACC2 Normal vldo6 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3200,3400]";
    units = "";
}] for key [ACC2 Normal vldo6 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS_IR_Test_Delta]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS_IR_Test_Delta]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0>";
    units = "";
}] for key [Neon1 4xLED Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0>";
    units = "";
}] for key [Neon1 4xLED Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<1>";
    units = "";
}] for key [Neon2 4xLED Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<1>";
    units = "";
}] for key [Neon2 4xLED Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[1000,3000]";
    units = "";
}] for key [Muon_80mA_01_MaxCounts]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[1000,3000]";
    units = "";
}] for key [Muon_80mA_01_MaxCounts]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Neon2LED1 Measure Cool Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Neon2LED1 Measure Cool Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Neon1LED2 Measure Amber Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Neon1LED2 Measure Amber Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[10,]";
    units = "";
}] for key [ALS_Clear_Test_Delta]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[10,]";
    units = "";
}] for key [ALS_Clear_Test_Delta]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_BrickID_SWAP1]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_BrickID_SWAP1]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_BrickID_SWAP1]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_BrickID_SWAP1]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone TopSpeaker to MIC3_Frequency(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone TopSpeaker to MIC3_Frequency(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera RGB]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera RGB]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone SPK to MIC1_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone SPK to MIC1_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [I2C Isolator Enable]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [I2C Isolator Enable]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_Normal_Current 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_Normal_Current 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test SINAD]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test SINAD]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Camera Dli_Front]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Camera Dli_Front]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0>";
    units = "";
}] for key [Neon1LED1 Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0>";
    units = "";
}] for key [Neon1LED1 Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0>";
    units = "";
}] for key [Neon2LED1 Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0>";
    units = "";
}] for key [Neon2LED1 Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Burn X582 Module SN]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Burn X582 Module SN]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Sensor-Status_Detect]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Sensor-Status_Detect]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<no>";
    units = "";
}] for key [X582 Undetect Test]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<no>";
    units = "";
}] for key [X582 Undetect Test]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<yes>";
    units = "";
}] for key [X582 Detect Test]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<yes>";
    units = "";
}] for key [X582 Detect Test]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC1 Bypass V_R]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC1 Bypass V_R]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Write CB Incomplete]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Write CB Incomplete]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Hawking Test Peak Magnitude]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Hawking Test Peak Magnitude]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Noise Power]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Noise Power]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[-600 600]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[-600 600]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = mA;
}] for key [Battery Current]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = mA;
}] for key [Battery Current]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[-70,0]";
    units = mm;
}] for key [PROX_QT_TARGET_RAW_DIST_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[-70,0]";
    units = mm;
}] for key [PROX_QT_TARGET_RAW_DIST_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Average Noise PSD]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Average Noise PSD]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[-850 0]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[-850 0]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2990,3010]";
    units = "";
}] for key [3K Tone No HAC to MIC4_Frequency]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2990,3010]";
    units = "";
}] for key [3K Tone No HAC to MIC4_Frequency]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [I2C Isolator Disable]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [I2C Isolator Disable]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0.01,15]";
    units = "kcps/SPAD";
}] for key [PROX_QT_TARGET_SIG_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0.01,15]";
    units = "kcps/SPAD";
}] for key [PROX_QT_TARGET_SIG_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [1K Tone to MIC2_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [1K Tone to MIC2_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2 Normal V_R 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2 Normal V_R 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<79600>";
    units = "";
}] for key [Muon_FlashCurrent_Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<79600>";
    units = "";
}] for key [Muon_FlashCurrent_Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[208,208]";
    units = "";
}] for key [PROX_QT_DEV_ID]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[208,208]";
    units = "";
}] for key [PROX_QT_DEV_ID]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3400,4350]";
    units = "";
}] for key [ACC1 Bypass vldo6]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3400,4350]";
    units = "";
}] for key [ACC1 Bypass vldo6]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0,100]";
    units = "";
}] for key [Muon_Off_MaxValue]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0,100]";
    units = "";
}] for key [Muon_Off_MaxValue]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0.5,3]";
    units = "kcps/SPAD";
}] for key [PROX_QT_NO_TARGET_AMB_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0.5,3]";
    units = "kcps/SPAD";
}] for key [PROX_QT_NO_TARGET_AMB_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = dB;
}] for key [Hawking Test THD+N]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = dB;
}] for key [Hawking Test THD+N]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [X582 Module SN from diag]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [X582 Module SN from diag]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[250,850]";
    units = "";
}] for key [Muon_20mA_MaxValue]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[250,850]";
    units = "";
}] for key [Muon_20mA_MaxValue]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Signal Power]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Signal Power]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[996,1004]";
    units = "";
}] for key [1K Tone to MIC2_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[996,1004]";
    units = "";
}] for key [1K Tone to MIC2_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC1 Normal V_R 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC1 Normal V_R 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[950,1050]";
    units = "";
}] for key [1K Tone to Low_Power_MIC2_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[950,1050]";
    units = "";
}] for key [1K Tone to Low_Power_MIC2_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[-600 -600]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[-600 -600]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[1000,3000]";
    units = "";
}] for key [Muon_80mA_02_MaxCounts]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[1000,3000]";
    units = "";
}] for key [Muon_80mA_02_MaxCounts]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0x02>";
    units = "";
}] for key [Muon Fault Register]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0x02>";
    units = "";
}] for key [Muon Fault Register]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Clear Test With Light(White)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Clear Test With Light(White)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[55,115]";
    units = mA;
}] for key [ACC1 Normal ildo6 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[55,115]";
    units = mA;
}] for key [ACC1 Normal ildo6 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0x9B>";
    units = "";
}] for key [ALS ID check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0x9B>";
    units = "";
}] for key [ALS ID check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[-600 -600]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[-600 -600]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0>";
    units = "";
}] for key [Neon2 4xLED Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0>";
    units = "";
}] for key [Neon2 4xLED Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Turtle_Read_Delta]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Turtle_Read_Delta]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone SPK to MIC4_Max_Power(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone SPK to MIC4_Max_Power(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<back  detected>";
    units = "";
}] for key [Find Camera_Back]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<back  detected>";
    units = "";
}] for key [Find Camera_Back]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[-850 0]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[-850 0]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Unit SN Changed]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Unit SN Changed]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone HAC to MIC4_Peak Mag]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone HAC to MIC4_Peak Mag]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[850 0]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[850 0]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[600 600]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[600 600]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Ringer]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Ringer]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Vol_Dw]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Vol_Dw]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2 Bypass V_R]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2 Bypass V_R]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[-20,100]";
    units = mm;
}] for key [PROX_QT_NO_TARGET_RAW_DIST_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[-20,100]";
    units = mm;
}] for key [PROX_QT_NO_TARGET_RAW_DIST_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3200,3400]";
    units = "";
}] for key [ACC1 Normal vldo6 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3200,3400]";
    units = "";
}] for key [ACC1 Normal vldo6 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Turtle_Read_Init]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Turtle_Read_Init]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [4xLED Measure Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [4xLED Measure Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0.01,0.5]";
    units = "kcps/SPAD";
}] for key [PROX_QT_NO_TARGET_AMB_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0.01,0.5]";
    units = "kcps/SPAD";
}] for key [PROX_QT_NO_TARGET_AMB_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3,3]";
    units = "";
}] for key [Neon1 Revision]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3,3]";
    units = "";
}] for key [Neon1 Revision]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0,60]";
    units = C;
}] for key [Lifetime Max Temperature]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0,60]";
    units = C;
}] for key [Lifetime Max Temperature]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Neon1LED1 Measure Cool Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Neon1LED1 Measure Cool Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Clear Test With Light(Black)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Clear Test With Light(Black)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Indicator_Detect]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Indicator_Detect]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [IR Test With Light(White)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [IR Test With Light(White)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Camera Dli_Back]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Camera Dli_Back]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_Normal_Current 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_Normal_Current 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [PMURinger]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [PMURinger]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0.01,0.5]";
    units = "kcps/SPAD";
}] for key [PROX_QT_TARGET_AMB_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0.01,0.5]";
    units = "kcps/SPAD";
}] for key [PROX_QT_TARGET_AMB_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[485,515]";
    units = Hz;
}] for key [Hawking Test Frequency]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[485,515]";
    units = Hz;
}] for key [Hawking Test Frequency]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone SPK to MIC4_Frequency(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone SPK to MIC4_Frequency(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Write QT1 CB]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Write QT1 CB]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Turtle_Read_Detect]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Turtle_Read_Detect]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_BrickID_SWAP2]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_BrickID_SWAP2]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_BrickID_SWAP2]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_BrickID_SWAP2]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_Bypass_Impedance]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC1_Bypass_Impedance]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2850,3150]";
    units = "";
}] for key [3K Tone TopSpk to Low_Power_MIC3_FR(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2850,3150]";
    units = "";
}] for key [3K Tone TopSpk to Low_Power_MIC3_FR(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[,0.005]";
    units = "";
}] for key [3K Tone No HAC to MIC4_Peak Mag]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[,0.005]";
    units = "";
}] for key [3K Tone No HAC to MIC4_Peak Mag]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone TopSpk to Low_Power_MIC3_Max_PR(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone TopSpk to Low_Power_MIC3_Max_PR(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Indicator_Undetect]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Indicator_Undetect]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0.01,3]";
    units = mm;
}] for key [PROX_QT_TARGET_RAW_DIST_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0.01,3]";
    units = mm;
}] for key [PROX_QT_TARGET_RAW_DIST_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[600 -600]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[600 -600]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2 Bypass ildo6]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2 Bypass ildo6]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[0 850]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[0 850]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[85,145]";
    units = mA;
}] for key [ACC1 Normal ildo6 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[85,145]";
    units = mA;
}] for key [ACC1 Normal ildo6 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Peak Power]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Peak Power]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Button Test]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Button Test]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [1K Tone to Low_Power_MIC2_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [1K Tone to Low_Power_MIC2_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone TopSpeaker to MIC3_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone TopSpeaker to MIC3_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone HAC Ratio]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone HAC Ratio]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Neon1LED1 Measure Cool Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Neon1LED1 Measure Cool Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Neon1LED2 Measure Amber Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Neon1LED2 Measure Amber Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<1>";
    units = "";
}] for key [Neon1LED2 Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<1>";
    units = "";
}] for key [Neon1LED2 Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2.8,3.6]";
    units = "";
}] for key [Muon_Strobe_Ratio]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2.8,3.6]";
    units = "";
}] for key [Muon_Strobe_Ratio]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<1>";
    units = "";
}] for key [Neon2LED2 Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<1>";
    units = "";
}] for key [Neon2LED2 Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [4xLED Measure Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [4xLED Measure Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[500,1200]";
    units = "kcps/SPAD";
}] for key [PROX_QT_TARGET_SIG_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[500,1200]";
    units = "kcps/SPAD";
}] for key [PROX_QT_TARGET_SIG_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Neon2LED2 Measure Amber Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Neon2LED2 Measure Amber Strobe_Flash Mode]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[20,300]";
    units = "kcps/SPAD";
}] for key [PROX_QT_NO_TARGET_SIG_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[20,300]";
    units = "kcps/SPAD";
}] for key [PROX_QT_NO_TARGET_SIG_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Vol_Up]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Vol_Up]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Hold]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Hold]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Compare X582 Module SN with SFC]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Compare X582 Module SN with SFC]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = FS;
}] for key [Hawking Test DC Magnitude]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = FS;
}] for key [Hawking Test DC Magnitude]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_Bypass_Impedance]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2_Bypass_Impedance]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<yes>";
    units = "";
}] for key [X582 Powered Status]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<yes>";
    units = "";
}] for key [X582 Powered Status]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<Pass>";
    units = "";
}] for key [SphereSelfTest]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<Pass>";
    units = "";
}] for key [SphereSelfTest]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Front Camera RGB]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Front Camera RGB]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[600 600]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[600 600]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[850 0]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[850 0]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone TopSpeaker to MIC3_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone TopSpeaker to MIC3_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0.01,3]";
    units = mm;
}] for key [PROX_QT_NO_TARGET_RAW_DIST_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0.01,3]";
    units = mm;
}] for key [PROX_QT_NO_TARGET_RAW_DIST_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ECID]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ECID]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[80,145]";
    units = mA;
}] for key [ACC2 Normal ildo6 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[80,145]";
    units = mA;
}] for key [ACC2 Normal ildo6 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone HAC to MIC4_Frequency]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2996,3004]";
    units = "";
}] for key [3K Tone HAC to MIC4_Frequency]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC2 Normal V_R 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC2 Normal V_R 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<1>";
    units = "";
}] for key [Neon1 4xLED Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<1>";
    units = "";
}] for key [Neon1 4xLED Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Diag Version Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Diag Version Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[18,18]";
    units = "";
}] for key [PROX_QT_REV_ID]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[18,18]";
    units = "";
}] for key [PROX_QT_REV_ID]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0,8]";
    units = "";
}] for key [Clear Test No Light]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0,8]";
    units = "";
}] for key [Clear Test No Light]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CG Color]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CG Color]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[0 -850]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[0 -850]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [400 Tone to Low_Power_MIC2_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [400 Tone to Low_Power_MIC2_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3400,4350]";
    units = mV;
}] for key [Battery Voltage]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3400,4350]";
    units = mV;
}] for key [Battery Voltage]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Indicator_Init]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Indicator_Init]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<1>";
    units = "";
}] for key [Neon1LED1 Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<1>";
    units = "";
}] for key [Neon1LED1 Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0,8]";
    units = "";
}] for key [IR Test No Light]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0,8]";
    units = "";
}] for key [IR Test No Light]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ACC1 Bypass ildo6]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ACC1 Bypass ildo6]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<1>";
    units = "";
}] for key [Neon2LED1 Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<1>";
    units = "";
}] for key [Neon2LED1 Register 0xA Check]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Sensor-Status_Undetect]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Sensor-Status_Undetect]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[0.01,3]";
    units = "kcps/SPAD";
}] for key [PROX_QT_NO_TARGET_SIG_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[0.01,3]";
    units = "kcps/SPAD";
}] for key [PROX_QT_NO_TARGET_SIG_STD]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0x0>";
    units = "";
}] for key [ACC1 Zero Current Backpower Test]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0x0>";
    units = "";
}] for key [ACC1 Zero Current Backpower Test]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Noise Margin]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = dBFS;
}] for key [Hawking Test Noise Margin]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Muon_iMax_Current_Setting]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Muon_iMax_Current_Setting]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[-600 600]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[-600 600]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[2.8,4.0]";
    units = "";
}] for key [Muon_iMax_Strobe_Ratio]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[2.8,4.0]";
    units = "";
}] for key [Muon_iMax_Strobe_Ratio]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3,3]";
    units = "";
}] for key [Neon2 Revision]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3,3]";
    units = "";
}] for key [Neon2 Revision]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Muon_80mA_MaxValue]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Muon_80mA_MaxValue]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3,9]";
    units = "kcps/SPAD";
}] for key [PROX_QT_TARGET_AMB_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3,9]";
    units = "kcps/SPAD";
}] for key [PROX_QT_TARGET_AMB_AVE]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [Neon2LED2 Measure Amber Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [Neon2LED2 Measure Amber Strobe Off]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[600 -600]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Avg[600 -600]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[50,115]";
    units = mA;
}] for key [ACC2 Normal ildo6 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[50,115]";
    units = mA;
}] for key [ACC2 Normal ildo6 70mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [1K Tone to MIC2_Max_Power(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [1K Tone to MIC2_Max_Power(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[3200,3400]";
    units = "";
}] for key [ACC1 Normal vldo6 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[3200,3400]";
    units = "";
}] for key [ACC1 Normal vldo6 100mA]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Display DUT]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Display DUT]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0x0>";
    units = "";
}] for key [ACC2 Zero Current Backpower Test]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0x0>";
    units = "";
}] for key [ACC2 Zero Current Backpower Test]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[250,850]";
    units = "";
}] for key [Muon_iMax_MaxValue]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[250,850]";
    units = "";
}] for key [Muon_iMax_MaxValue]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[380,420]";
    units = "";
}] for key [400 Tone to Low_Power_MIC2_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[380,420]";
    units = "";
}] for key [400 Tone to Low_Power_MIC2_Frequency(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[0 850]]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Back Camera Displacement_Std[0 850]]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [PMUVolDown]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [PMUVolDown]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<PASS>";
    units = "";
}] for key [PMUHold]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<PASS>";
    units = "";
}] for key [PMUHold]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<front  detected>";
    units = "";
}] for key [Find Camera_Front]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<front  detected>";
    units = "";
}] for key [Find Camera_Front]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "[996,1004]";
    units = "";
}] for key [1K Tone to MIC2_Frequency(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "[996,1004]";
    units = "";
}] for key [1K Tone to MIC2_Frequency(R)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone SPK to MIC1_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [3K Tone SPK to MIC1_Max_Power(L)]

[2016-04-05 17:39:00.40]
Sucessful to add the limit [{
    spec = "<0>";
    units = "";
}] for key [Neon1LED2 Register 0xB Check]

[2016-04-05 17:39:00.40]
Sucessful to add the units [{
    spec = "<0>";
    units = "";
}] for key [Neon1LED2 Register 0xB Check]

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> 
+++++++++ [5] LOADLIMITBASEONSOCTYPE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.220947s) +++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> PASS
+++++ [6] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) +++++

[2016-04-05 17:39:00.40]
================== END TEST START_TEST_QT1 (TestResult : PASS ; Duration : 3.246188s) ==================

[2016-04-05 17:39:00.40]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(START_TEST_QT1,,,PASS,NA,NA,,)

[2016-04-05 17:39:00.40]
Item Name:START_TEST_QT1, {NA}

[2016-04-05 17:39:00.40]
================================ START TEST INITIALISE FIXTURE (Item1) ================================

[2016-04-05 17:39:00.40]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> DUT Find 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:00.40]
Write to ---> FIXTURE , command[DUT Find(STRING)]

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:DUT Find,2,0;return value:0!

[2016-04-05 17:39:00.40]
PostTXToUI ===> 
{
Info ==> DUT Find 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:00.40 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:00.40]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006900s) +++++++++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> DUT Find 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:DUT Find
DUT Find Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:00.40]
PostRXToUI ===> 
{
Info ==> DUT Find
DUT Find Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:00.40 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:00.40]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:00.40]
CATCH_VALUE => Catch OK : DUT Find Pass

[2016-04-05 17:39:00.40]
READ_COMMAND => Catch string between DUT Find and @_@ == DUT Find Pass

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> DUT Find Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.011120s) ++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> DUT Find Pass
+++++++++++ [3] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) +++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Kong To CB Short 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:00.40]
Write to ---> FIXTURE , command[Kong To CB Short(STRING)]

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Kong To CB Short,2,0;return value:0!

[2016-04-05 17:39:00.40]
PostTXToUI ===> 
{
Info ==> Kong To CB Short 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:00.40 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:00.40]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> DUT Find Pass
+++++++++++++++++++++ [4] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005594s) +++++++++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Kong To CB Short 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Kong To CB Short
Kong To CB Short Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:00.40]
PostRXToUI ===> 
{
Info ==> Kong To CB Short
Kong To CB Short Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:00.40 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:00.40]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:00.40]
CATCH_VALUE => Catch OK : Kong To CB Short Pass

[2016-04-05 17:39:00.40]
READ_COMMAND => Catch string between Kong To CB Short and @_@ == Kong To CB Short Pass

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> Kong To CB Short Pass
++++++++++++++ [5] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.040114s) ++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Hold In 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:00.40]
Write to ---> FIXTURE , command[Hold In(STRING)]

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Hold In,2,0;return value:0!

[2016-04-05 17:39:00.40]
PostTXToUI ===> 
{
Info ==> Hold In 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:00.40 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:00.40]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> Kong To CB Short Pass
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006683s) +++++++++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Hold In 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Hold In
Hold In Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:00.40]
PostRXToUI ===> 
{
Info ==> Hold In
Hold In Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:00.40 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:00.40]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:00.40]
CATCH_VALUE => Catch OK : Hold In Pass

[2016-04-05 17:39:00.40]
READ_COMMAND => Catch string between Hold In and @_@ == Hold In Pass

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> Hold In Pass
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.148382s) ++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 100 
}

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> Hold In Pass
+++++++++++++++++ [8] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.101798s) +++++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Bacon In 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:00.40]
Write to ---> FIXTURE , command[Bacon In(STRING)]

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Bacon In,2,0;return value:0!

[2016-04-05 17:39:00.40]
PostTXToUI ===> 
{
Info ==> Bacon In 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:00.40 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:00.40]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:00.40]
RETURN_VALUE ===> Hold In Pass
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006352s) +++++++++++++++++++++

[2016-04-05 17:39:00.40]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Bacon In 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Bacon In
Bacon In Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:00.40]
PostRXToUI ===> 
{
Info ==> Bacon In
Bacon In Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:00.40 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:01.41]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:01.41]
CATCH_VALUE => Catch OK : Bacon In Pass

[2016-04-05 17:39:01.41]
READ_COMMAND => Catch string between Bacon In and @_@ == Bacon In Pass

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> Bacon In Pass
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.176209s) ++++++++++++++

[2016-04-05 17:39:01.41]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 1 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> Bacon In Pass
+++++++++++ [11] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) +++++++++++

[2016-04-05 17:39:01.41]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> PASS
++++ [12] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++

[2016-04-05 17:39:01.41]
================ END TEST Initialise Fixture (TestResult : PASS ; Duration : 0.521224s) ================

[2016-04-05 17:39:01.41]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Initialise Fixture,,,PASS,NA,NA,,)

[2016-04-05 17:39:01.41]
Item Name:Initialise Fixture, {NA}

[2016-04-05 17:39:01.41]
================================== START TEST READ FIXTURE SN (Item3) ==================================

[2016-04-05 17:39:01.41]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Read Fixture SN 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:01.41]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:01.41]
Write to ---> FIXTURE , command[Read Fixture SN(STRING)]

[2016-04-05 17:39:01.41]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Read Fixture SN,2,0;return value:0!

[2016-04-05 17:39:01.41]
PostTXToUI ===> 
{
Info ==> Read Fixture SN 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:01.41 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:01.41]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006793s) +++++++++++++++++++++

[2016-04-05 17:39:01.41]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> SN: 
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:01.41]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Read Fixture SN
SN:0001
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:01.41]
PostRXToUI ===> 
{
Info ==> Read Fixture SN
SN:0001
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:01.41 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:01.41]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:01.41]
CATCH_VALUE => Catch OK : 0001

[2016-04-05 17:39:01.41]
READ_COMMAND => Catch string between SN: and @_@ == 0001

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> 0001
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.018987s) ++++++++++++++

[2016-04-05 17:39:01.41]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FIXTURE_SN 
}

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> 0001
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:01.41]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> FIXTURE_SN 
REGEX ==> (\d*[0-9]) 
}

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> 0001
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000210s) +++++++++++++++

[2016-04-05 17:39:01.41]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AFC_FIXTURE_SN 
}

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> 0001
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:01.41]
^=^ Begin subItem : COMPARE:RETURN_VALUE: ===> parameters:
{
Comparison1 ==> After Catch ==> [*AFC_FIXTURE_SN*] 
burning ==> [*FIXTURE_SN*] 
 
}

[2016-04-05 17:39:01.41]
COMPARE => Result : 0001

[2016-04-05 17:39:01.41]
RETURN_VALUE ===> 0001
+++++++++++++++++ [6] COMPARE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000870s) +++++++++++++++++

[2016-04-05 17:39:01.41]
================= END TEST Read Fixture SN (TestResult : PASS ; Duration : 0.034907s) =================

[2016-04-05 17:39:01.41]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Read Fixture SN,,,0001,NA,NA,,0001)

[2016-04-05 17:39:01.41]
Item Name:Read Fixture SN, {NA}

[2016-04-05 17:39:01.41]
================================== START TEST CHECK DUT MODE (Item4) ==================================

[2016-04-05 17:39:01.41]
^=^ Begin subItem : CHECK_UNIT_LIVE:RETURN_VALUE: ===> parameters:
{
SendCommandEnter ==> STRING ==>  
TARGET ==> MOBILE 
 
LoopTimes ==> 5 
SendCommandDiags ==> STRING ==> diags 
TARGET ==> MOBILE 
 
ReciveCommandForBoot ==> MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=Password: ;  
TIMEOUT ==> 3 
END ==>  
 
ReciveCommandForDiags ==> MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
RepeatTimes ==> 3 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=] :-) ;  
TIMEOUT ==> 18 
END ==>  
 
ReciveCommandForReboot ==> MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=] :-) ;  
TIMEOUT ==> 30 
END ==> :-) 
 
ReciveCommandForEnter ==> MATCHTYPE ==> 1 
BEGIN ==>  
TARGET ==> MOBILE 
RepeatTimes ==> 3 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
INTERVAL ==> 0.25 
END_SYMBOL ==> Item0=:-) ; Item1=] ; Item2=login: ; Item3=iPhone:~ root# ;  
TIMEOUT ==> 3 
END ==>  
 
ReciveCommandForLogIn ==> MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=iPhone:~ root# ;  
TIMEOUT ==> 3 
END ==>  
 
}

[2016-04-05 17:39:01.41]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:01.41]
Write to ---> MOBILE , command[(STRING)]

[2016-04-05 17:39:01.41]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-04-05 17:39:01.41]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:01.41 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:01.41]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:04.44]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:þ TerminateSymbol:(
    ":-)",
    "]",
    "login:",
    "iPhone:~ root#"
) MatchType:1 IntervalTime:0.250000 TimeOut:3.000000);return value:5!

[2016-04-05 17:39:04.44]
PostRXToUI ===> 
{
Info ==> þ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:04.44 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:04.44]
READ_COMMAND => Read command from MOBILE fail!

[2016-04-05 17:39:07.47]
DEVICE in Unknown Mode

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:
Command 'þ' not found.
[001D38CC:3020213A] :-)  TerminateSymbol:(
    ":-)",
    "]",
    "login:",
    "iPhone:~ root#"
) MatchType:1 IntervalTime:0.250000 TimeOut:3.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> 
Command 'þ' not found.
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : Command 'þ' not found.[001D38CC:3020213A] :-)

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between  and  == Command 'þ' not found.[001D38CC:3020213A] :-)

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:18.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : [001D38CC:3020213A] :-)

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between  and  == [001D38CC:3020213A] :-)

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:18.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : [001D38CC:3020213A] :-)

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between  and  == [001D38CC:3020213A] :-)

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:18.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : [001D38CC:3020213A] :-)

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between  and  == [001D38CC:3020213A] :-)

[2016-04-05 17:39:07.47]
DEVICE in Diags Mode

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Diags Mode
+++++++++++++ [1] CHECK_UNIT_LIVE:RETURN_VALUE: (TestResult : PASS ; Duration : 6.360298s) +++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 1 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Diags Mode
+++++++++++ [2] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) +++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> PASS
+++++ [3] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) +++++

[2016-04-05 17:39:07.47]
================== END TEST Check DUT Mode (TestResult : PASS ; Duration : 6.365132s) ==================

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check DUT Mode,,,PASS,NA,NA,,)

[2016-04-05 17:39:07.47]
Item Name:Check DUT Mode, {NA}

[2016-04-05 17:39:07.47]
===================================== START TEST BOARD ID (Item6) =====================================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> boardid 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[boardid(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:boardid,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==> boardid 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006975s) +++++++++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> boardid 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:boardid
Board Id: 0x08
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> boardid
Board Id: 0x08
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : Board Id: 0x08

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between boardid and [001D38CC:3020213A] :-) == Board Id: 0x08

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Board Id: 0x08
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.012027s) ++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
REGEX ==> Board Id: (.*) 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 0x08
+++++++++++++++ [3] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000181s) +++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> BoardID 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 0x08
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : MAPPING_TABLE:RETURN_VALUE: ===> parameters:
{
PRE_KEY ==> BoardID 
MAPPING_TABLE ==> 0x08 ==> D10 
0x0C ==> D101 
 
POST_KEY ==> MLB_TYPE 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 0x08
++++++++++++++ [5] MAPPING_TABLE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> MLB_TYPE 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> D10
++++++++ [6] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Board ID_spec*] 
 
}

[2016-04-05 17:39:07.47]
JUDGE_SPEC =>  value is [D10], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> D10
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000626s) +++++++++++++++

[2016-04-05 17:39:07.47]
===================== END TEST Board ID (TestResult : PASS ; Duration : 0.029172s) =====================

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Board ID,,,D10,NA,NA,,)

[2016-04-05 17:39:07.47]
Item Name:Board ID, {NA}

[2016-04-05 17:39:07.47]
======================================= START TEST ECID (Item7) =======================================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> chipid 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[chipid(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:chipid,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==> chipid 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007666s) +++++++++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> chipid 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:chipid
Chip  ID: 8010 Version: 8.0 
Die   ID: 000000CC:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x001D38CC3020213A
Raw ECID: 001D38CC:3020213A
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> chipid
Chip  ID: 8010 Version: 8.0 
Die   ID: 000000CC:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x001D38CC3020213A
Raw ECID: 001D38CC:3020213A
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : Chip  ID: 8010 Version: 8.0 
Die   ID: 000000CC:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x001D38CC3020213A
Raw ECID: 001D38CC:3020213A

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between chipid and [001D38CC:3020213A] :-) == Chip  ID: 8010 Version: 8.0 
Die   ID: 000000CC:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x001D38CC3020213A
Raw ECID: 001D38CC:3020213A

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Chip  ID: 8010 Version: 8.0 
Die   ID: 000000CC:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x001D38CC3020213A
Raw ECID: 001D38CC:3020213A
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026431s) ++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CHIP_ID 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Chip  ID: 8010 Version: 8.0 
Die   ID: 000000CC:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x001D38CC3020213A
Raw ECID: 001D38CC:3020213A
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CHIP_ID 
REGEX ==> ECID.*?: *(.{18}) 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 0x001D38CC3020213A
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000211s) +++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ECID_spec*] 
 
}

[2016-04-05 17:39:07.47]
JUDGE_SPEC =>  value is [0x001D38CC3020213A], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 0x001D38CC3020213A
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000765s) +++++++++++++++

[2016-04-05 17:39:07.47]
======================= END TEST ECID (TestResult : PASS ; Duration : 0.042682s) =======================

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ECID,,,0x001D38CC3020213A,NA,NA,,)

[2016-04-05 17:39:07.47]
Item Name:ECID, {NA}

[2016-04-05 17:39:07.47]
======================================== START TEST SN (Item8) ========================================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sn 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[sn(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sn,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==> sn 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007038s) +++++++++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Serial:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 3 
END ==> :-) 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sn
Serial: C7CRH00AH7X8
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:3.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> sn
Serial: C7CRH00AH7X8
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : C7CRH00AH7X8

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between Serial:  and [001D38CC:3020213A] :-) == C7CRH00AH7X8

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> C7CRH00AH7X8
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.008273s) ++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> BISN 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> C7CRH00AH7X8
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : GET_SN:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> C7CRH00AH7X8
+++++++++++++++++ [4] GET_SN:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001658s) +++++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*SN_spec*] 
 
}

[2016-04-05 17:39:07.47]
JUDGE_SPEC =>  value is [C7CRH00AH7X8], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> C7CRH00AH7X8
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000804s) +++++++++++++++

[2016-04-05 17:39:07.47]
======================== END TEST SN (TestResult : PASS ; Duration : 0.027082s) ========================

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(SN,,,C7CRH00AH7X8,NA,NA,,)

[2016-04-05 17:39:07.47]
Item Name:SN, {NA}

[2016-04-05 17:39:07.47]
================================ START TEST DIAG VERSION CHECK (Item9) ================================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> ver 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[ver(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:ver,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==> ver 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006887s) +++++++++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ver 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:ver
D10 Diag (factory_d10_evt)
BuildEng build D10Casaval24C210ai (24C210ai). Revision d9cf7ba.
	Built at 2016/03/30 22:07:16
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> ver
D10 Diag (factory_d10_evt)
BuildEng build D10Casaval24C210ai (24C210ai). Revision d9cf7ba.
	Built at 2016/03/30 22:07:16
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : D10 Diag (factory_d10_evt)BuildEng build D10Casaval24C210ai (24C210ai). Revision d9cf7ba.	Built at 2016/03/30 22:07:16

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between ver and [001D38CC:3020213A] :-) == D10 Diag (factory_d10_evt)BuildEng build D10Casaval24C210ai (24C210ai). Revision d9cf7ba.	Built at 2016/03/30 22:07:16

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> D10 Diag (factory_d10_evt)BuildEng build D10Casaval24C210ai (24C210ai). Revision d9cf7ba.	Built at 2016/03/30 22:07:16
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.025731s) ++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> DIAGS_VER 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> D10 Diag (factory_d10_evt)BuildEng build D10Casaval24C210ai (24C210ai). Revision d9cf7ba.	Built at 2016/03/30 22:07:16
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> DIAGS_VER 
REGEX ==> .*\((.*)\)\. 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 24C210ai
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000224s) +++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Diag Version Check_spec*] 
 
}

[2016-04-05 17:39:07.47]
JUDGE_SPEC =>  value is [24C210ai], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 24C210ai
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000599s) +++++++++++++++

[2016-04-05 17:39:07.47]
================ END TEST Diag Version Check (TestResult : PASS ; Duration : 0.040718s) ================

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Diag Version Check,,,24C210ai,NA,NA,,)

[2016-04-05 17:39:07.47]
Item Name:Diag Version Check, {NA}

[2016-04-05 17:39:07.47]
================================== START TEST BOOST IC CHECK (Item10) ==================================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c --devread 0 0x75 0x05 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:07.47]
Write to ---> MOBILE , command[i2c --devread 0 0x75 0x05 1(STRING)]

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c --devread 0 0x75 0x05 1,2,0;return value:0!

[2016-04-05 17:39:07.47]
PostTXToUI ===> 
{
Info ==> i2c --devread 0 0x75 0x05 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006934s) +++++++++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c --devread 0 0x75 0x05 1 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c --devread 0 0x75 0x05 1
Reading 1 bytes from register offset 0x05 into 0x79CEA818, buffer read:	
Data:  0x20 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:07.47]
PostRXToUI ===> 
{
Info ==> i2c --devread 0 0x75 0x05 1
Reading 1 bytes from register offset 0x05 into 0x79CEA818, buffer read:	
Data:  0x20 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:07.47]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x05 into 0x79CEA818, buffer read:	Data:  0x20

[2016-04-05 17:39:07.47]
READ_COMMAND => Catch string between i2c --devread 0 0x75 0x05 1 and [001D38CC:3020213A] :-) == Reading 1 bytes from register offset 0x05 into 0x79CEA818, buffer read:	Data:  0x20

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x05 into 0x79CEA818, buffer read:	Data:  0x20
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.025934s) ++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Boost_IC 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x05 into 0x79CEA818, buffer read:	Data:  0x20
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Boost_IC 
REGEX ==> Data:\s*(.{4}) 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 0x20
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000157s) +++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Boost IC Check_spec*] 
 
}

[2016-04-05 17:39:07.47]
JUDGE_SPEC =>  value is [0x20], spec is [Item0=0x20 ; Item1=0x21 ; ], mode is [5]

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 0x20
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000610s) +++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Boost IC Check_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 0x20
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:39:07.47]
================== END TEST Boost IC Check (TestResult : PASS ; Duration : 0.041651s) ==================

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Boost IC Check,,,0x20,0x20 0x21,0x20 0x21,,)

[2016-04-05 17:39:07.47]
Item Name:Boost IC Check, <0x20,0x21>

[2016-04-05 17:39:07.47]
==================================== START TEST CHECK UOP (Item11) ====================================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : AMIOK_CHECK:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> PASS
+++++++++++++++ [1] AMIOK_CHECK:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001327s) +++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 1 
IP_NoParametric ==> 1 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> PASS
+++++++++++ [2] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) +++++++++++

[2016-04-05 17:39:07.47]
==================== END TEST Check UOP (TestResult : PASS ; Duration : 0.004663s) ====================

[2016-04-05 17:39:07.47]
Item Name:Check UOP, {NA}

[2016-04-05 17:39:07.47]
====================== START TEST NETWORK CB: CHECK PREVIOUS STATION CBS (Item12) ======================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : CHECK_CONTROL_BITS:RETURN_VALUE: ===> parameters:
{
LOCAL_STATIONID ==> 0x81 
NEW_CBAuth_API ==> 1 
SEND_COMMAND: ==> STRING ==> cbread [*StationId*] 
TARGET ==> MOBILE 
 
READ_COMMAND:RETURN_VALUE: ==> MATCHTYPE ==> 0 
BEGIN ==> cbread [*StationId*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Network CB Check Return No Need!
+++++++++++ [1] CHECK_CONTROL_BITS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000893s) +++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> Network CB Check Return No Need!
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : CB_SETORNOT:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> ON
+++++++++++++++ [3] CB_SETORNOT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000819s) +++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : AddCancelCases:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> {OFF} 
 
FORCE_CANCEL ==> Item0=Write QT1 CB ; Item1=QT1 CB Check ;  
ISNOSpec ==> 1 
}

[2016-04-05 17:39:07.47]
JUDGE_SPEC =>  value is [ON], spec is [Item0=OFF ; ], mode is [2]

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> ON
+++++++++++++ [4] AddCancelCases:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000734s) +++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 1 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> ON
+++++++++++ [5] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) +++++++++++

[2016-04-05 17:39:07.47]
====== END TEST NetWork CB: Check Previous Station CBs (TestResult : PASS ; Duration : 0.010761s) ======

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(NetWork CB: Check Previous Station CBs,,,Network CB Check Return No Need!,NA,NA,,)

[2016-04-05 17:39:07.47]
Item Name:NetWork CB: Check Previous Station CBs, {NA}

[2016-04-05 17:39:07.47]
======================================= START TEST SLOT (Item13) =======================================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : UPLOAD_SLOT_TO_PDCA:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : 0 = SetTestSlotID(groupId:1 ; fixtureId:1)

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> 1
+++++++++++ [1] UPLOAD_SLOT_TO_PDCA:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000964s) +++++++++++

[2016-04-05 17:39:07.47]
======================= END TEST Slot (TestResult : PASS ; Duration : 0.002696s) =======================

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Slot,,,1,NA,NA,,)

[2016-04-05 17:39:07.47]
Item Name:Slot, {NA}

[2016-04-05 17:39:07.47]
========================== START TEST GET LINK DATA VIA ISN FROM SFC (Item14) ==========================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : QUERY_SFIS:RETURN_VALUE: ===> parameters:
{
QueryItems ==> clrc ==>  
fg_mesa ==>  
 
}

[2016-04-05 17:39:07.47]
Query URL : http://10.16.16.126/invoke/KirinBobcat/KirinSFC?c=query_record&sn=C7CRH00AH7X8&p=clrc&p=fg_mesa

[2016-04-05 17:39:07.47]
QUERY_SFIS TrySFCQueryRecord : result[0] all value with keys [{
    clrc = A1;
    "fg_mesa" = F58611600TGH24G3E1;
}]

[2016-04-05 17:39:07.47]
QUERY_SFIS: => print query value[A1] with key[clrc]

[2016-04-05 17:39:07.47]
QUERY_SFIS: => print query value[F58611600TGH24G3E1] with key[fg_mesa]

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> clrc=A1;fg_mesa=F58611600TGH24G3E1;
+++++++++++++++ [1] QUERY_SFIS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.101405s) +++++++++++++++

[2016-04-05 17:39:07.47]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:07.47]
RETURN_VALUE ===> PASS
+++++ [2] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++

[2016-04-05 17:39:07.47]
========== END TEST Get Link Data via ISN From SFC (TestResult : PASS ; Duration : 0.104684s) ==========

[2016-04-05 17:39:07.47]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Get Link Data via ISN From SFC,,,PASS,NA,NA,,)

[2016-04-05 17:39:07.47]
Item Name:Get Link Data via ISN From SFC, {NA}

[2016-04-05 17:39:07.47]
================================= START TEST SET COF FUNCTION (Item15) =================================

[2016-04-05 17:39:07.47]
^=^ Begin subItem : QUERY_SFIS:RETURN_VALUE: ===> parameters:
{
WithStationID ==> 1 
QueryItems ==> cof ==>  
 
}

[2016-04-05 17:39:08.48]
Query URL : http://10.16.16.126/invoke/KirinBobcat/KirinSFC?c=query_record&sn=C7CRH00AH7X8&tsid=PGPD_F02-3FA-02_4_QT1-PREBURN&p=cof

[2016-04-05 17:39:08.48]
QUERY_SFIS TrySFCQueryRecord : result[0] all value with keys [{
    cof = "PGPD_F02-3FA-02_4_QT1-PREBURN;NONE";
}]

[2016-04-05 17:39:08.48]
QUERY_SFIS: => print query value[PGPD_F02-3FA-02_4_QT1-PREBURN;NONE] with key[cof]

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> cof=PGPD_F02-3FA-02_4_QT1-PREBURN;NONE;
+++++++++++++++ [1] QUERY_SFIS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.156386s) +++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : GET_SFIS_COF_ITEMS:RETURN_VALUE: ===> parameters:
{
ItemsCompart ==> , 
KEY ==> cof 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> NONE
+++++++++++ [2] GET_SFIS_COF_ITEMS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> PASS
+++++ [3] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) +++++

[2016-04-05 17:39:08.48]
================= END TEST Set COF Function (TestResult : PASS ; Duration : 0.161296s) =================

[2016-04-05 17:39:08.48]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Set COF Function,,,PASS,NA,NA,,)

[2016-04-05 17:39:08.48]
Item Name:Set COF Function, {NA}

[2016-04-05 17:39:08.48]
=============================== START TEST WRITE CB INCOMPLETE (Item16) ===============================

[2016-04-05 17:39:08.48]
^=^ Begin subItem : SAVE_NOWTIME:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 
++++++++++++++ [1] SAVE_NOWTIME:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000416s) ++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> rtc --set [*NowTime*] 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:08.48]
Write to ---> MOBILE , command[rtc --set 20160405173908(STRING)]

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:rtc --set 20160405173908,2,0;return value:0!

[2016-04-05 17:39:08.48]
PostTXToUI ===> 
{
Info ==> rtc --set 20160405173908 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 
+++++++++++++++++++++ [2] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006735s) +++++++++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> rtc --set [*NowTime*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:rtc --set 20160405173908
20160405173908
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:08.48]
PostRXToUI ===> 
{
Info ==> rtc --set 20160405173908
20160405173908
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:08.48]
CATCH_VALUE => Catch OK : 20160405173908

[2016-04-05 17:39:08.48]
READ_COMMAND => Catch string between rtc --set [*NowTime*] and [001D38CC:3020213A] :-) == 20160405173908

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 20160405173908
++++++++++++++ [3] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020210s) ++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : WRITE_INCOMPLETE_CONTROLBIT:RETURN_VALUE: ===> parameters:
{
2.SEND_COMMAND: ==> STRING ==> cbwrite 0x81 incomplete [*SoftVersion*] 
TARGET ==> MOBILE 
 
2.READ_COMMAND:RETURN_VALUE: ==> MATCHTYPE ==> 0 
BEGIN ==> cbwrite 0x81 incomplete [*SoftVersion*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:08.48]
Write to ---> MOBILE , command[cbwrite 0x81 incomplete 1.0d39_EVT_32(STRING)]

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:cbwrite 0x81 incomplete 1.0d39_EVT_32,2,0;return value:0!

[2016-04-05 17:39:08.48]
PostTXToUI ===> 
{
Info ==> cbwrite 0x81 incomplete 1.0d39_EVT_32 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:cbwrite 0x81 incomplete 1.0d39_EVT_32
0x81 Incomplete 0 0 13 150485948 1.0d39_EVT_32
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:08.48]
PostRXToUI ===> 
{
Info ==> cbwrite 0x81 incomplete 1.0d39_EVT_32
0x81 Incomplete 0 0 13 150485948 1.0d39_EVT_32
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:08.48]
CATCH_VALUE => Catch OK : 0x81 Incomplete 0 0 13 150485948 1.0d39_EVT_32OK

[2016-04-05 17:39:08.48]
READ_COMMAND => Catch string between cbwrite 0x81 incomplete [*SoftVersion*] and [001D38CC:3020213A] :-) == 0x81 Incomplete 0 0 13 150485948 1.0d39_EVT_32OK

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 0x81 Incomplete 0 0 13 150485948 1.0d39_EVT_32OK
+++++++ [4] WRITE_INCOMPLETE_CONTROLBIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.062051s) +++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> PASS
+++++ [5] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) +++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Write CB Incomplete_spec*] 
 
}

[2016-04-05 17:39:08.48]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> PASS
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000659s) +++++++++++++++

[2016-04-05 17:39:08.48]
=============== END TEST Write CB Incomplete (TestResult : PASS ; Duration : 0.099239s) ===============

[2016-04-05 17:39:08.48]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Write CB Incomplete,,,PASS,NA,NA,,)

[2016-04-05 17:39:08.48]
Item Name:Write CB Incomplete, {NA}

[2016-04-05 17:39:08.48]
=============================== START TEST I2C ISOLATOR ENABLE (Item17) ===============================

[2016-04-05 17:39:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:08.48]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 1(STRING)]

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 1,2,0;return value:0!

[2016-04-05 17:39:08.48]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006745s) +++++++++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 25 --output 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 1
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:08.48]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:08.48]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:08.48]
READ_COMMAND => Catch string between socgpio --port 1 --pin 25 --output 1 and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.019082s) ++++++++++++++

[2016-04-05 17:39:08.48]
=============== END TEST I2C Isolator Enable (TestResult : PASS ; Duration : 0.028890s) ===============

[2016-04-05 17:39:08.48]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(I2C Isolator Enable,,,OK,NA,NA,,)

[2016-04-05 17:39:08.48]
Item Name:I2C Isolator Enable, {NA}

[2016-04-05 17:39:08.48]
===================================== START TEST CG COLOR (Item18) =====================================

[2016-04-05 17:39:08.48]
^=^ Begin subItem : MAPPING_TABLE:RETURN_VALUE: ===> parameters:
{
PRE_KEY ==> clrc 
MAPPING_TABLE ==> D ==> White 
A2 ==> Black 
B ==> White 
A1 ==> Black 
C ==> White 
 
POST_KEY ==> Color_CG 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 
++++++++++++++ [1] MAPPING_TABLE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) ++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Color_CG 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Black
++++++++ [2] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : AddCancelCases:RETURN_VALUE: ===> parameters:
{
OUTOFSPEC_CANCEL ==> 1 
COMMON_SPEC ==> P_LimitBlack ==> {Black} 
 
FORCE_CANCEL ==> Item0=Clear Test With Light(Black) ; Item1=IR Test With Light(Black) ;  
ISNOSpec ==> 1 
}

[2016-04-05 17:39:08.48]
JUDGE_SPEC =>  value is [Black], spec is [Item0=Black ; ], mode is [2]

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Black
+++++++++++++ [3] AddCancelCases:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000804s) +++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Color_CG 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Black
++++++++ [4] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : AddCancelCases:RETURN_VALUE: ===> parameters:
{
OUTOFSPEC_CANCEL ==> 1 
COMMON_SPEC ==> P_LimitBlack ==> {White} 
 
FORCE_CANCEL ==> Item0=Clear Test With Light(White) ; Item1=IR Test With Light(White) ;  
ISNOSpec ==> 1 
}

[2016-04-05 17:39:08.48]
JUDGE_SPEC =>  value is [Black], spec is [Item0=White ; ], mode is [2]

[2016-04-05 17:39:08.48]
Cancel item: Clear Test With Light(White)

[2016-04-05 17:39:08.48]
Cancel item: IR Test With Light(White)

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Black
+++++++++++++ [5] AddCancelCases:RETURN_VALUE: (TestResult : PASS ; Duration : 0.002244s) +++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> PASS
+++++ [6] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) +++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : AddCancelCases:RETURN_VALUE: ===> parameters:
{
OUTOFSPEC_CANCEL ==> 1 
COMMON_SPEC ==> P_LimitBlack ==> {PASS} 
 
FORCE_CANCEL ==> Item0=Clear Test With Light(White) ; Item1=IR Test With Light(White) ; Item2=Clear Test With Light(Black) ; Item3=IR Test With Light(Black) ;  
ISNOSpec ==> 1 
}

[2016-04-05 17:39:08.48]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [2]

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> PASS
+++++++++++++ [7] AddCancelCases:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000770s) +++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Color_CG 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Black
++++++++ [8] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CG Color_spec*] 
 
}

[2016-04-05 17:39:08.48]
JUDGE_SPEC =>  value is [Black], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Black
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000783s) +++++++++++++++

[2016-04-05 17:39:08.48]
===================== END TEST CG Color (TestResult : PASS ; Duration : 0.018738s) =====================

[2016-04-05 17:39:08.48]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CG Color,,,Black,NA,NA,,)

[2016-04-05 17:39:08.48]
Item Name:CG Color, {NA}

[2016-04-05 17:39:08.48]
================================== START TEST PROX_QT_DEV_ID (Item19) ==================================

[2016-04-05 17:39:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel prox --init 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:08.48]
Write to ---> MOBILE , command[sensor --sel prox --init(STRING)]

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel prox --init,2,0;return value:0!

[2016-04-05 17:39:08.48]
PostTXToUI ===> 
{
Info ==> sensor --sel prox --init 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007065s) +++++++++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel prox --init 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel prox --init
Turning off power to 'prox' sensor...
Turning on power to 'prox' sensor...
Resetting 'prox' sensor...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:08.48]
PostRXToUI ===> 
{
Info ==> sensor --sel prox --init
Turning off power to 'prox' sensor...
Turning on power to 'prox' sensor...
Resetting 'prox' sensor...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:08.48]
CATCH_VALUE => Catch OK : Turning off power to 'prox' sensor...Turning on power to 'prox' sensor...Resetting 'prox' sensor...OK

[2016-04-05 17:39:08.48]
READ_COMMAND => Catch string between sensor --sel prox --init and [001D38CC:3020213A] :-) == Turning off power to 'prox' sensor...Turning on power to 'prox' sensor...Resetting 'prox' sensor...OK

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Turning off power to 'prox' sensor...Turning on power to 'prox' sensor...Resetting 'prox' sensor...OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.035986s) ++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensorreg --sel prox --read 0x00 2 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:08.48]
Write to ---> MOBILE , command[sensorreg --sel prox --read 0x00 2(STRING)]

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensorreg --sel prox --read 0x00 2,2,0;return value:0!

[2016-04-05 17:39:08.48]
PostTXToUI ===> 
{
Info ==> sensorreg --sel prox --read 0x00 2 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Turning off power to 'prox' sensor...Turning on power to 'prox' sensor...Resetting 'prox' sensor...OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005555s) +++++++++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensorreg --sel prox --read 0x00 2 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensorreg --sel prox --read 0x00 2
Reading in 2 registers from 0x0:
0x00 = 0xD0
0x01 = 0x12
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:08.48]
PostRXToUI ===> 
{
Info ==> sensorreg --sel prox --read 0x00 2
Reading in 2 registers from 0x0:
0x00 = 0xD0
0x01 = 0x12
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:08.48]
CATCH_VALUE => Catch OK : Reading in 2 registers from 0x0:0x00 = 0xD00x01 = 0x12OK

[2016-04-05 17:39:08.48]
READ_COMMAND => Catch string between sensorreg --sel prox --read 0x00 2 and [001D38CC:3020213A] :-) == Reading in 2 registers from 0x0:0x00 = 0xD00x01 = 0x12OK

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Reading in 2 registers from 0x0:0x00 = 0xD00x01 = 0x12OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021565s) ++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> DOPPLER_KEY 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Reading in 2 registers from 0x0:0x00 = 0xD00x01 = 0x12OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> DOPPLER_KEY 
REGEX ==> 0x00 =\s*0x(.*?)0x01 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> D0
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000186s) +++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 208
+++++++++ [7] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_DEV_ID_spec*] 
 
}

[2016-04-05 17:39:08.48]
JUDGE_SPEC =>  value is [208], spec is [Item0=208 ; Item1=208 ; ], mode is [1]

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 208
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000624s) +++++++++++++++

[2016-04-05 17:39:08.48]
================== END TEST PROX_QT_DEV_ID (TestResult : PASS ; Duration : 0.082062s) ==================

[2016-04-05 17:39:08.48]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_DEV_ID,,,208,208,208,,)

[2016-04-05 17:39:08.48]
Item Name:PROX_QT_DEV_ID, [208,208]

[2016-04-05 17:39:08.48]
================================== START TEST PROX_QT_REV_ID (Item20) ==================================

[2016-04-05 17:39:08.48]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> DOPPLER_KEY 
REGEX ==> 0x01 = \s*0x(.*?)OK 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 12
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000285s) +++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 18
+++++++++ [2] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000043s) +++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_REV_ID_spec*] 
 
}

[2016-04-05 17:39:08.48]
JUDGE_SPEC =>  value is [18], spec is [Item0=18 ; Item1=18 ; ], mode is [1]

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 18
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000824s) +++++++++++++++

[2016-04-05 17:39:08.48]
================== END TEST PROX_QT_REV_ID (TestResult : PASS ; Duration : 0.006668s) ==================

[2016-04-05 17:39:08.48]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_REV_ID,,,18,18,18,,)

[2016-04-05 17:39:08.48]
Item Name:PROX_QT_REV_ID, [18,18]

[2016-04-05 17:39:08.48]
========================== START TEST PROX_QT_NO_TARGET_RAW_DIST_AVE (Item21) ==========================

[2016-04-05 17:39:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel prox --set datatype norm 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:08.48]
Write to ---> MOBILE , command[sensor --sel prox --set datatype norm(STRING)]

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel prox --set datatype norm,2,0;return value:0!

[2016-04-05 17:39:08.48]
PostTXToUI ===> 
{
Info ==> sensor --sel prox --set datatype norm 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007073s) +++++++++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel prox --set datatype norm 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel prox --set datatype norm
Setting parameter 'datatype' to norm for 'prox'
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:08.48]
PostRXToUI ===> 
{
Info ==> sensor --sel prox --set datatype norm
Setting parameter 'datatype' to norm for 'prox'
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:08.48]
CATCH_VALUE => Catch OK : Setting parameter 'datatype' to norm for 'prox'OK

[2016-04-05 17:39:08.48]
READ_COMMAND => Catch string between sensor --sel prox --set datatype norm and [001D38CC:3020213A] :-) == Setting parameter 'datatype' to norm for 'prox'OK

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Setting parameter 'datatype' to norm for 'prox'OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021992s) ++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel prox --sample 32 --stats 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:08.48]
Write to ---> MOBILE , command[sensor --sel prox --sample 32 --stats(STRING)]

[2016-04-05 17:39:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel prox --sample 32 --stats,2,0;return value:0!

[2016-04-05 17:39:08.48]
PostTXToUI ===> 
{
Info ==> sensor --sel prox --sample 32 --stats 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:08.48]
RETURN_VALUE ===> Setting parameter 'datatype' to norm for 'prox'OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005650s) +++++++++++++++++++++

[2016-04-05 17:39:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel prox --sample 32 --stats 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel prox --sample 32 --stats
Capturing 32 samples from:
prox @ 60.00 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
prox:		 289s:056881us (+00s:000000us) = 36.481819, 82.061411, 0.967880, 8824.285139, 104.078828, 9987.622068
prox:		 289s:068647us (+00s:011766us) = 34.006526, 82.696190, 1.093579, 8892.544630, 117.595558, 9987.622068
prox:		 289s:080413us (+00s:011766us) = 33.237072, 83.189558, 1.231848, 8945.597799, 132.463962, 9987.622068
prox:		 289s:092173us (+00s:011760us) = 36.231566, 82.588299, 0.892461, 8880.942770, 95.968789, 9987.622068
prox:		 289s:103930us (+00s:011757us) = 33.954359, 82.904641, 1.357547, 8914.959876, 145.980693, 9987.622068
prox:		 289s:115688us (+00s:011758us) = 33.512974, 83.405341, 0.955310, 8968.801521, 102.727154, 9987.622068
prox:		 289s:127441us (+00s:011753us) = 33.450519, 83.431528, 0.867321, 8971.617506, 93.265443, 9987.622068
prox:		 289s:139196us (+00s:011755us) = 35.473704, 84.170009, 1.081009, 9051.028300, 116.243885, 9987.622068
prox:		 289s:150951us (+00s:011755us) = 35.524567, 83.564559, 1.256987, 8985.922713, 135.167309, 9987.622068
prox:		 289s:162705us (+00s:011754us) = 33.682225, 83.910231, 1.206708, 9023.093723, 129.760616, 9987.622068
prox:		 289s:174456us (+00s:011751us) = 34.598034, 83.693401, 1.143859, 8999.777362, 123.002251, 9987.622068
prox:		 289s:186207us (+00s:011751us) = 36.871908, 83.515327, 1.168998, 8980.628660, 125.705597, 9987.622068
prox:		 289s:197962us (+00s:011755us) = 36.352708, 83.321542, 1.407826, 8959.790367, 151.387386, 9987.622068
prox:		 289s:209717us (+00s:011755us) = 34.361257, 83.907089, 1.043300, 9022.755805, 112.188866, 9987.622068
prox:		 289s:221469us (+00s:011752us) = 36.191572, 83.401151, 1.307267, 8968.350963, 140.574001, 9987.622068
prox:		 289s:233222us (+00s:011753us) = 34.596005, 84.053737, 1.118719, 9038.525324, 120.298905, 9987.622068
prox:		 289s:244972us (+00s:011750us) = 35.139695, 84.461211, 1.030730, 9082.342060, 110.837193, 9987.622068
prox:		 289s:256722us (+00s:011750us) = 35.790760, 83.139278, 1.382686, 8940.191107, 148.684040, 9987.622068
prox:		 289s:268472us (+00s:011750us) = 34.043477, 84.636142, 1.307267, 9101.152844, 140.574001, 9987.622068
prox:		 289s:280222us (+00s:011750us) = 35.348795, 83.654644, 1.168998, 8995.609704, 125.705597, 9987.622068
prox:		 289s:291972us (+00s:011750us) = 36.185051, 84.311420, 1.244418, 9066.234623, 133.815636, 9987.622068
prox:		 289s:303721us (+00s:011749us) = 34.340245, 84.436071, 1.156428, 9079.638714, 124.353924, 9987.622068
prox:		 289s:315469us (+00s:011748us) = 37.083182, 84.317705, 1.583804, 9066.910459, 170.310809, 9987.622068
prox:		 289s:327219us (+00s:011750us) = 36.097527, 84.964006, 1.332407, 9136.408984, 143.277347, 9987.622068
prox:		 289s:338970us (+00s:011751us) = 36.661214, 84.454926, 1.357547, 9081.666224, 145.980693, 9987.622068
prox:		 289s:350716us (+00s:011746us) = 34.994064, 84.255903, 1.219278, 9060.264733, 131.112289, 9987.622068
prox:		 289s:362463us (+00s:011747us) = 35.127668, 84.446546, 1.018160, 9080.765108, 109.485520, 9987.622068
prox:		 289s:374210us (+00s:011747us) = 35.022176, 84.531393, 1.143859, 9089.888902, 123.002251, 9987.622068
prox:		 289s:385958us (+00s:011748us) = 36.150998, 84.326085, 1.143859, 9067.811575, 123.002251, 9987.622068
prox:		 289s:397706us (+00s:011748us) = 34.866256, 85.400809, 1.131289, 9183.379624, 121.650578, 9987.622068
prox:		 289s:409454us (+00s:011748us) = 34.663387, 84.506253, 1.307267, 9087.185556, 140.574001, 9987.622068
prox:		 289s:421201us (+00s:011747us) = 35.350389, 84.536630, 1.407826, 9090.452099, 151.387386, 9987.622068


Stats:

prox:
	# of samples captured: 32
	# of bad samples (corrupted/lost): 0
	calculated odr: 85.093347Hz
	average: rawrange = 35.168491
	average: signalrateperspad = 83.881032, ambientrateperspad = 1.188639
	average: totalsignalrate = 9019.953899, totalambientrate = 127.817586
	average: integrationtime = 9987.622068
	std-dev: rawrange = 1.056934
	std-dev: signalrateperspad = 0.730568, ambientrateperspad = 0.160725
	std-dev: totalsignalrate = 78.559956, totalambientrate = 17.283247
	std-dev: integrationtime = 0.000000
	rms: rawrange = 35.184369
	rms: signalrateperspad = 83.884214, ambientrateperspad = 1.199456
	rms: totalsignalrate = 9020.296005, totalambientrate = 128.980797
	rms: integrationtime = 9987.622068
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:09.49]
PostRXToUI ===> 
{
Info ==> sensor --sel prox --sample 32 --stats
Capturing 32 samples from:
prox @ 60.00 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
prox:		 289s:056881us (+00s:000000us) = 36.481819, 82.061411, 0.967880, 8824.285139, 104.078828, 9987.622068
prox:		 289s:068647us (+00s:011766us) = 34.006526, 82.696190, 1.093579, 8892.544630, 117.595558, 9987.622068
prox:		 289s:080413us (+00s:011766us) = 33.237072, 83.189558, 1.231848, 8945.597799, 132.463962, 9987.622068
prox:		 289s:092173us (+00s:011760us) = 36.231566, 82.588299, 0.892461, 8880.942770, 95.968789, 9987.622068
prox:		 289s:103930us (+00s:011757us) = 33.954359, 82.904641, 1.357547, 8914.959876, 145.980693, 9987.622068
prox:		 289s:115688us (+00s:011758us) = 33.512974, 83.405341, 0.955310, 8968.801521, 102.727154, 9987.622068
prox:		 289s:127441us (+00s:011753us) = 33.450519, 83.431528, 0.867321, 8971.617506, 93.265443, 9987.622068
prox:		 289s:139196us (+00s:011755us) = 35.473704, 84.170009, 1.081009, 9051.028300, 116.243885, 9987.622068
prox:		 289s:150951us (+00s:011755us) = 35.524567, 83.564559, 1.256987, 8985.922713, 135.167309, 9987.622068
prox:		 289s:162705us (+00s:011754us) = 33.682225, 83.910231, 1.206708, 9023.093723, 129.760616, 9987.622068
prox:		 289s:174456us (+00s:011751us) = 34.598034, 83.693401, 1.143859, 8999.777362, 123.002251, 9987.622068
prox:		 289s:186207us (+00s:011751us) = 36.871908, 83.515327, 1.168998, 8980.628660, 125.705597, 9987.622068
prox:		 289s:197962us (+00s:011755us) = 36.352708, 83.321542, 1.407826, 8959.790367, 151.387386, 9987.622068
prox:		 289s:209717us (+00s:011755us) = 34.361257, 83.907089, 1.043300, 9022.755805, 112.188866, 9987.622068
prox:		 289s:221469us (+00s:011752us) = 36.191572, 83.401151, 1.307267, 8968.350963, 140.574001, 9987.622068
prox:		 289s:233222us (+00s:011753us) = 34.596005, 84.053737, 1.118719, 9038.525324, 120.298905, 9987.622068
prox:		 289s:244972us (+00s:011750us) = 35.139695, 84.461211, 1.030730, 9082.342060, 110.837193, 9987.622068
prox:		 289s:256722us (+00s:011750us) = 35.790760, 83.139278, 1.382686, 8940.191107, 148.684040, 9987.622068
prox:		 289s:268472us (+00s:011750us) = 34.043477, 84.636142, 1.307267, 9101.152844, 140.574001, 9987.622068
prox:		 289s:280222us (+00s:011750us) = 35.348795, 83.654644, 1.168998, 8995.609704, 125.705597, 9987.622068
prox:		 289s:291972us (+00s:011750us) = 36.185051, 84.311420, 1.244418, 9066.234623, 133.815636, 9987.622068
prox:		 289s:303721us (+00s:011749us) = 34.340245, 84.436071, 1.156428, 9079.638714, 124.353924, 9987.622068
prox:		 289s:315469us (+00s:011748us) = 37.083182, 84.317705, 1.583804, 9066.910459, 170.310809, 9987.622068
prox:		 289s:327219us (+00s:011750us) = 36.097527, 84.964006, 1.332407, 9136.408984, 143.277347, 9987.622068
prox:		 289s:338970us (+00s:011751us) = 36.661214, 84.454926, 1.357547, 9081.666224, 145.980693, 9987.622068
prox:		 289s:350716us (+00s:011746us) = 34.994064, 84.255903, 1.219278, 9060.264733, 131.112289, 9987.622068
prox:		 289s:362463us (+00s:011747us) = 35.127668, 84.446546, 1.018160, 9080.765108, 109.485520, 9987.622068
prox:		 289s:374210us (+00s:011747us) = 35.022176, 84.531393, 1.143859, 9089.888902, 123.002251, 9987.622068
prox:		 289s:385958us (+00s:011748us) = 36.150998, 84.326085, 1.143859, 9067.811575, 123.002251, 9987.622068
prox:		 289s:397706us (+00s:011748us) = 34.866256, 85.400809, 1.131289, 9183.379624, 121.650578, 9987.622068
prox:		 289s:409454us (+00s:011748us) = 34.663387, 84.506253, 1.307267, 9087.185556, 140.574001, 9987.622068
prox:		 289s:421201us (+00s:011747us) = 35.350389, 84.536630, 1.407826, 9090.452099, 151.387386, 9987.622068


Stats:

prox:
	# of samples captured: 32
	# of bad samples (corrupted/lost): 0
	calculated odr: 85.093347Hz
	average: rawrange = 35.168491
	average: signalrateperspad = 83.881032, ambientrateperspad = 1.188639
	average: totalsignalrate = 9019.953899, totalambientrate = 127.817586
	average: integrationtime = 9987.622068
	std-dev: rawrange = 1.056934
	std-dev: signalrateperspad = 0.730568, ambientrateperspad = 0.160725
	std-dev: totalsignalrate = 78.559956, totalambientrate = 17.283247
	std-dev: integrationtime = 0.000000
	rms: rawrange = 35.184369
	rms: signalrateperspad = 83.884214, ambientrateperspad = 1.199456
	rms: totalsignalrate = 9020.296005, totalambientrate = 128.980797
	rms: integrationtime = 9987.622068
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:09.49 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:09.49]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:09.49]
CATCH_VALUE => Catch OK : Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 289s:056881us (+00s:000000us) = 36.481819, 82.061411, 0.967880, 8824.285139, 104.078828, 9987.622068prox:		 289s:068647us (+00s:011766us) = 34.006526, 82.696190, 1.093579, 8892.544630, 117.595558, 9987.622068prox:		 289s:080413us (+00s:011766us) = 33.237072, 83.189558, 1.231848, 8945.597799, 132.463962, 9987.622068prox:		 289s:092173us (+00s:011760us) = 36.231566, 82.588299, 0.892461, 8880.942770, 95.968789, 9987.622068prox:		 289s:103930us (+00s:011757us) = 33.954359, 82.904641, 1.357547, 8914.959876, 145.980693, 9987.622068prox:		 289s:115688us (+00s:011758us) = 33.512974, 83.405341, 0.955310, 8968.801521, 102.727154, 9987.622068prox:		 289s:127441us (+00s:011753us) = 33.450519, 83.431528, 0.867321, 8971.617506, 93.265443, 9987.622068prox:		 289s:139196us (+00s:011755us) = 35.473704, 84.170009, 1.081009, 9051.028300, 116.243885, 9987.622068prox:		 289s:150951us (+00s:011755us) = 35.524567, 83.564559, 1.256987, 8985.922713, 135.167309, 9987.622068prox:		 289s:162705us (+00s:011754us) = 33.682225, 83.910231, 1.206708, 9023.093723, 129.760616, 9987.622068prox:		 289s:174456us (+00s:011751us) = 34.598034, 83.693401, 1.143859, 8999.777362, 123.002251, 9987.622068prox:		 289s:186207us (+00s:011751us) = 36.871908, 83.515327, 1.168998, 8980.628660, 125.705597, 9987.622068prox:		 289s:197962us (+00s:011755us) = 36.352708, 83.321542, 1.407826, 8959.790367, 151.387386, 9987.622068prox:		 289s:209717us (+00s:011755us) = 34.361257, 83.907089, 1.043300, 9022.755805, 112.188866, 9987.622068prox:		 289s:221469us (+00s:011752us) = 36.191572, 83.401151, 1.307267, 8968.350963, 140.574001, 9987.622068prox:		 289s:233222us (+00s:011753us) = 34.596005, 84.053737, 1.118719, 9038.525324, 120.298905, 9987.622068prox:		 289s:244972us (+00s:011750us) = 35.139695, 84.461211, 1.030730, 9082.342060, 110.837193, 9987.622068prox:		 289s:256722us (+00s:011750us) = 35.790760, 83.139278, 1.382686, 8940.191107, 148.684040, 9987.622068prox:		 289s:268472us (+00s:011750us) = 34.043477, 84.636142, 1.307267, 9101.152844, 140.574001, 9987.622068prox:		 289s:280222us (+00s:011750us) = 35.348795, 83.654644, 1.168998, 8995.609704, 125.705597, 9987.622068prox:		 289s:291972us (+00s:011750us) = 36.185051, 84.311420, 1.244418, 9066.234623, 133.815636, 9987.622068prox:		 289s:303721us (+00s:011749us) = 34.340245, 84.436071, 1.156428, 9079.638714, 124.353924, 9987.622068prox:		 289s:315469us (+00s:011748us) = 37.083182, 84.317705, 1.583804, 9066.910459, 170.310809, 9987.622068prox:		 289s:327219us (+00s:011750us) = 36.097527, 84.964006, 1.332407, 9136.408984, 143.277347, 9987.622068prox:		 289s:338970us (+00s:011751us) = 36.661214, 84.454926, 1.357547, 9081.666224, 145.980693, 9987.622068prox:		 289s:350716us (+00s:011746us) = 34.994064, 84.255903, 1.219278, 9060.264733, 131.112289, 9987.622068prox:		 289s:362463us (+00s:011747us) = 35.127668, 84.446546, 1.018160, 9080.765108, 109.485520, 9987.622068prox:		 289s:374210us (+00s:011747us) = 35.022176, 84.531393, 1.143859, 9089.888902, 123.002251, 9987.622068prox:		 289s:385958us (+00s:011748us) = 36.150998, 84.326085, 1.143859, 9067.811575, 123.002251, 9987.622068prox:		 289s:397706us (+00s:011748us) = 34.866256, 85.400809, 1.131289, 9183.379624, 121.650578, 9987.622068prox:		 289s:409454us (+00s:011748us) = 34.663387, 84.506253, 1.307267, 9087.185556, 140.574001, 9987.622068prox:		 289s:421201us (+00s:011747us) = 35.350389, 84.536630, 1.407826, 9090.452099, 151.387386, 9987.622068Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.093347Hz	average: rawrange = 35.168491	average: signalrateperspad = 83.881032, ambientrateperspad = 1.188639	average: totalsignalrate = 9019.953899, totalambientrate = 127.817586	average: integrationtime = 9987.622068	std-dev: rawrange = 1.056934	std-dev: signalrateperspad = 0.730568, ambientrateperspad = 0.160725	std-dev: totalsignalrate = 78.559956, totalambientrate = 17.283247	std-dev: integrationtime = 0.000000	rms: rawrange = 35.184369	rms: signalrateperspad = 83.884214, ambientrateperspad = 1.199456	rms: totalsignalrate = 9020.296005, totalambientrate = 128.980797	rms: integrationtime = 9987.622068OK

[2016-04-05 17:39:09.49]
READ_COMMAND => Catch string between sensor --sel prox --sample 32 --stats and [001D38CC:3020213A] :-) == Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 289s:056881us (+00s:000000us) = 36.481819, 82.061411, 0.967880, 8824.285139, 104.078828, 9987.622068prox:		 289s:068647us (+00s:011766us) = 34.006526, 82.696190, 1.093579, 8892.544630, 117.595558, 9987.622068prox:		 289s:080413us (+00s:011766us) = 33.237072, 83.189558, 1.231848, 8945.597799, 132.463962, 9987.622068prox:		 289s:092173us (+00s:011760us) = 36.231566, 82.588299, 0.892461, 8880.942770, 95.968789, 9987.622068prox:		 289s:103930us (+00s:011757us) = 33.954359, 82.904641, 1.357547, 8914.959876, 145.980693, 9987.622068prox:		 289s:115688us (+00s:011758us) = 33.512974, 83.405341, 0.955310, 8968.801521, 102.727154, 9987.622068prox:		 289s:127441us (+00s:011753us) = 33.450519, 83.431528, 0.867321, 8971.617506, 93.265443, 9987.622068prox:		 289s:139196us (+00s:011755us) = 35.473704, 84.170009, 1.081009, 9051.028300, 116.243885, 9987.622068prox:		 289s:150951us (+00s:011755us) = 35.524567, 83.564559, 1.256987, 8985.922713, 135.167309, 9987.622068prox:		 289s:162705us (+00s:011754us) = 33.682225, 83.910231, 1.206708, 9023.093723, 129.760616, 9987.622068prox:		 289s:174456us (+00s:011751us) = 34.598034, 83.693401, 1.143859, 8999.777362, 123.002251, 9987.622068prox:		 289s:186207us (+00s:011751us) = 36.871908, 83.515327, 1.168998, 8980.628660, 125.705597, 9987.622068prox:		 289s:197962us (+00s:011755us) = 36.352708, 83.321542, 1.407826, 8959.790367, 151.387386, 9987.622068prox:		 289s:209717us (+00s:011755us) = 34.361257, 83.907089, 1.043300, 9022.755805, 112.188866, 9987.622068prox:		 289s:221469us (+00s:011752us) = 36.191572, 83.401151, 1.307267, 8968.350963, 140.574001, 9987.622068prox:		 289s:233222us (+00s:011753us) = 34.596005, 84.053737, 1.118719, 9038.525324, 120.298905, 9987.622068prox:		 289s:244972us (+00s:011750us) = 35.139695, 84.461211, 1.030730, 9082.342060, 110.837193, 9987.622068prox:		 289s:256722us (+00s:011750us) = 35.790760, 83.139278, 1.382686, 8940.191107, 148.684040, 9987.622068prox:		 289s:268472us (+00s:011750us) = 34.043477, 84.636142, 1.307267, 9101.152844, 140.574001, 9987.622068prox:		 289s:280222us (+00s:011750us) = 35.348795, 83.654644, 1.168998, 8995.609704, 125.705597, 9987.622068prox:		 289s:291972us (+00s:011750us) = 36.185051, 84.311420, 1.244418, 9066.234623, 133.815636, 9987.622068prox:		 289s:303721us (+00s:011749us) = 34.340245, 84.436071, 1.156428, 9079.638714, 124.353924, 9987.622068prox:		 289s:315469us (+00s:011748us) = 37.083182, 84.317705, 1.583804, 9066.910459, 170.310809, 9987.622068prox:		 289s:327219us (+00s:011750us) = 36.097527, 84.964006, 1.332407, 9136.408984, 143.277347, 9987.622068prox:		 289s:338970us (+00s:011751us) = 36.661214, 84.454926, 1.357547, 9081.666224, 145.980693, 9987.622068prox:		 289s:350716us (+00s:011746us) = 34.994064, 84.255903, 1.219278, 9060.264733, 131.112289, 9987.622068prox:		 289s:362463us (+00s:011747us) = 35.127668, 84.446546, 1.018160, 9080.765108, 109.485520, 9987.622068prox:		 289s:374210us (+00s:011747us) = 35.022176, 84.531393, 1.143859, 9089.888902, 123.002251, 9987.622068prox:		 289s:385958us (+00s:011748us) = 36.150998, 84.326085, 1.143859, 9067.811575, 123.002251, 9987.622068prox:		 289s:397706us (+00s:011748us) = 34.866256, 85.400809, 1.131289, 9183.379624, 121.650578, 9987.622068prox:		 289s:409454us (+00s:011748us) = 34.663387, 84.506253, 1.307267, 9087.185556, 140.574001, 9987.622068prox:		 289s:421201us (+00s:011747us) = 35.350389, 84.536630, 1.407826, 9090.452099, 151.387386, 9987.622068Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.093347Hz	average: rawrange = 35.168491	average: signalrateperspad = 83.881032, ambientrateperspad = 1.188639	average: totalsignalrate = 9019.953899, totalambientrate = 127.817586	average: integrationtime = 9987.622068	std-dev: rawrange = 1.056934	std-dev: signalrateperspad = 0.730568, ambientrateperspad = 0.160725	std-dev: totalsignalrate = 78.559956, totalambientrate = 17.283247	std-dev: integrationtime = 0.000000	rms: rawrange = 35.184369	rms: signalrateperspad = 83.884214, ambientrateperspad = 1.199456	rms: totalsignalrate = 9020.296005, totalambientrate = 128.980797	rms: integrationtime = 9987.622068OK

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 289s:056881us (+00s:000000us) = 36.481819, 82.061411, 0.967880, 8824.285139, 104.078828, 9987.622068prox:		 289s:068647us (+00s:011766us) = 34.006526, 82.696190, 1.093579, 8892.544630, 117.595558, 9987.622068prox:		 289s:080413us (+00s:011766us) = 33.237072, 83.189558, 1.231848, 8945.597799, 132.463962, 9987.622068prox:		 289s:092173us (+00s:011760us) = 36.231566, 82.588299, 0.892461, 8880.942770, 95.968789, 9987.622068prox:		 289s:103930us (+00s:011757us) = 33.954359, 82.904641, 1.357547, 8914.959876, 145.980693, 9987.622068prox:		 289s:115688us (+00s:011758us) = 33.512974, 83.405341, 0.955310, 8968.801521, 102.727154, 9987.622068prox:		 289s:127441us (+00s:011753us) = 33.450519, 83.431528, 0.867321, 8971.617506, 93.265443, 9987.622068prox:		 289s:139196us (+00s:011755us) = 35.473704, 84.170009, 1.081009, 9051.028300, 116.243885, 9987.622068prox:		 289s:150951us (+00s:011755us) = 35.524567, 83.564559, 1.256987, 8985.922713, 135.167309, 9987.622068prox:		 289s:162705us (+00s:011754us) = 33.682225, 83.910231, 1.206708, 9023.093723, 129.760616, 9987.622068prox:		 289s:174456us (+00s:011751us) = 34.598034, 83.693401, 1.143859, 8999.777362, 123.002251, 9987.622068prox:		 289s:186207us (+00s:011751us) = 36.871908, 83.515327, 1.168998, 8980.628660, 125.705597, 9987.622068prox:		 289s:197962us (+00s:011755us) = 36.352708, 83.321542, 1.407826, 8959.790367, 151.387386, 9987.622068prox:		 289s:209717us (+00s:011755us) = 34.361257, 83.907089, 1.043300, 9022.755805, 112.188866, 9987.622068prox:		 289s:221469us (+00s:011752us) = 36.191572, 83.401151, 1.307267, 8968.350963, 140.574001, 9987.622068prox:		 289s:233222us (+00s:011753us) = 34.596005, 84.053737, 1.118719, 9038.525324, 120.298905, 9987.622068prox:		 289s:244972us (+00s:011750us) = 35.139695, 84.461211, 1.030730, 9082.342060, 110.837193, 9987.622068prox:		 289s:256722us (+00s:011750us) = 35.790760, 83.139278, 1.382686, 8940.191107, 148.684040, 9987.622068prox:		 289s:268472us (+00s:011750us) = 34.043477, 84.636142, 1.307267, 9101.152844, 140.574001, 9987.622068prox:		 289s:280222us (+00s:011750us) = 35.348795, 83.654644, 1.168998, 8995.609704, 125.705597, 9987.622068prox:		 289s:291972us (+00s:011750us) = 36.185051, 84.311420, 1.244418, 9066.234623, 133.815636, 9987.622068prox:		 289s:303721us (+00s:011749us) = 34.340245, 84.436071, 1.156428, 9079.638714, 124.353924, 9987.622068prox:		 289s:315469us (+00s:011748us) = 37.083182, 84.317705, 1.583804, 9066.910459, 170.310809, 9987.622068prox:		 289s:327219us (+00s:011750us) = 36.097527, 84.964006, 1.332407, 9136.408984, 143.277347, 9987.622068prox:		 289s:338970us (+00s:011751us) = 36.661214, 84.454926, 1.357547, 9081.666224, 145.980693, 9987.622068prox:		 289s:350716us (+00s:011746us) = 34.994064, 84.255903, 1.219278, 9060.264733, 131.112289, 9987.622068prox:		 289s:362463us (+00s:011747us) = 35.127668, 84.446546, 1.018160, 9080.765108, 109.485520, 9987.622068prox:		 289s:374210us (+00s:011747us) = 35.022176, 84.531393, 1.143859, 9089.888902, 123.002251, 9987.622068prox:		 289s:385958us (+00s:011748us) = 36.150998, 84.326085, 1.143859, 9067.811575, 123.002251, 9987.622068prox:		 289s:397706us (+00s:011748us) = 34.866256, 85.400809, 1.131289, 9183.379624, 121.650578, 9987.622068prox:		 289s:409454us (+00s:011748us) = 34.663387, 84.506253, 1.307267, 9087.185556, 140.574001, 9987.622068prox:		 289s:421201us (+00s:011747us) = 35.350389, 84.536630, 1.407826, 9090.452099, 151.387386, 9987.622068Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.093347Hz	average: rawrange = 35.168491	average: signalrateperspad = 83.881032, ambientrateperspad = 1.188639	average: totalsignalrate = 9019.953899, totalambientrate = 127.817586	average: integrationtime = 9987.622068	std-dev: rawrange = 1.056934	std-dev: signalrateperspad = 0.730568, ambientrateperspad = 0.160725	std-dev: totalsignalrate = 78.559956, totalambientrate = 17.283247	std-dev: integrationtime = 0.000000	rms: rawrange = 35.184369	rms: signalrateperspad = 83.884214, ambientrateperspad = 1.199456	rms: totalsignalrate = 9020.296005, totalambientrate = 128.980797	rms: integrationtime = 9987.622068OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.770875s) ++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_stats 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 289s:056881us (+00s:000000us) = 36.481819, 82.061411, 0.967880, 8824.285139, 104.078828, 9987.622068prox:		 289s:068647us (+00s:011766us) = 34.006526, 82.696190, 1.093579, 8892.544630, 117.595558, 9987.622068prox:		 289s:080413us (+00s:011766us) = 33.237072, 83.189558, 1.231848, 8945.597799, 132.463962, 9987.622068prox:		 289s:092173us (+00s:011760us) = 36.231566, 82.588299, 0.892461, 8880.942770, 95.968789, 9987.622068prox:		 289s:103930us (+00s:011757us) = 33.954359, 82.904641, 1.357547, 8914.959876, 145.980693, 9987.622068prox:		 289s:115688us (+00s:011758us) = 33.512974, 83.405341, 0.955310, 8968.801521, 102.727154, 9987.622068prox:		 289s:127441us (+00s:011753us) = 33.450519, 83.431528, 0.867321, 8971.617506, 93.265443, 9987.622068prox:		 289s:139196us (+00s:011755us) = 35.473704, 84.170009, 1.081009, 9051.028300, 116.243885, 9987.622068prox:		 289s:150951us (+00s:011755us) = 35.524567, 83.564559, 1.256987, 8985.922713, 135.167309, 9987.622068prox:		 289s:162705us (+00s:011754us) = 33.682225, 83.910231, 1.206708, 9023.093723, 129.760616, 9987.622068prox:		 289s:174456us (+00s:011751us) = 34.598034, 83.693401, 1.143859, 8999.777362, 123.002251, 9987.622068prox:		 289s:186207us (+00s:011751us) = 36.871908, 83.515327, 1.168998, 8980.628660, 125.705597, 9987.622068prox:		 289s:197962us (+00s:011755us) = 36.352708, 83.321542, 1.407826, 8959.790367, 151.387386, 9987.622068prox:		 289s:209717us (+00s:011755us) = 34.361257, 83.907089, 1.043300, 9022.755805, 112.188866, 9987.622068prox:		 289s:221469us (+00s:011752us) = 36.191572, 83.401151, 1.307267, 8968.350963, 140.574001, 9987.622068prox:		 289s:233222us (+00s:011753us) = 34.596005, 84.053737, 1.118719, 9038.525324, 120.298905, 9987.622068prox:		 289s:244972us (+00s:011750us) = 35.139695, 84.461211, 1.030730, 9082.342060, 110.837193, 9987.622068prox:		 289s:256722us (+00s:011750us) = 35.790760, 83.139278, 1.382686, 8940.191107, 148.684040, 9987.622068prox:		 289s:268472us (+00s:011750us) = 34.043477, 84.636142, 1.307267, 9101.152844, 140.574001, 9987.622068prox:		 289s:280222us (+00s:011750us) = 35.348795, 83.654644, 1.168998, 8995.609704, 125.705597, 9987.622068prox:		 289s:291972us (+00s:011750us) = 36.185051, 84.311420, 1.244418, 9066.234623, 133.815636, 9987.622068prox:		 289s:303721us (+00s:011749us) = 34.340245, 84.436071, 1.156428, 9079.638714, 124.353924, 9987.622068prox:		 289s:315469us (+00s:011748us) = 37.083182, 84.317705, 1.583804, 9066.910459, 170.310809, 9987.622068prox:		 289s:327219us (+00s:011750us) = 36.097527, 84.964006, 1.332407, 9136.408984, 143.277347, 9987.622068prox:		 289s:338970us (+00s:011751us) = 36.661214, 84.454926, 1.357547, 9081.666224, 145.980693, 9987.622068prox:		 289s:350716us (+00s:011746us) = 34.994064, 84.255903, 1.219278, 9060.264733, 131.112289, 9987.622068prox:		 289s:362463us (+00s:011747us) = 35.127668, 84.446546, 1.018160, 9080.765108, 109.485520, 9987.622068prox:		 289s:374210us (+00s:011747us) = 35.022176, 84.531393, 1.143859, 9089.888902, 123.002251, 9987.622068prox:		 289s:385958us (+00s:011748us) = 36.150998, 84.326085, 1.143859, 9067.811575, 123.002251, 9987.622068prox:		 289s:397706us (+00s:011748us) = 34.866256, 85.400809, 1.131289, 9183.379624, 121.650578, 9987.622068prox:		 289s:409454us (+00s:011748us) = 34.663387, 84.506253, 1.307267, 9087.185556, 140.574001, 9987.622068prox:		 289s:421201us (+00s:011747us) = 35.350389, 84.536630, 1.407826, 9090.452099, 151.387386, 9987.622068Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.093347Hz	average: rawrange = 35.168491	average: signalrateperspad = 83.881032, ambientrateperspad = 1.188639	average: totalsignalrate = 9019.953899, totalambientrate = 127.817586	average: integrationtime = 9987.622068	std-dev: rawrange = 1.056934	std-dev: signalrateperspad = 0.730568, ambientrateperspad = 0.160725	std-dev: totalsignalrate = 78.559956, totalambientrate = 17.283247	std-dev: integrationtime = 0.000000	rms: rawrange = 35.184369	rms: signalrateperspad = 83.884214, ambientrateperspad = 1.199456	rms: totalsignalrate = 9020.296005, totalambientrate = 128.980797	rms: integrationtime = 9987.622068OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_stats 
REGEX ==> average:\s*(.*?)std-dev: 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> rawrange = 35.168491	average: signalrateperspad = 83.881032, ambientrateperspad = 1.188639	average: totalsignalrate = 9019.953899, totalambientrate = 127.817586	average: integrationtime = 9987.622068
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000983s) +++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_AVE 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> rawrange = 35.168491	average: signalrateperspad = 83.881032, ambientrateperspad = 1.188639	average: totalsignalrate = 9019.953899, totalambientrate = 127.817586	average: integrationtime = 9987.622068
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_stats 
REGEX ==> std-dev:\s*(.*?)rms: 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> rawrange = 1.056934	std-dev: signalrateperspad = 0.730568, ambientrateperspad = 0.160725	std-dev: totalsignalrate = 78.559956, totalambientrate = 17.283247	std-dev: integrationtime = 0.000000
+++++++++++++++ [8] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000950s) +++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_STD 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> rawrange = 1.056934	std-dev: signalrateperspad = 0.730568, ambientrateperspad = 0.160725	std-dev: totalsignalrate = 78.559956, totalambientrate = 17.283247	std-dev: integrationtime = 0.000000
++++++++++ [9] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_AVE 
REGEX ==> rawrange =\s(.*?)\s 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 35.168491
++++++++++++++ [10] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000207s) ++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RAW_DIST_AVE 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 35.168491
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_NO_TARGET_RAW_DIST_AVE_spec*] 
 
}

[2016-04-05 17:39:09.49]
JUDGE_SPEC =>  value is [35.168491], spec is [Item0=-20 ; Item1=100 ; ], mode is [1]

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 35.168491
+++++++++++++++ [12] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000623s) +++++++++++++++

[2016-04-05 17:39:09.49]
========== END TEST PROX_QT_NO_TARGET_RAW_DIST_AVE (TestResult : PASS ; Duration : 0.826905s) ==========

[2016-04-05 17:39:09.49]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_NO_TARGET_RAW_DIST_AVE,,,35.168491,-20,100,,)

[2016-04-05 17:39:09.49]
Item Name:PROX_QT_NO_TARGET_RAW_DIST_AVE, [-20,100]

[2016-04-05 17:39:09.49]
========================== START TEST PROX_QT_NO_TARGET_RAW_DIST_STD (Item22) ==========================

[2016-04-05 17:39:09.49]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_STD 
REGEX ==> rawrange =\s(.*?)\s 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 1.056934
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000238s) +++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RAW_DIST_STD 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 1.056934
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_NO_TARGET_RAW_DIST_STD_spec*] 
 
}

[2016-04-05 17:39:09.49]
JUDGE_SPEC =>  value is [1.056934], spec is [Item0=0.01 ; Item1=3 ; ], mode is [1]

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 1.056934
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000782s) +++++++++++++++

[2016-04-05 17:39:09.49]
========== END TEST PROX_QT_NO_TARGET_RAW_DIST_STD (TestResult : PASS ; Duration : 0.005750s) ==========

[2016-04-05 17:39:09.49]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_NO_TARGET_RAW_DIST_STD,,,1.056934,0.01,3,,)

[2016-04-05 17:39:09.49]
Item Name:PROX_QT_NO_TARGET_RAW_DIST_STD, [0.01,3]

[2016-04-05 17:39:09.49]
============================ START TEST PROX_QT_NO_TARGET_SIG_AVE (Item23) ============================

[2016-04-05 17:39:09.49]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_AVE 
REGEX ==> average: signalrateperspad =\s(.*?), 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 83.881032
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000282s) +++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> SIG_AVE 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 83.881032
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_NO_TARGET_SIG_AVE_spec*] 
 
}

[2016-04-05 17:39:09.49]
JUDGE_SPEC =>  value is [83.881032], spec is [Item0=20 ; Item1=300 ; ], mode is [1]

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 83.881032
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000779s) +++++++++++++++

[2016-04-05 17:39:09.49]
============ END TEST PROX_QT_NO_TARGET_SIG_AVE (TestResult : PASS ; Duration : 0.006286s) ============

[2016-04-05 17:39:09.49]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_NO_TARGET_SIG_AVE,,,83.881032,20,300,,)

[2016-04-05 17:39:09.49]
Item Name:PROX_QT_NO_TARGET_SIG_AVE, [20,300]

[2016-04-05 17:39:09.49]
============================ START TEST PROX_QT_NO_TARGET_SIG_STD (Item24) ============================

[2016-04-05 17:39:09.49]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_STD 
REGEX ==> std-dev: signalrateperspad =\s(.*?), 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 0.730568
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000402s) +++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> SIG_STD 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 0.730568
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_NO_TARGET_SIG_STD_spec*] 
 
}

[2016-04-05 17:39:09.49]
JUDGE_SPEC =>  value is [0.730568], spec is [Item0=0.01 ; Item1=3 ; ], mode is [1]

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 0.730568
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000806s) +++++++++++++++

[2016-04-05 17:39:09.49]
============ END TEST PROX_QT_NO_TARGET_SIG_STD (TestResult : PASS ; Duration : 0.006460s) ============

[2016-04-05 17:39:09.49]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_NO_TARGET_SIG_STD,,,0.730568,0.01,3,,)

[2016-04-05 17:39:09.49]
Item Name:PROX_QT_NO_TARGET_SIG_STD, [0.01,3]

[2016-04-05 17:39:09.49]
============================ START TEST PROX_QT_NO_TARGET_AMB_AVE (Item25) ============================

[2016-04-05 17:39:09.49]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_AVE 
REGEX ==> ambientrateperspad =\s(.*?)\s 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 1.188639
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000255s) +++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AMB_AVE 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 1.188639
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_NO_TARGET_AMB_AVE_spec*] 
 
}

[2016-04-05 17:39:09.49]
JUDGE_SPEC =>  value is [1.188639], spec is [Item0=0.5 ; Item1=3 ; ], mode is [1]

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 1.188639
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000833s) +++++++++++++++

[2016-04-05 17:39:09.49]
============ END TEST PROX_QT_NO_TARGET_AMB_AVE (TestResult : PASS ; Duration : 0.005843s) ============

[2016-04-05 17:39:09.49]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_NO_TARGET_AMB_AVE,,,1.188639,0.5,3,,)

[2016-04-05 17:39:09.49]
Item Name:PROX_QT_NO_TARGET_AMB_AVE, [0.5,3]

[2016-04-05 17:39:09.49]
============================ START TEST PROX_QT_NO_TARGET_AMB_STD (Item26) ============================

[2016-04-05 17:39:09.49]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_STD 
REGEX ==> ambientrateperspad =\s(.*?)\s 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 0.160725
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000278s) +++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AMB_STD 
}

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 0.160725
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_NO_TARGET_AMB_STD_spec*] 
 
}

[2016-04-05 17:39:09.49]
JUDGE_SPEC =>  value is [0.160725], spec is [Item0=0.01 ; Item1=0.5 ; ], mode is [1]

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 0.160725
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000802s) +++++++++++++++

[2016-04-05 17:39:09.49]
============ END TEST PROX_QT_NO_TARGET_AMB_STD (TestResult : PASS ; Duration : 0.006323s) ============

[2016-04-05 17:39:09.49]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_NO_TARGET_AMB_STD,,,0.160725,0.01,0.5,,)

[2016-04-05 17:39:09.49]
Item Name:PROX_QT_NO_TARGET_AMB_STD, [0.01,0.5]

[2016-04-05 17:39:09.49]
=========================== START TEST PROX_QT_TARGET_RAW_DIST_AVE (Item27) ===========================

[2016-04-05 17:39:09.49]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Prox Cap 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:09.49]
Write to ---> FIXTURE , command[Close Prox Cap(STRING)]

[2016-04-05 17:39:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Prox Cap,2,0;return value:0!

[2016-04-05 17:39:09.49]
PostTXToUI ===> 
{
Info ==> Close Prox Cap 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:09.49 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:09.49]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006841s) +++++++++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Prox Cap 
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Prox Cap
Close Prox Cap Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:09.49]
PostRXToUI ===> 
{
Info ==> Close Prox Cap
Close Prox Cap Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:09.49 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:09.49]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:09.49]
CATCH_VALUE => Catch OK : Close Prox Cap Pass

[2016-04-05 17:39:09.49]
READ_COMMAND => Catch string between Close Prox Cap and @_@ == Close Prox Cap Pass

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> Close Prox Cap Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.412532s) ++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel prox --sample 32 --stats 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:09.49]
Write to ---> MOBILE , command[sensor --sel prox --sample 32 --stats(STRING)]

[2016-04-05 17:39:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel prox --sample 32 --stats,2,0;return value:0!

[2016-04-05 17:39:09.49]
PostTXToUI ===> 
{
Info ==> sensor --sel prox --sample 32 --stats 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:09.49 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:09.49]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:09.49]
RETURN_VALUE ===> Close Prox Cap Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005771s) +++++++++++++++++++++

[2016-04-05 17:39:09.49]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel prox --sample 32 --stats 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel prox --sample 32 --stats
Capturing 32 samples from:
prox @ 60.00 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
prox:		 290s:462155us (+00s:000000us) = -52.822352, 927.738822, 6.662036, 99762.260042, 716.386738, 9987.622068
prox:		 290s:473916us (+00s:011761us) = -53.113614, 930.380591, 6.687175, 100046.336670, 719.090084, 9987.622068
prox:		 290s:485675us (+00s:011759us) = -53.455884, 929.118366, 6.586616, 99910.606164, 708.276700, 9987.622068
prox:		 290s:497431us (+00s:011756us) = -54.791922, 930.123956, 6.486057, 100018.740011, 697.463315, 9987.622068
prox:		 290s:509187us (+00s:011756us) = -54.907123, 934.173552, 6.347789, 100454.204026, 682.594911, 9987.622068
prox:		 290s:520941us (+00s:011754us) = -54.823222, 934.104418, 6.498627, 100446.769824, 698.814988, 9987.622068
prox:		 290s:532699us (+00s:011758us) = -54.353145, 933.192054, 6.888294, 100348.660885, 740.716854, 9987.622068
prox:		 290s:544451us (+00s:011752us) = -54.011311, 933.724179, 6.385498, 100405.881713, 686.649930, 9987.622068
prox:		 290s:556202us (+00s:011751us) = -54.673389, 933.608955, 6.410638, 100393.491376, 689.353276, 9987.622068
prox:		 290s:567952us (+00s:011750us) = -56.704544, 934.742339, 6.284939, 100515.367233, 675.836545, 9987.622068
prox:		 290s:579700us (+00s:011748us) = -54.224613, 935.776212, 6.360359, 100626.542345, 683.946584, 9987.622068
prox:		 290s:591450us (+00s:011750us) = -54.825685, 935.963713, 6.473488, 100646.704802, 696.111642, 9987.622068
prox:		 290s:603199us (+00s:011749us) = -55.442118, 935.268179, 6.448348, 100571.912224, 693.408296, 9987.622068
prox:		 290s:614946us (+00s:011747us) = -54.213021, 935.128863, 6.825444, 100556.931181, 733.958488, 9987.622068
prox:		 290s:626696us (+00s:011750us) = -54.211282, 934.005954, 6.347789, 100436.181718, 682.594911, 9987.622068
prox:		 290s:638445us (+00s:011749us) = -53.672084, 933.950437, 6.473488, 100430.211828, 696.111642, 9987.622068
prox:		 290s:650191us (+00s:011746us) = -55.161144, 933.559723, 6.423208, 100388.197323, 690.704949, 9987.622068
prox:		 290s:661940us (+00s:011749us) = -55.674113, 932.695544, 6.737455, 100295.269798, 724.496777, 9987.622068
prox:		 290s:673687us (+00s:011747us) = -55.797139, 931.794703, 6.435778, 100198.399893, 692.056622, 9987.622068
prox:		 290s:685434us (+00s:011747us) = -55.419657, 932.533183, 6.284939, 100277.810687, 675.836545, 9987.622068
prox:		 290s:697182us (+00s:011748us) = -56.535003, 931.769563, 6.410638, 100195.696547, 689.353276, 9987.622068
prox:		 290s:708926us (+00s:011744us) = -55.359376, 927.731489, 6.913433, 99761.471566, 743.420200, 9987.622068
prox:		 290s:720672us (+00s:011746us) = -54.534133, 927.004531, 6.636896, 99683.299806, 713.683392, 9987.622068
prox:		 290s:732417us (+00s:011745us) = -56.524280, 926.935397, 6.812874, 99675.865604, 732.606815, 9987.622068
prox:		 290s:744161us (+00s:011744us) = -56.962043, 924.646631, 6.536337, 99429.748462, 702.870007, 9987.622068
prox:		 290s:755911us (+00s:011750us) = -55.118252, 924.238110, 6.636896, 99385.819086, 713.683392, 9987.622068
prox:		 290s:767657us (+00s:011746us) = -53.339089, 925.709833, 6.574047, 99544.077477, 706.925026, 9987.622068
prox:		 290s:779403us (+00s:011746us) = -52.445740, 924.499983, 6.900863, 99413.978942, 742.068527, 9987.622068
prox:		 290s:791148us (+00s:011745us) = -56.502109, 924.888601, 6.712315, 99455.768169, 721.793430, 9987.622068
prox:		 290s:802892us (+00s:011744us) = -53.703384, 925.419679, 6.611756, 99512.876357, 710.980046, 9987.622068
prox:		 290s:814635us (+00s:011743us) = -53.100428, 926.060743, 6.850584, 99581.811684, 736.661834, 9987.622068
prox:		 290s:826378us (+00s:011743us) = -54.749030, 925.226941, 6.662036, 99492.150703, 716.386738, 9987.622068


Stats:

prox:
	# of samples captured: 32
	# of bad samples (corrupted/lost): 0
	calculated odr: 85.115558Hz
	average: rawrange = -54.724070
	average: signalrateperspad = 930.491101, ambientrateperspad = 6.572083
	average: totalsignalrate = 100058.220129, totalambientrate = 706.713828
	average: integrationtime = 9987.622068
	std-dev: rawrange = 1.167860
	std-dev: signalrateperspad = 3.948696, ambientrateperspad = 0.185222
	std-dev: totalsignalrate = 424.613976, totalambientrate = 19.917435
	std-dev: integrationtime = 0.000000
	rms: rawrange = 54.736530
	rms: signalrateperspad = 930.499480, ambientrateperspad = 6.574692
	rms: totalsignalrate = 100059.121086, totalambientrate = 706.994440
	rms: integrationtime = 9987.622068
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:10.410]
PostRXToUI ===> 
{
Info ==> sensor --sel prox --sample 32 --stats
Capturing 32 samples from:
prox @ 60.00 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
prox:		 290s:462155us (+00s:000000us) = -52.822352, 927.738822, 6.662036, 99762.260042, 716.386738, 9987.622068
prox:		 290s:473916us (+00s:011761us) = -53.113614, 930.380591, 6.687175, 100046.336670, 719.090084, 9987.622068
prox:		 290s:485675us (+00s:011759us) = -53.455884, 929.118366, 6.586616, 99910.606164, 708.276700, 9987.622068
prox:		 290s:497431us (+00s:011756us) = -54.791922, 930.123956, 6.486057, 100018.740011, 697.463315, 9987.622068
prox:		 290s:509187us (+00s:011756us) = -54.907123, 934.173552, 6.347789, 100454.204026, 682.594911, 9987.622068
prox:		 290s:520941us (+00s:011754us) = -54.823222, 934.104418, 6.498627, 100446.769824, 698.814988, 9987.622068
prox:		 290s:532699us (+00s:011758us) = -54.353145, 933.192054, 6.888294, 100348.660885, 740.716854, 9987.622068
prox:		 290s:544451us (+00s:011752us) = -54.011311, 933.724179, 6.385498, 100405.881713, 686.649930, 9987.622068
prox:		 290s:556202us (+00s:011751us) = -54.673389, 933.608955, 6.410638, 100393.491376, 689.353276, 9987.622068
prox:		 290s:567952us (+00s:011750us) = -56.704544, 934.742339, 6.284939, 100515.367233, 675.836545, 9987.622068
prox:		 290s:579700us (+00s:011748us) = -54.224613, 935.776212, 6.360359, 100626.542345, 683.946584, 9987.622068
prox:		 290s:591450us (+00s:011750us) = -54.825685, 935.963713, 6.473488, 100646.704802, 696.111642, 9987.622068
prox:		 290s:603199us (+00s:011749us) = -55.442118, 935.268179, 6.448348, 100571.912224, 693.408296, 9987.622068
prox:		 290s:614946us (+00s:011747us) = -54.213021, 935.128863, 6.825444, 100556.931181, 733.958488, 9987.622068
prox:		 290s:626696us (+00s:011750us) = -54.211282, 934.005954, 6.347789, 100436.181718, 682.594911, 9987.622068
prox:		 290s:638445us (+00s:011749us) = -53.672084, 933.950437, 6.473488, 100430.211828, 696.111642, 9987.622068
prox:		 290s:650191us (+00s:011746us) = -55.161144, 933.559723, 6.423208, 100388.197323, 690.704949, 9987.622068
prox:		 290s:661940us (+00s:011749us) = -55.674113, 932.695544, 6.737455, 100295.269798, 724.496777, 9987.622068
prox:		 290s:673687us (+00s:011747us) = -55.797139, 931.794703, 6.435778, 100198.399893, 692.056622, 9987.622068
prox:		 290s:685434us (+00s:011747us) = -55.419657, 932.533183, 6.284939, 100277.810687, 675.836545, 9987.622068
prox:		 290s:697182us (+00s:011748us) = -56.535003, 931.769563, 6.410638, 100195.696547, 689.353276, 9987.622068
prox:		 290s:708926us (+00s:011744us) = -55.359376, 927.731489, 6.913433, 99761.471566, 743.420200, 9987.622068
prox:		 290s:720672us (+00s:011746us) = -54.534133, 927.004531, 6.636896, 99683.299806, 713.683392, 9987.622068
prox:		 290s:732417us (+00s:011745us) = -56.524280, 926.935397, 6.812874, 99675.865604, 732.606815, 9987.622068
prox:		 290s:744161us (+00s:011744us) = -56.962043, 924.646631, 6.536337, 99429.748462, 702.870007, 9987.622068
prox:		 290s:755911us (+00s:011750us) = -55.118252, 924.238110, 6.636896, 99385.819086, 713.683392, 9987.622068
prox:		 290s:767657us (+00s:011746us) = -53.339089, 925.709833, 6.574047, 99544.077477, 706.925026, 9987.622068
prox:		 290s:779403us (+00s:011746us) = -52.445740, 924.499983, 6.900863, 99413.978942, 742.068527, 9987.622068
prox:		 290s:791148us (+00s:011745us) = -56.502109, 924.888601, 6.712315, 99455.768169, 721.793430, 9987.622068
prox:		 290s:802892us (+00s:011744us) = -53.703384, 925.419679, 6.611756, 99512.876357, 710.980046, 9987.622068
prox:		 290s:814635us (+00s:011743us) = -53.100428, 926.060743, 6.850584, 99581.811684, 736.661834, 9987.622068
prox:		 290s:826378us (+00s:011743us) = -54.749030, 925.226941, 6.662036, 99492.150703, 716.386738, 9987.622068


Stats:

prox:
	# of samples captured: 32
	# of bad samples (corrupted/lost): 0
	calculated odr: 85.115558Hz
	average: rawrange = -54.724070
	average: signalrateperspad = 930.491101, ambientrateperspad = 6.572083
	average: totalsignalrate = 100058.220129, totalambientrate = 706.713828
	average: integrationtime = 9987.622068
	std-dev: rawrange = 1.167860
	std-dev: signalrateperspad = 3.948696, ambientrateperspad = 0.185222
	std-dev: totalsignalrate = 424.613976, totalambientrate = 19.917435
	std-dev: integrationtime = 0.000000
	rms: rawrange = 54.736530
	rms: signalrateperspad = 930.499480, ambientrateperspad = 6.574692
	rms: totalsignalrate = 100059.121086, totalambientrate = 706.994440
	rms: integrationtime = 9987.622068
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:10.410 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:10.410]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:10.410]
CATCH_VALUE => Catch OK : Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 290s:462155us (+00s:000000us) = -52.822352, 927.738822, 6.662036, 99762.260042, 716.386738, 9987.622068prox:		 290s:473916us (+00s:011761us) = -53.113614, 930.380591, 6.687175, 100046.336670, 719.090084, 9987.622068prox:		 290s:485675us (+00s:011759us) = -53.455884, 929.118366, 6.586616, 99910.606164, 708.276700, 9987.622068prox:		 290s:497431us (+00s:011756us) = -54.791922, 930.123956, 6.486057, 100018.740011, 697.463315, 9987.622068prox:		 290s:509187us (+00s:011756us) = -54.907123, 934.173552, 6.347789, 100454.204026, 682.594911, 9987.622068prox:		 290s:520941us (+00s:011754us) = -54.823222, 934.104418, 6.498627, 100446.769824, 698.814988, 9987.622068prox:		 290s:532699us (+00s:011758us) = -54.353145, 933.192054, 6.888294, 100348.660885, 740.716854, 9987.622068prox:		 290s:544451us (+00s:011752us) = -54.011311, 933.724179, 6.385498, 100405.881713, 686.649930, 9987.622068prox:		 290s:556202us (+00s:011751us) = -54.673389, 933.608955, 6.410638, 100393.491376, 689.353276, 9987.622068prox:		 290s:567952us (+00s:011750us) = -56.704544, 934.742339, 6.284939, 100515.367233, 675.836545, 9987.622068prox:		 290s:579700us (+00s:011748us) = -54.224613, 935.776212, 6.360359, 100626.542345, 683.946584, 9987.622068prox:		 290s:591450us (+00s:011750us) = -54.825685, 935.963713, 6.473488, 100646.704802, 696.111642, 9987.622068prox:		 290s:603199us (+00s:011749us) = -55.442118, 935.268179, 6.448348, 100571.912224, 693.408296, 9987.622068prox:		 290s:614946us (+00s:011747us) = -54.213021, 935.128863, 6.825444, 100556.931181, 733.958488, 9987.622068prox:		 290s:626696us (+00s:011750us) = -54.211282, 934.005954, 6.347789, 100436.181718, 682.594911, 9987.622068prox:		 290s:638445us (+00s:011749us) = -53.672084, 933.950437, 6.473488, 100430.211828, 696.111642, 9987.622068prox:		 290s:650191us (+00s:011746us) = -55.161144, 933.559723, 6.423208, 100388.197323, 690.704949, 9987.622068prox:		 290s:661940us (+00s:011749us) = -55.674113, 932.695544, 6.737455, 100295.269798, 724.496777, 9987.622068prox:		 290s:673687us (+00s:011747us) = -55.797139, 931.794703, 6.435778, 100198.399893, 692.056622, 9987.622068prox:		 290s:685434us (+00s:011747us) = -55.419657, 932.533183, 6.284939, 100277.810687, 675.836545, 9987.622068prox:		 290s:697182us (+00s:011748us) = -56.535003, 931.769563, 6.410638, 100195.696547, 689.353276, 9987.622068prox:		 290s:708926us (+00s:011744us) = -55.359376, 927.731489, 6.913433, 99761.471566, 743.420200, 9987.622068prox:		 290s:720672us (+00s:011746us) = -54.534133, 927.004531, 6.636896, 99683.299806, 713.683392, 9987.622068prox:		 290s:732417us (+00s:011745us) = -56.524280, 926.935397, 6.812874, 99675.865604, 732.606815, 9987.622068prox:		 290s:744161us (+00s:011744us) = -56.962043, 924.646631, 6.536337, 99429.748462, 702.870007, 9987.622068prox:		 290s:755911us (+00s:011750us) = -55.118252, 924.238110, 6.636896, 99385.819086, 713.683392, 9987.622068prox:		 290s:767657us (+00s:011746us) = -53.339089, 925.709833, 6.574047, 99544.077477, 706.925026, 9987.622068prox:		 290s:779403us (+00s:011746us) = -52.445740, 924.499983, 6.900863, 99413.978942, 742.068527, 9987.622068prox:		 290s:791148us (+00s:011745us) = -56.502109, 924.888601, 6.712315, 99455.768169, 721.793430, 9987.622068prox:		 290s:802892us (+00s:011744us) = -53.703384, 925.419679, 6.611756, 99512.876357, 710.980046, 9987.622068prox:		 290s:814635us (+00s:011743us) = -53.100428, 926.060743, 6.850584, 99581.811684, 736.661834, 9987.622068prox:		 290s:826378us (+00s:011743us) = -54.749030, 925.226941, 6.662036, 99492.150703, 716.386738, 9987.622068Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.115558Hz	average: rawrange = -54.724070	average: signalrateperspad = 930.491101, ambientrateperspad = 6.572083	average: totalsignalrate = 100058.220129, totalambientrate = 706.713828	average: integrationtime = 9987.622068	std-dev: rawrange = 1.167860	std-dev: signalrateperspad = 3.948696, ambientrateperspad = 0.185222	std-dev: totalsignalrate = 424.613976, totalambientrate = 19.917435	std-dev: integrationtime = 0.000000	rms: rawrange = 54.736530	rms: signalrateperspad = 930.499480, ambientrateperspad = 6.574692	rms: totalsignalrate = 100059.121086, totalambientrate = 706.994440	rms: integrationtime = 9987.622068OK

[2016-04-05 17:39:10.410]
READ_COMMAND => Catch string between sensor --sel prox --sample 32 --stats and [001D38CC:3020213A] :-) == Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 290s:462155us (+00s:000000us) = -52.822352, 927.738822, 6.662036, 99762.260042, 716.386738, 9987.622068prox:		 290s:473916us (+00s:011761us) = -53.113614, 930.380591, 6.687175, 100046.336670, 719.090084, 9987.622068prox:		 290s:485675us (+00s:011759us) = -53.455884, 929.118366, 6.586616, 99910.606164, 708.276700, 9987.622068prox:		 290s:497431us (+00s:011756us) = -54.791922, 930.123956, 6.486057, 100018.740011, 697.463315, 9987.622068prox:		 290s:509187us (+00s:011756us) = -54.907123, 934.173552, 6.347789, 100454.204026, 682.594911, 9987.622068prox:		 290s:520941us (+00s:011754us) = -54.823222, 934.104418, 6.498627, 100446.769824, 698.814988, 9987.622068prox:		 290s:532699us (+00s:011758us) = -54.353145, 933.192054, 6.888294, 100348.660885, 740.716854, 9987.622068prox:		 290s:544451us (+00s:011752us) = -54.011311, 933.724179, 6.385498, 100405.881713, 686.649930, 9987.622068prox:		 290s:556202us (+00s:011751us) = -54.673389, 933.608955, 6.410638, 100393.491376, 689.353276, 9987.622068prox:		 290s:567952us (+00s:011750us) = -56.704544, 934.742339, 6.284939, 100515.367233, 675.836545, 9987.622068prox:		 290s:579700us (+00s:011748us) = -54.224613, 935.776212, 6.360359, 100626.542345, 683.946584, 9987.622068prox:		 290s:591450us (+00s:011750us) = -54.825685, 935.963713, 6.473488, 100646.704802, 696.111642, 9987.622068prox:		 290s:603199us (+00s:011749us) = -55.442118, 935.268179, 6.448348, 100571.912224, 693.408296, 9987.622068prox:		 290s:614946us (+00s:011747us) = -54.213021, 935.128863, 6.825444, 100556.931181, 733.958488, 9987.622068prox:		 290s:626696us (+00s:011750us) = -54.211282, 934.005954, 6.347789, 100436.181718, 682.594911, 9987.622068prox:		 290s:638445us (+00s:011749us) = -53.672084, 933.950437, 6.473488, 100430.211828, 696.111642, 9987.622068prox:		 290s:650191us (+00s:011746us) = -55.161144, 933.559723, 6.423208, 100388.197323, 690.704949, 9987.622068prox:		 290s:661940us (+00s:011749us) = -55.674113, 932.695544, 6.737455, 100295.269798, 724.496777, 9987.622068prox:		 290s:673687us (+00s:011747us) = -55.797139, 931.794703, 6.435778, 100198.399893, 692.056622, 9987.622068prox:		 290s:685434us (+00s:011747us) = -55.419657, 932.533183, 6.284939, 100277.810687, 675.836545, 9987.622068prox:		 290s:697182us (+00s:011748us) = -56.535003, 931.769563, 6.410638, 100195.696547, 689.353276, 9987.622068prox:		 290s:708926us (+00s:011744us) = -55.359376, 927.731489, 6.913433, 99761.471566, 743.420200, 9987.622068prox:		 290s:720672us (+00s:011746us) = -54.534133, 927.004531, 6.636896, 99683.299806, 713.683392, 9987.622068prox:		 290s:732417us (+00s:011745us) = -56.524280, 926.935397, 6.812874, 99675.865604, 732.606815, 9987.622068prox:		 290s:744161us (+00s:011744us) = -56.962043, 924.646631, 6.536337, 99429.748462, 702.870007, 9987.622068prox:		 290s:755911us (+00s:011750us) = -55.118252, 924.238110, 6.636896, 99385.819086, 713.683392, 9987.622068prox:		 290s:767657us (+00s:011746us) = -53.339089, 925.709833, 6.574047, 99544.077477, 706.925026, 9987.622068prox:		 290s:779403us (+00s:011746us) = -52.445740, 924.499983, 6.900863, 99413.978942, 742.068527, 9987.622068prox:		 290s:791148us (+00s:011745us) = -56.502109, 924.888601, 6.712315, 99455.768169, 721.793430, 9987.622068prox:		 290s:802892us (+00s:011744us) = -53.703384, 925.419679, 6.611756, 99512.876357, 710.980046, 9987.622068prox:		 290s:814635us (+00s:011743us) = -53.100428, 926.060743, 6.850584, 99581.811684, 736.661834, 9987.622068prox:		 290s:826378us (+00s:011743us) = -54.749030, 925.226941, 6.662036, 99492.150703, 716.386738, 9987.622068Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.115558Hz	average: rawrange = -54.724070	average: signalrateperspad = 930.491101, ambientrateperspad = 6.572083	average: totalsignalrate = 100058.220129, totalambientrate = 706.713828	average: integrationtime = 9987.622068	std-dev: rawrange = 1.167860	std-dev: signalrateperspad = 3.948696, ambientrateperspad = 0.185222	std-dev: totalsignalrate = 424.613976, totalambientrate = 19.917435	std-dev: integrationtime = 0.000000	rms: rawrange = 54.736530	rms: signalrateperspad = 930.499480, ambientrateperspad = 6.574692	rms: totalsignalrate = 100059.121086, totalambientrate = 706.994440	rms: integrationtime = 9987.622068OK

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 290s:462155us (+00s:000000us) = -52.822352, 927.738822, 6.662036, 99762.260042, 716.386738, 9987.622068prox:		 290s:473916us (+00s:011761us) = -53.113614, 930.380591, 6.687175, 100046.336670, 719.090084, 9987.622068prox:		 290s:485675us (+00s:011759us) = -53.455884, 929.118366, 6.586616, 99910.606164, 708.276700, 9987.622068prox:		 290s:497431us (+00s:011756us) = -54.791922, 930.123956, 6.486057, 100018.740011, 697.463315, 9987.622068prox:		 290s:509187us (+00s:011756us) = -54.907123, 934.173552, 6.347789, 100454.204026, 682.594911, 9987.622068prox:		 290s:520941us (+00s:011754us) = -54.823222, 934.104418, 6.498627, 100446.769824, 698.814988, 9987.622068prox:		 290s:532699us (+00s:011758us) = -54.353145, 933.192054, 6.888294, 100348.660885, 740.716854, 9987.622068prox:		 290s:544451us (+00s:011752us) = -54.011311, 933.724179, 6.385498, 100405.881713, 686.649930, 9987.622068prox:		 290s:556202us (+00s:011751us) = -54.673389, 933.608955, 6.410638, 100393.491376, 689.353276, 9987.622068prox:		 290s:567952us (+00s:011750us) = -56.704544, 934.742339, 6.284939, 100515.367233, 675.836545, 9987.622068prox:		 290s:579700us (+00s:011748us) = -54.224613, 935.776212, 6.360359, 100626.542345, 683.946584, 9987.622068prox:		 290s:591450us (+00s:011750us) = -54.825685, 935.963713, 6.473488, 100646.704802, 696.111642, 9987.622068prox:		 290s:603199us (+00s:011749us) = -55.442118, 935.268179, 6.448348, 100571.912224, 693.408296, 9987.622068prox:		 290s:614946us (+00s:011747us) = -54.213021, 935.128863, 6.825444, 100556.931181, 733.958488, 9987.622068prox:		 290s:626696us (+00s:011750us) = -54.211282, 934.005954, 6.347789, 100436.181718, 682.594911, 9987.622068prox:		 290s:638445us (+00s:011749us) = -53.672084, 933.950437, 6.473488, 100430.211828, 696.111642, 9987.622068prox:		 290s:650191us (+00s:011746us) = -55.161144, 933.559723, 6.423208, 100388.197323, 690.704949, 9987.622068prox:		 290s:661940us (+00s:011749us) = -55.674113, 932.695544, 6.737455, 100295.269798, 724.496777, 9987.622068prox:		 290s:673687us (+00s:011747us) = -55.797139, 931.794703, 6.435778, 100198.399893, 692.056622, 9987.622068prox:		 290s:685434us (+00s:011747us) = -55.419657, 932.533183, 6.284939, 100277.810687, 675.836545, 9987.622068prox:		 290s:697182us (+00s:011748us) = -56.535003, 931.769563, 6.410638, 100195.696547, 689.353276, 9987.622068prox:		 290s:708926us (+00s:011744us) = -55.359376, 927.731489, 6.913433, 99761.471566, 743.420200, 9987.622068prox:		 290s:720672us (+00s:011746us) = -54.534133, 927.004531, 6.636896, 99683.299806, 713.683392, 9987.622068prox:		 290s:732417us (+00s:011745us) = -56.524280, 926.935397, 6.812874, 99675.865604, 732.606815, 9987.622068prox:		 290s:744161us (+00s:011744us) = -56.962043, 924.646631, 6.536337, 99429.748462, 702.870007, 9987.622068prox:		 290s:755911us (+00s:011750us) = -55.118252, 924.238110, 6.636896, 99385.819086, 713.683392, 9987.622068prox:		 290s:767657us (+00s:011746us) = -53.339089, 925.709833, 6.574047, 99544.077477, 706.925026, 9987.622068prox:		 290s:779403us (+00s:011746us) = -52.445740, 924.499983, 6.900863, 99413.978942, 742.068527, 9987.622068prox:		 290s:791148us (+00s:011745us) = -56.502109, 924.888601, 6.712315, 99455.768169, 721.793430, 9987.622068prox:		 290s:802892us (+00s:011744us) = -53.703384, 925.419679, 6.611756, 99512.876357, 710.980046, 9987.622068prox:		 290s:814635us (+00s:011743us) = -53.100428, 926.060743, 6.850584, 99581.811684, 736.661834, 9987.622068prox:		 290s:826378us (+00s:011743us) = -54.749030, 925.226941, 6.662036, 99492.150703, 716.386738, 9987.622068Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.115558Hz	average: rawrange = -54.724070	average: signalrateperspad = 930.491101, ambientrateperspad = 6.572083	average: totalsignalrate = 100058.220129, totalambientrate = 706.713828	average: integrationtime = 9987.622068	std-dev: rawrange = 1.167860	std-dev: signalrateperspad = 3.948696, ambientrateperspad = 0.185222	std-dev: totalsignalrate = 424.613976, totalambientrate = 19.917435	std-dev: integrationtime = 0.000000	rms: rawrange = 54.736530	rms: signalrateperspad = 930.499480, ambientrateperspad = 6.574692	rms: totalsignalrate = 100059.121086, totalambientrate = 706.994440	rms: integrationtime = 9987.622068OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.789823s) ++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_stats 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 290s:462155us (+00s:000000us) = -52.822352, 927.738822, 6.662036, 99762.260042, 716.386738, 9987.622068prox:		 290s:473916us (+00s:011761us) = -53.113614, 930.380591, 6.687175, 100046.336670, 719.090084, 9987.622068prox:		 290s:485675us (+00s:011759us) = -53.455884, 929.118366, 6.586616, 99910.606164, 708.276700, 9987.622068prox:		 290s:497431us (+00s:011756us) = -54.791922, 930.123956, 6.486057, 100018.740011, 697.463315, 9987.622068prox:		 290s:509187us (+00s:011756us) = -54.907123, 934.173552, 6.347789, 100454.204026, 682.594911, 9987.622068prox:		 290s:520941us (+00s:011754us) = -54.823222, 934.104418, 6.498627, 100446.769824, 698.814988, 9987.622068prox:		 290s:532699us (+00s:011758us) = -54.353145, 933.192054, 6.888294, 100348.660885, 740.716854, 9987.622068prox:		 290s:544451us (+00s:011752us) = -54.011311, 933.724179, 6.385498, 100405.881713, 686.649930, 9987.622068prox:		 290s:556202us (+00s:011751us) = -54.673389, 933.608955, 6.410638, 100393.491376, 689.353276, 9987.622068prox:		 290s:567952us (+00s:011750us) = -56.704544, 934.742339, 6.284939, 100515.367233, 675.836545, 9987.622068prox:		 290s:579700us (+00s:011748us) = -54.224613, 935.776212, 6.360359, 100626.542345, 683.946584, 9987.622068prox:		 290s:591450us (+00s:011750us) = -54.825685, 935.963713, 6.473488, 100646.704802, 696.111642, 9987.622068prox:		 290s:603199us (+00s:011749us) = -55.442118, 935.268179, 6.448348, 100571.912224, 693.408296, 9987.622068prox:		 290s:614946us (+00s:011747us) = -54.213021, 935.128863, 6.825444, 100556.931181, 733.958488, 9987.622068prox:		 290s:626696us (+00s:011750us) = -54.211282, 934.005954, 6.347789, 100436.181718, 682.594911, 9987.622068prox:		 290s:638445us (+00s:011749us) = -53.672084, 933.950437, 6.473488, 100430.211828, 696.111642, 9987.622068prox:		 290s:650191us (+00s:011746us) = -55.161144, 933.559723, 6.423208, 100388.197323, 690.704949, 9987.622068prox:		 290s:661940us (+00s:011749us) = -55.674113, 932.695544, 6.737455, 100295.269798, 724.496777, 9987.622068prox:		 290s:673687us (+00s:011747us) = -55.797139, 931.794703, 6.435778, 100198.399893, 692.056622, 9987.622068prox:		 290s:685434us (+00s:011747us) = -55.419657, 932.533183, 6.284939, 100277.810687, 675.836545, 9987.622068prox:		 290s:697182us (+00s:011748us) = -56.535003, 931.769563, 6.410638, 100195.696547, 689.353276, 9987.622068prox:		 290s:708926us (+00s:011744us) = -55.359376, 927.731489, 6.913433, 99761.471566, 743.420200, 9987.622068prox:		 290s:720672us (+00s:011746us) = -54.534133, 927.004531, 6.636896, 99683.299806, 713.683392, 9987.622068prox:		 290s:732417us (+00s:011745us) = -56.524280, 926.935397, 6.812874, 99675.865604, 732.606815, 9987.622068prox:		 290s:744161us (+00s:011744us) = -56.962043, 924.646631, 6.536337, 99429.748462, 702.870007, 9987.622068prox:		 290s:755911us (+00s:011750us) = -55.118252, 924.238110, 6.636896, 99385.819086, 713.683392, 9987.622068prox:		 290s:767657us (+00s:011746us) = -53.339089, 925.709833, 6.574047, 99544.077477, 706.925026, 9987.622068prox:		 290s:779403us (+00s:011746us) = -52.445740, 924.499983, 6.900863, 99413.978942, 742.068527, 9987.622068prox:		 290s:791148us (+00s:011745us) = -56.502109, 924.888601, 6.712315, 99455.768169, 721.793430, 9987.622068prox:		 290s:802892us (+00s:011744us) = -53.703384, 925.419679, 6.611756, 99512.876357, 710.980046, 9987.622068prox:		 290s:814635us (+00s:011743us) = -53.100428, 926.060743, 6.850584, 99581.811684, 736.661834, 9987.622068prox:		 290s:826378us (+00s:011743us) = -54.749030, 925.226941, 6.662036, 99492.150703, 716.386738, 9987.622068Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.115558Hz	average: rawrange = -54.724070	average: signalrateperspad = 930.491101, ambientrateperspad = 6.572083	average: totalsignalrate = 100058.220129, totalambientrate = 706.713828	average: integrationtime = 9987.622068	std-dev: rawrange = 1.167860	std-dev: signalrateperspad = 3.948696, ambientrateperspad = 0.185222	std-dev: totalsignalrate = 424.613976, totalambientrate = 19.917435	std-dev: integrationtime = 0.000000	rms: rawrange = 54.736530	rms: signalrateperspad = 930.499480, ambientrateperspad = 6.574692	rms: totalsignalrate = 100059.121086, totalambientrate = 706.994440	rms: integrationtime = 9987.622068OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_stats 
REGEX ==> average:\s*(.*?)std-dev: 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> rawrange = -54.724070	average: signalrateperspad = 930.491101, ambientrateperspad = 6.572083	average: totalsignalrate = 100058.220129, totalambientrate = 706.713828	average: integrationtime = 9987.622068
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001054s) +++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_AVE 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> rawrange = -54.724070	average: signalrateperspad = 930.491101, ambientrateperspad = 6.572083	average: totalsignalrate = 100058.220129, totalambientrate = 706.713828	average: integrationtime = 9987.622068
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_stats 
REGEX ==> std-dev:\s*(.*?)rms: 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> rawrange = 1.167860	std-dev: signalrateperspad = 3.948696, ambientrateperspad = 0.185222	std-dev: totalsignalrate = 424.613976, totalambientrate = 19.917435	std-dev: integrationtime = 0.000000
+++++++++++++++ [8] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000972s) +++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_STD 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> rawrange = 1.167860	std-dev: signalrateperspad = 3.948696, ambientrateperspad = 0.185222	std-dev: totalsignalrate = 424.613976, totalambientrate = 19.917435	std-dev: integrationtime = 0.000000
++++++++++ [9] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_AVE 
REGEX ==> rawrange =\s(.*?)\s 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> -54.724070
++++++++++++++ [10] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000183s) ++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_RAW_DIST_AVE 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> -54.724070
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_TARGET_RAW_DIST_AVE_spec*] 
 
}

[2016-04-05 17:39:10.410]
JUDGE_SPEC =>  value is [-54.724070], spec is [Item0=-70 ; Item1=0 ; ], mode is [1]

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> -54.724070
+++++++++++++++ [12] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000654s) +++++++++++++++

[2016-04-05 17:39:10.410]
=========== END TEST PROX_QT_TARGET_RAW_DIST_AVE (TestResult : PASS ; Duration : 1.235935s) ===========

[2016-04-05 17:39:10.410]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_TARGET_RAW_DIST_AVE,,,-54.724070,-70,0,,)

[2016-04-05 17:39:10.410]
Item Name:PROX_QT_TARGET_RAW_DIST_AVE, [-70,0]

[2016-04-05 17:39:10.410]
=========================== START TEST PROX_QT_TARGET_RAW_DIST_STD (Item28) ===========================

[2016-04-05 17:39:10.410]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_STD 
REGEX ==> rawrange =\s(.*?)\s 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 1.167860
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000247s) +++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_RAW_DIST_STD 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 1.167860
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_TARGET_RAW_DIST_STD_spec*] 
 
}

[2016-04-05 17:39:10.410]
JUDGE_SPEC =>  value is [1.167860], spec is [Item0=0.01 ; Item1=3 ; ], mode is [1]

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 1.167860
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000809s) +++++++++++++++

[2016-04-05 17:39:10.410]
=========== END TEST PROX_QT_TARGET_RAW_DIST_STD (TestResult : PASS ; Duration : 0.005756s) ===========

[2016-04-05 17:39:10.410]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_TARGET_RAW_DIST_STD,,,1.167860,0.01,3,,)

[2016-04-05 17:39:10.410]
Item Name:PROX_QT_TARGET_RAW_DIST_STD, [0.01,3]

[2016-04-05 17:39:10.410]
============================== START TEST PROX_QT_TARGET_SIG_AVE (Item29) ==============================

[2016-04-05 17:39:10.410]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_AVE 
REGEX ==> average: signalrateperspad =\s(.*?), 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 930.491101
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000274s) +++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_SIG_AVE 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 930.491101
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_TARGET_SIG_AVE_spec*] 
 
}

[2016-04-05 17:39:10.410]
JUDGE_SPEC =>  value is [930.491101], spec is [Item0=500 ; Item1=1200 ; ], mode is [1]

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 930.491101
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000810s) +++++++++++++++

[2016-04-05 17:39:10.410]
============== END TEST PROX_QT_TARGET_SIG_AVE (TestResult : PASS ; Duration : 0.006245s) ==============

[2016-04-05 17:39:10.410]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_TARGET_SIG_AVE,,,930.491101,500,1200,,)

[2016-04-05 17:39:10.410]
Item Name:PROX_QT_TARGET_SIG_AVE, [500,1200]

[2016-04-05 17:39:10.410]
============================== START TEST PROX_QT_TARGET_SIG_STD (Item30) ==============================

[2016-04-05 17:39:10.410]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_STD 
REGEX ==> std-dev: signalrateperspad =\s(.*?), 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 3.948696
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000272s) +++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_SIG_STD 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 3.948696
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_TARGET_SIG_STD_spec*] 
 
}

[2016-04-05 17:39:10.410]
JUDGE_SPEC =>  value is [3.948696], spec is [Item0=0.01 ; Item1=15 ; ], mode is [1]

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 3.948696
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000930s) +++++++++++++++

[2016-04-05 17:39:10.410]
============== END TEST PROX_QT_TARGET_SIG_STD (TestResult : PASS ; Duration : 0.006782s) ==============

[2016-04-05 17:39:10.410]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_TARGET_SIG_STD,,,3.948696,0.01,15,,)

[2016-04-05 17:39:10.410]
Item Name:PROX_QT_TARGET_SIG_STD, [0.01,15]

[2016-04-05 17:39:10.410]
============================== START TEST PROX_QT_TARGET_AMB_AVE (Item31) ==============================

[2016-04-05 17:39:10.410]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_AVE 
REGEX ==> ambientrateperspad =\s(.*?)\s 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 6.572083
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000324s) +++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_AMB_AVE 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 6.572083
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_TARGET_AMB_AVE_spec*] 
 
}

[2016-04-05 17:39:10.410]
JUDGE_SPEC =>  value is [6.572083], spec is [Item0=3 ; Item1=9 ; ], mode is [1]

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 6.572083
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000819s) +++++++++++++++

[2016-04-05 17:39:10.410]
============== END TEST PROX_QT_TARGET_AMB_AVE (TestResult : PASS ; Duration : 0.006340s) ==============

[2016-04-05 17:39:10.410]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_TARGET_AMB_AVE,,,6.572083,3,9,,)

[2016-04-05 17:39:10.410]
Item Name:PROX_QT_TARGET_AMB_AVE, [3,9]

[2016-04-05 17:39:10.410]
============================== START TEST PROX_QT_TARGET_AMB_STD (Item32) ==============================

[2016-04-05 17:39:10.410]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_STD 
REGEX ==> ambientrateperspad =\s(.*?)\s 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 0.185222
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000292s) +++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_AMB_STD 
}

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 0.185222
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_QT_TARGET_AMB_STD_spec*] 
 
}

[2016-04-05 17:39:10.410]
JUDGE_SPEC =>  value is [0.185222], spec is [Item0=0.01 ; Item1=0.5 ; ], mode is [1]

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 0.185222
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000805s) +++++++++++++++

[2016-04-05 17:39:10.410]
============== END TEST PROX_QT_TARGET_AMB_STD (TestResult : PASS ; Duration : 0.006617s) ==============

[2016-04-05 17:39:10.410]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_QT_TARGET_AMB_STD,,,0.185222,0.01,0.5,,)

[2016-04-05 17:39:10.410]
Item Name:PROX_QT_TARGET_AMB_STD, [0.01,0.5]

[2016-04-05 17:39:10.410]
=============================== START TEST X582 POWERED STATUS (Item33) ===============================

[2016-04-05 17:39:10.410]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:10.410]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 0(STRING)]

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 0,2,0;return value:0!

[2016-04-05 17:39:10.410]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:10.410 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:10.410]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006964s) +++++++++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 25 --output 0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 0
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:10.410]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:10.410 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:10.410]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:10.410]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:10.410]
READ_COMMAND => Catch string between socgpio --port 1 --pin 25 --output 0 and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020695s) ++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --sel mesa --off 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:10.410]
Write to ---> MOBILE , command[touch --sel mesa --off(STRING)]

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --sel mesa --off,2,0;return value:0!

[2016-04-05 17:39:10.410]
PostTXToUI ===> 
{
Info ==> touch --sel mesa --off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:10.410 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:10.410]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005900s) +++++++++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --sel mesa --off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --sel mesa --off
Setting active Touch controller to "mesa"
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:10.410]
PostRXToUI ===> 
{
Info ==> touch --sel mesa --off
Setting active Touch controller to "mesa"
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:10.410 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:10.410]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:10.410]
CATCH_VALUE => Catch OK : Setting active Touch controller to "mesa"
OK

[2016-04-05 17:39:10.410]
READ_COMMAND => Catch string between touch --sel mesa --off and [001D38CC:3020213A] :-) == Setting active Touch controller to "mesa"
OK

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> Setting active Touch controller to "mesa"
OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021947s) ++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 10 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:10.410]
Write to ---> MOBILE , command[wait 10(STRING)]

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 10,2,0;return value:0!

[2016-04-05 17:39:10.410]
PostTXToUI ===> 
{
Info ==> wait 10 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:10.410 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:10.410]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> Setting active Touch controller to "mesa"
OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005556s) +++++++++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> wait 10 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 10
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:10.410]
PostRXToUI ===> 
{
Info ==> wait 10
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:10.410 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:10.410]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:10.410]
CATCH_VALUE => Catch OK : 

[2016-04-05 17:39:10.410]
READ_COMMAND => Catch string between wait 10 and [001D38CC:3020213A] :-) == 

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.025324s) ++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --on 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:10.410]
Write to ---> MOBILE , command[touch --on(STRING)]

[2016-04-05 17:39:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --on,2,0;return value:0!

[2016-04-05 17:39:10.410]
PostTXToUI ===> 
{
Info ==> touch --on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:10.410 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:10.410]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:10.410]
RETURN_VALUE ===> 
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005440s) +++++++++++++++++++++

[2016-04-05 17:39:10.410]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --on 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --on
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:11.411]
PostRXToUI ===> 
{
Info ==> touch --on
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:11.411]
READ_COMMAND => Catch string between touch --on and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.038612s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:11.411]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 1(STRING)]

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 1,2,0;return value:0!

[2016-04-05 17:39:11.411]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005965s) +++++++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 25 --output 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 1
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:11.411]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:11.411]
READ_COMMAND => Catch string between socgpio --port 1 --pin 25 --output 1 and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020709s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> PASS
++++ [11] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch -p 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:11.411]
Write to ---> MOBILE , command[touch -p(STRING)]

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch -p,2,0;return value:0!

[2016-04-05 17:39:11.411]
PostTXToUI ===> 
{
Info ==> touch -p 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> PASS
++++++++++++++++++++ [12] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005462s) ++++++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch -p 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch -p
type: mesa
powered: yes
serial-number: 0097B1110001C724001DAA462517B1E9
firmware-loaded: no
is-provisioned: no
sensor-status: 0x0
provisioning: 0x35
gpio1: 0x0
indicator: 0x0
addtData: 0x3352
module-sn: ?
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:11.411]
PostRXToUI ===> 
{
Info ==> touch -p
type: mesa
powered: yes
serial-number: 0097B1110001C724001DAA462517B1E9
firmware-loaded: no
is-provisioned: no
sensor-status: 0x0
provisioning: 0x35
gpio1: 0x0
indicator: 0x0
addtData: 0x3352
module-sn: ?
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : type: mesapowered: yesserial-number: 0097B1110001C724001DAA462517B1E9firmware-loaded: nois-provisioned: nosensor-status: 0x0provisioning: 0x35gpio1: 0x0indicator: 0x0addtData: 0x3352module-sn: ?OK

[2016-04-05 17:39:11.411]
READ_COMMAND => Catch string between touch -p and [001D38CC:3020213A] :-) == type: mesapowered: yesserial-number: 0097B1110001C724001DAA462517B1E9firmware-loaded: nois-provisioned: nosensor-status: 0x0provisioning: 0x35gpio1: 0x0indicator: 0x0addtData: 0x3352module-sn: ?OK

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> type: mesapowered: yesserial-number: 0097B1110001C724001DAA462517B1E9firmware-loaded: nois-provisioned: nosensor-status: 0x0provisioning: 0x35gpio1: 0x0indicator: 0x0addtData: 0x3352module-sn: ?OK
++++++++++++++ [13] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.034041s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --load_firmware 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:11.411]
Write to ---> MOBILE , command[touch --load_firmware(STRING)]

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --load_firmware,2,0;return value:0!

[2016-04-05 17:39:11.411]
PostTXToUI ===> 
{
Info ==> touch --load_firmware 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> type: mesapowered: yesserial-number: 0097B1110001C724001DAA462517B1E9firmware-loaded: nois-provisioned: nosensor-status: 0x0provisioning: 0x35gpio1: 0x0indicator: 0x0addtData: 0x3352module-sn: ?OK
++++++++++++++++++++ [14] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005573s) ++++++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --load_firmware 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --load_firmware
Using FW File: nandfs:\AppleInternal\Diags\Mesa\D10\MesaFwA0.bin
loaded patch revision: 0x4A
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:11.411]
PostRXToUI ===> 
{
Info ==> touch --load_firmware
Using FW File: nandfs:\AppleInternal\Diags\Mesa\D10\MesaFwA0.bin
loaded patch revision: 0x4A
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : Using FW File: nandfs:\AppleInternal\Diags\Mesa\D10\MesaFwA0.binloaded patch revision: 0x4AOK

[2016-04-05 17:39:11.411]
READ_COMMAND => Catch string between touch --load_firmware and [001D38CC:3020213A] :-) == Using FW File: nandfs:\AppleInternal\Diags\Mesa\D10\MesaFwA0.binloaded patch revision: 0x4AOK

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> Using FW File: nandfs:\AppleInternal\Diags\Mesa\D10\MesaFwA0.binloaded patch revision: 0x4AOK
++++++++++++++ [15] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.327624s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch -p powered 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:11.411]
Write to ---> MOBILE , command[touch -p powered(STRING)]

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch -p powered,2,0;return value:0!

[2016-04-05 17:39:11.411]
PostTXToUI ===> 
{
Info ==> touch -p powered 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> Using FW File: nandfs:\AppleInternal\Diags\Mesa\D10\MesaFwA0.binloaded patch revision: 0x4AOK
++++++++++++++++++++ [16] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005514s) ++++++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch -p powered 
PASS_RECEIVE ==> Item0=OK ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch -p powered
powered: yes
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:11.411]
PostRXToUI ===> 
{
Info ==> touch -p powered
powered: yes
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : powered: yesOK

[2016-04-05 17:39:11.411]
READ_COMMAND => Catch string between touch -p powered and [001D38CC:3020213A] :-) == powered: yesOK

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> powered: yesOK
++++++++++++++ [17] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.005687s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> X582 Test 
}

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> powered: yesOK
++++++++++ [18] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> X582 Test 
REGEX ==> (yes) 
}

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> yes
++++++++++++++ [19] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000140s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*X582 Powered Status_spec*] 
 
}

[2016-04-05 17:39:11.411]
JUDGE_SPEC =>  value is [yes], spec is [Item0=yes ; ], mode is [5]

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> yes
+++++++++++++++ [20] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000608s) +++++++++++++++

[2016-04-05 17:39:11.411]
=============== END TEST X582 Powered Status (TestResult : PASS ; Duration : 0.570133s) ===============

[2016-04-05 17:39:11.411]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(X582 Powered Status,,,yes,yes,yes,,)

[2016-04-05 17:39:11.411]
Item Name:X582 Powered Status, <yes>

[2016-04-05 17:39:11.411]
============================= START TEST X582 MODULE SN FROM DIAG (Item34) =============================

[2016-04-05 17:39:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch -p module-sn 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:11.411]
Write to ---> MOBILE , command[touch -p module-sn(STRING)]

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch -p module-sn,2,0;return value:0!

[2016-04-05 17:39:11.411]
PostTXToUI ===> 
{
Info ==> touch -p module-sn 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006333s) +++++++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch -p module-sn 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch -p module-sn
module-sn: F58611600TGH24G3E1
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:11.411]
PostRXToUI ===> 
{
Info ==> touch -p module-sn
module-sn: F58611600TGH24G3E1
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : module-sn: F58611600TGH24G3E1OK

[2016-04-05 17:39:11.411]
READ_COMMAND => Catch string between touch -p module-sn and [001D38CC:3020213A] :-) == module-sn: F58611600TGH24G3E1OK

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> module-sn: F58611600TGH24G3E1OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.038278s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> MOBILE_CATCH 
}

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> module-sn: F58611600TGH24G3E1OK
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> module-sn:  
KEY ==> MOBILE_CATCH 
END ==> OK 
}

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : F58611600TGH24G3E1

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> F58611600TGH24G3E1
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000576s) +++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> NvSn_UNIT 
}

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> F58611600TGH24G3E1
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*X582 Module SN from diag_spec*] 
 
}

[2016-04-05 17:39:11.411]
JUDGE_SPEC =>  value is [F58611600TGH24G3E1], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> F58611600TGH24G3E1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000616s) +++++++++++++++

[2016-04-05 17:39:11.411]
============= END TEST X582 Module SN from diag (TestResult : PASS ; Duration : 0.054083s) =============

[2016-04-05 17:39:11.411]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(X582 Module SN from diag,,,F58611600TGH24G3E1,NA,NA,,)

[2016-04-05 17:39:11.411]
Item Name:X582 Module SN from diag, {NA}

[2016-04-05 17:39:11.411]
========================= START TEST COMPARE X582 MODULE SN WITH SFC (Item35) =========================

[2016-04-05 17:39:11.411]
^=^ Begin subItem : COMPARE:RETURN_VALUE: ===> parameters:
{
Comparison1 ==> SFC ==> [*fg_mesa*] 
UNIT ==> [*NvSn_UNIT*] 
 
}

[2016-04-05 17:39:11.411]
COMPARE => Result : F58611600TGH24G3E1

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> F58611600TGH24G3E1
+++++++++++++++++ [1] COMPARE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001232s) +++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> F58611600TGH24G3E1
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) ++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> PASS
+++++ [3] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000022s) +++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : AddCancelCases:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <FAIL> 
 
FORCE_CANCEL ==> Item0=Burn X582 Module SN ;  
ISNOSpec ==> 1 
}

[2016-04-05 17:39:11.411]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=FAIL ; ], mode is [5]

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> PASS
+++++++++++++ [4] AddCancelCases:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000744s) +++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Compare X582 Module SN with SFC_spec*] 
 
}

[2016-04-05 17:39:11.411]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> PASS
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000907s) +++++++++++++++

[2016-04-05 17:39:11.411]
========= END TEST Compare X582 Module SN with SFC (TestResult : PASS ; Duration : 0.011332s) =========

[2016-04-05 17:39:11.411]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Compare X582 Module SN with SFC,,,F58611600TGH24G3E1,NA,NA,,F58611600TGH24G3E1)

[2016-04-05 17:39:11.411]
Item Name:Compare X582 Module SN with SFC, {NA}

[2016-04-05 17:39:11.411]
=============================== START TEST BURN X582 MODULE SN (Item36) ===============================

[2016-04-05 17:39:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> syscfg add NvSn [*fg_mesa*] 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:11.411]
Write to ---> MOBILE , command[syscfg add NvSn F58611600TGH24G3E1(STRING)]

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:syscfg add NvSn F58611600TGH24G3E1,2,0;return value:0!

[2016-04-05 17:39:11.411]
PostTXToUI ===> 
{
Info ==> syscfg add NvSn F58611600TGH24G3E1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006887s) +++++++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:syscfg add NvSn F58611600TGH24G3E1
Finish!
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:11.411]
PostRXToUI ===> 
{
Info ==> syscfg add NvSn F58611600TGH24G3E1
Finish!
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : syscfg add NvSn F58611600TGH24G3E1Finish!

[2016-04-05 17:39:11.411]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == syscfg add NvSn F58611600TGH24G3E1Finish!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> syscfg add NvSn F58611600TGH24G3E1Finish!
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.027262s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> syscfg print NvSn 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:11.411]
Write to ---> MOBILE , command[syscfg print NvSn(STRING)]

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:syscfg print NvSn,2,0;return value:0!

[2016-04-05 17:39:11.411]
PostTXToUI ===> 
{
Info ==> syscfg print NvSn 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> syscfg add NvSn F58611600TGH24G3E1Finish!
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005446s) +++++++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> syscfg print NvSn 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:syscfg print NvSn
F58611600TGH24G3E1
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:11.411]
PostRXToUI ===> 
{
Info ==> syscfg print NvSn
F58611600TGH24G3E1
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:11.411]
CATCH_VALUE => Catch OK : F58611600TGH24G3E1

[2016-04-05 17:39:11.411]
READ_COMMAND => Catch string between syscfg print NvSn and [001D38CC:3020213A] :-) == F58611600TGH24G3E1

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> F58611600TGH24G3E1
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023570s) ++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Burn X582 Module SN_spec*] 
 
}

[2016-04-05 17:39:11.411]
JUDGE_SPEC =>  value is [F58611600TGH24G3E1], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> F58611600TGH24G3E1
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000600s) +++++++++++++++

[2016-04-05 17:39:11.411]
=============== END TEST Burn X582 Module SN (TestResult : PASS ; Duration : 0.070887s) ===============

[2016-04-05 17:39:11.411]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Burn X582 Module SN,,,F58611600TGH24G3E1,NA,NA,,)

[2016-04-05 17:39:11.411]
Item Name:Burn X582 Module SN, {NA}

[2016-04-05 17:39:11.411]
================================ START TEST X582 UNDETECT TEST (Item37) ================================

[2016-04-05 17:39:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test auto --run 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:11.411]
Write to ---> MOBILE , command[touch --test auto --run(STRING)]

[2016-04-05 17:39:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test auto --run,2,0;return value:0!

[2016-04-05 17:39:11.411]
PostTXToUI ===> 
{
Info ==> touch --test auto --run 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:11.411]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006546s) +++++++++++++++++++++

[2016-04-05 17:39:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test auto --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:12.412]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test auto --run
After set param 00 00 00
After set param 11 00 00

OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:12.412]
PostRXToUI ===> 
{
Info ==> touch --test auto --run
After set param 00 00 00
After set param 11 00 00

OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:12.412 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:12.412]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:12.412]
CATCH_VALUE => Catch OK : After set param 00 00 00
After set param 11 00 00

OK

[2016-04-05 17:39:12.412]
READ_COMMAND => Catch string between touch --test auto --run and [001D38CC:3020213A] :-) == After set param 00 00 00
After set param 11 00 00

OK

[2016-04-05 17:39:12.412]
RETURN_VALUE ===> After set param 00 00 00
After set param 11 00 00

OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.633445s) ++++++++++++++

[2016-04-05 17:39:12.412]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test finger_det --run --options "--duration 1" 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:12.412]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:12.412]
Write to ---> MOBILE , command[touch --test finger_det --run --options "--duration 1"(STRING)]

[2016-04-05 17:39:12.412]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test finger_det --run --options "--duration 1",2,0;return value:0!

[2016-04-05 17:39:12.412]
PostTXToUI ===> 
{
Info ==> touch --test finger_det --run --options "--duration 1" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:12.412 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:12.412]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:12.412]
RETURN_VALUE ===> After set param 00 00 00
After set param 11 00 00

OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005681s) +++++++++++++++++++++

[2016-04-05 17:39:12.412]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> finger-detected=" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> " 
}

[2016-04-05 17:39:13.413]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test finger_det --run --options "--duration 1"
After set param 00 00 00
After set param 11 00 00
DATA: finger-detected="no"

OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:13.413]
PostRXToUI ===> 
{
Info ==> touch --test finger_det --run --options "--duration 1"
After set param 00 00 00
After set param 11 00 00
DATA: finger-detected="no"

OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:13.413 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:13.413]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:13.413]
CATCH_VALUE => Catch OK : no

[2016-04-05 17:39:13.413]
READ_COMMAND => Catch string between finger-detected=" and " == no

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> no
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.158799s) ++++++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*X582 Undetect Test_spec*] 
 
}

[2016-04-05 17:39:13.413]
JUDGE_SPEC =>  value is [no], spec is [Item0=no ; ], mode is [5]

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> no
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000653s) +++++++++++++++

[2016-04-05 17:39:13.413]
================ END TEST X582 Undetect Test (TestResult : PASS ; Duration : 1.812154s) ================

[2016-04-05 17:39:13.413]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(X582 Undetect Test,,,no,no,no,,)

[2016-04-05 17:39:13.413]
Item Name:X582 Undetect Test, <no>

[2016-04-05 17:39:13.413]
================================= START TEST X582 DETECT TEST (Item38) =================================

[2016-04-05 17:39:13.413]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test get_status --run 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:13.413]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:13.413]
Write to ---> MOBILE , command[touch --test get_status --run(STRING)]

[2016-04-05 17:39:13.413]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test get_status --run,2,0;return value:0!

[2016-04-05 17:39:13.413]
PostTXToUI ===> 
{
Info ==> touch --test get_status --run 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:13.413 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:13.413]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006511s) +++++++++++++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test get_status --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:13.413]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test get_status --run
DATA: sensor-status="0x11"
DATA: provisioning="0x1"
DATA: gpio1="1"
DATA: indicator="0x4"
DATA: addtData="0x140431"

OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:13.413]
PostRXToUI ===> 
{
Info ==> touch --test get_status --run
DATA: sensor-status="0x11"
DATA: provisioning="0x1"
DATA: gpio1="1"
DATA: indicator="0x4"
DATA: addtData="0x140431"

OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:13.413 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:13.413]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:13.413]
CATCH_VALUE => Catch OK : DATA: sensor-status="0x11"DATA: provisioning="0x1"DATA: gpio1="1"DATA: indicator="0x4"DATA: addtData="0x140431"OK

[2016-04-05 17:39:13.413]
READ_COMMAND => Catch string between touch --test get_status --run and [001D38CC:3020213A] :-) == DATA: sensor-status="0x11"DATA: provisioning="0x1"DATA: gpio1="1"DATA: indicator="0x4"DATA: addtData="0x140431"OK

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> DATA: sensor-status="0x11"DATA: provisioning="0x1"DATA: gpio1="1"DATA: indicator="0x4"DATA: addtData="0x140431"OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026347s) ++++++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
}

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> DATA: sensor-status="0x11"DATA: provisioning="0x1"DATA: gpio1="1"DATA: indicator="0x4"DATA: addtData="0x140431"OK
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
REGEX ==> sensor-status="0x(\w*)"DATA: provisioning= 
}

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> 11
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000243s) +++++++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> sensor-status_init 
}

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> 11
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
REGEX ==> indicator="0x(\w*)"DATA: addtData 
}

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> 4
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000166s) +++++++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> indicator_init 
}

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> 4
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test finger_det --run --options "--exit_on_det" 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:13.413]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:13.413]
Write to ---> MOBILE , command[touch --test finger_det --run --options "--exit_on_det"(STRING)]

[2016-04-05 17:39:13.413]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test finger_det --run --options "--exit_on_det",2,0;return value:0!

[2016-04-05 17:39:13.413]
PostTXToUI ===> 
{
Info ==> touch --test finger_det --run --options "--exit_on_det" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:13.413 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:13.413]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:13.413]
RETURN_VALUE ===> 4
+++++++++++++++++++++ [8] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005862s) +++++++++++++++++++++

[2016-04-05 17:39:13.413]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 500 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 4
+++++++++++++++++ [9] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.503216s) +++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open Menu 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> FIXTURE , command[Open Menu(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Menu,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> Open Menu 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 4
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006374s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open Menu 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 30 
END ==> @_@ 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Menu
Open Menu Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> Open Menu
Open Menu Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : Open Menu Pass

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between Open Menu and @_@ == Open Menu Pass

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Open Menu Pass
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.218252s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test finger_det --run --options "--exit_on_det" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test finger_det --run --options "--exit_on_det"
After set param 00 00 00
After set param 11 00 00
DATA: finger-detected="yes"

OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> touch --test finger_det --run --options "--exit_on_det"
After set param 00 00 00
After set param 11 00 00
DATA: finger-detected="yes"

OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : After set param 00 00 00After set param 11 00 00DATA: finger-detected="yes"OK

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between touch --test finger_det --run --options "--exit_on_det" and [001D38CC:3020213A] :-) == After set param 00 00 00After set param 11 00 00DATA: finger-detected="yes"OK

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> After set param 00 00 00After set param 11 00 00DATA: finger-detected="yes"OK
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.274728s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> X582_DETECT 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> After set param 00 00 00After set param 11 00 00DATA: finger-detected="yes"OK
++++++++++ [13] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> X582_DETECT 
REGEX ==> DATA: finger-detected="(.{2,3})"OK 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> yes
++++++++++++++ [14] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000166s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*X582 Detect Test_spec*] 
 
}

[2016-04-05 17:39:14.414]
JUDGE_SPEC =>  value is [yes], spec is [Item0=yes ; ], mode is [5]

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> yes
+++++++++++++++ [15] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000611s) +++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> yes
++++++++++ [16] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test get_status --run 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[touch --test get_status --run(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test get_status --run,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> touch --test get_status --run 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> yes
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005563s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test get_status --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test get_status --run
DATA: sensor-status="0x13"
DATA: provisioning="0x0"
DATA: gpio1="1"
DATA: indicator="0x6"
DATA: addtData="0x0"

OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> touch --test get_status --run
DATA: sensor-status="0x13"
DATA: provisioning="0x0"
DATA: gpio1="1"
DATA: indicator="0x6"
DATA: addtData="0x0"

OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : DATA: sensor-status="0x13"DATA: provisioning="0x0"DATA: gpio1="1"DATA: indicator="0x6"DATA: addtData="0x0"OK

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between touch --test get_status --run and [001D38CC:3020213A] :-) == DATA: sensor-status="0x13"DATA: provisioning="0x0"DATA: gpio1="1"DATA: indicator="0x6"DATA: addtData="0x0"OK

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> DATA: sensor-status="0x13"DATA: provisioning="0x0"DATA: gpio1="1"DATA: indicator="0x6"DATA: addtData="0x0"OK
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026618s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> DATA: sensor-status="0x13"DATA: provisioning="0x0"DATA: gpio1="1"DATA: indicator="0x6"DATA: addtData="0x0"OK
++++++++++ [19] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
REGEX ==> sensor-status="0x(\w*)"DATA: provisioning= 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 13
++++++++++++++ [20] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000200s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> sensor-status_detect 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 13
++++++++++ [21] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
REGEX ==> indicator="0x(\w*)"DATA: addtData 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 6
++++++++++++++ [22] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000189s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> indicator_detect 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 6
++++++++++ [23] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel turtle --init 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[sensor --sel turtle --init(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel turtle --init,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> sensor --sel turtle --init 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 6
++++++++++++++++++++ [24] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005525s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel turtle --init 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel turtle --init
Turning off power to 'turtle' sensor...
Turning on power to 'turtle' sensor...
Resetting 'turtle' sensor...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> sensor --sel turtle --init
Turning off power to 'turtle' sensor...
Turning on power to 'turtle' sensor...
Resetting 'turtle' sensor...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : Turning off power to 'turtle' sensor...Turning on power to 'turtle' sensor...Resetting 'turtle' sensor...OK

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between sensor --sel turtle --init and [001D38CC:3020213A] :-) == Turning off power to 'turtle' sensor...Turning on power to 'turtle' sensor...Resetting 'turtle' sensor...OK

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Turning off power to 'turtle' sensor...Turning on power to 'turtle' sensor...Resetting 'turtle' sensor...OK
++++++++++++++ [25] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028050s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel turtle --sample 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[sensor --sel turtle --sample 1(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel turtle --sample 1,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> sensor --sel turtle --sample 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Turning off power to 'turtle' sensor...Turning on power to 'turtle' sensor...Resetting 'turtle' sensor...OK
++++++++++++++++++++ [26] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006835s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel turtle --sample 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel turtle --sample 1
Capturing 1 samples from:
turtle @ 325.52 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
turtle:	 295s:251194us (+00s:000000us) = 48241
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> sensor --sel turtle --sample 1
Capturing 1 samples from:
turtle @ 325.52 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
turtle:	 295s:251194us (+00s:000000us) = 48241
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 295s:251194us (+00s:000000us) = 48241OK

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between sensor --sel turtle --sample 1 and [001D38CC:3020213A] :-) == Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 295s:251194us (+00s:000000us) = 48241OK

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 295s:251194us (+00s:000000us) = 48241OK
++++++++++++++ [27] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.037700s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Detect 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 295s:251194us (+00s:000000us) = 48241OK
++++++++++ [28] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Detect 
REGEX ==> turtle:.*?=\s*(.*?)OK 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 48241
++++++++++++++ [29] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000187s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Detect 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 48241
++++++++++ [30] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Menu 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> FIXTURE , command[Close Menu(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Menu,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> Close Menu 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 48241
++++++++++++++++++++ [31] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005358s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Menu 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 30 
END ==> @_@ 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Menu
Close Menu Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> Close Menu
Close Menu Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : Close Menu Pass

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between Close Menu and @_@ == Close Menu Pass

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Close Menu Pass
++++++++++++++ [32] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.123092s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test get_status --run 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[touch --test get_status --run(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test get_status --run,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> touch --test get_status --run 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Close Menu Pass
++++++++++++++++++++ [33] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005596s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test get_status --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test get_status --run
DATA: sensor-status="0x7"
DATA: provisioning="0x0"
DATA: gpio1="1"
DATA: indicator="0x8E"
DATA: addtData="0x7200"

OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> touch --test get_status --run
DATA: sensor-status="0x7"
DATA: provisioning="0x0"
DATA: gpio1="1"
DATA: indicator="0x8E"
DATA: addtData="0x7200"

OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : DATA: sensor-status="0x7"DATA: provisioning="0x0"DATA: gpio1="1"DATA: indicator="0x8E"DATA: addtData="0x7200"OK

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between touch --test get_status --run and [001D38CC:3020213A] :-) == DATA: sensor-status="0x7"DATA: provisioning="0x0"DATA: gpio1="1"DATA: indicator="0x8E"DATA: addtData="0x7200"OK

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> DATA: sensor-status="0x7"DATA: provisioning="0x0"DATA: gpio1="1"DATA: indicator="0x8E"DATA: addtData="0x7200"OK
++++++++++++++ [34] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.027070s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> DATA: sensor-status="0x7"DATA: provisioning="0x0"DATA: gpio1="1"DATA: indicator="0x8E"DATA: addtData="0x7200"OK
++++++++++ [35] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
REGEX ==> sensor-status="0x(\w*)"DATA: provisioning= 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 7
++++++++++++++ [36] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000179s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> sensor-status_undetect 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 7
++++++++++ [37] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> mesa_status 
REGEX ==> indicator="0x(\w*)"DATA: addtData 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 8E
++++++++++++++ [38] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000159s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> indicator_undetect 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 8E
++++++++++ [39] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel turtle --sample 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[sensor --sel turtle --sample 1(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel turtle --sample 1,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> sensor --sel turtle --sample 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 8E
++++++++++++++++++++ [40] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005557s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel turtle --sample 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel turtle --sample 1
Capturing 1 samples from:
turtle @ 325.52 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
turtle:	 295s:474236us (+00s:000000us) = 47506
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> sensor --sel turtle --sample 1
Capturing 1 samples from:
turtle @ 325.52 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
turtle:	 295s:474236us (+00s:000000us) = 47506
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 295s:474236us (+00s:000000us) = 47506OK

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between sensor --sel turtle --sample 1 and [001D38CC:3020213A] :-) == Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 295s:474236us (+00s:000000us) = 47506OK

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 295s:474236us (+00s:000000us) = 47506OK
++++++++++++++ [41] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.037146s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Init 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 295s:474236us (+00s:000000us) = 47506OK
++++++++++ [42] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Init 
REGEX ==> turtle:.*?=\s*(.*?)OK 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 47506
++++++++++++++ [43] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000178s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Init 
}

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 47506
++++++++++ [44] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 0(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 0,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 47506
++++++++++++++++++++ [45] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005720s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 25 --output 0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 0
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between socgpio --port 1 --pin 25 --output 0 and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> OK
++++++++++++++ [46] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021611s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --sel mesa --off 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[touch --sel mesa --off(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --sel mesa --off,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> touch --sel mesa --off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> OK
++++++++++++++++++++ [47] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006620s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --sel mesa --off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --sel mesa --off
Setting active Touch controller to "mesa"
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> touch --sel mesa --off
Setting active Touch controller to "mesa"
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : Setting active Touch controller to "mesa"
OK

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between touch --sel mesa --off and [001D38CC:3020213A] :-) == Setting active Touch controller to "mesa"
OK

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Setting active Touch controller to "mesa"
OK
++++++++++++++ [48] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022813s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 10 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[wait 10(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 10,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> wait 10 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> Setting active Touch controller to "mesa"
OK
++++++++++++++++++++ [49] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005480s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> wait 10 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 10
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:14.414]
PostRXToUI ===> 
{
Info ==> wait 10
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:14.414]
CATCH_VALUE => Catch OK : 

[2016-04-05 17:39:14.414]
READ_COMMAND => Catch string between wait 10 and [001D38CC:3020213A] :-) == 

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 
++++++++++++++ [50] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021723s) ++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --on 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:14.414]
Write to ---> MOBILE , command[touch --on(STRING)]

[2016-04-05 17:39:14.414]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --on,2,0;return value:0!

[2016-04-05 17:39:14.414]
PostTXToUI ===> 
{
Info ==> touch --on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:14.414 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:14.414]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:14.414]
RETURN_VALUE ===> 
++++++++++++++++++++ [51] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005348s) ++++++++++++++++++++

[2016-04-05 17:39:14.414]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --on 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --on
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:15.415]
PostRXToUI ===> 
{
Info ==> touch --on
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:15.415]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:15.415]
READ_COMMAND => Catch string between touch --on and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> OK
++++++++++++++ [52] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.041102s) ++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:15.415]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 1(STRING)]

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 1,2,0;return value:0!

[2016-04-05 17:39:15.415]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> OK
++++++++++++++++++++ [53] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005714s) ++++++++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 25 --output 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 1
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:15.415]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:15.415]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:15.415]
READ_COMMAND => Catch string between socgpio --port 1 --pin 25 --output 1 and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> OK
++++++++++++++ [54] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020764s) ++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> PASS
++++ [55] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) ++++

[2016-04-05 17:39:15.415]
================= END TEST X582 Detect Test (TestResult : PASS ; Duration : 1.589331s) =================

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(X582 Detect Test,,,yes,yes,yes,,)

[2016-04-05 17:39:15.415]
Item Name:X582 Detect Test, <yes>

[2016-04-05 17:39:15.415]
================================ START TEST SENSOR-STATUS_INIT (Item39) ================================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> sensor-status_init 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 11
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) ++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 17
+++++++++ [2] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000047s) +++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Sensor-Status_Init_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [17], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 17
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000822s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Sensor-Status_Init_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 17
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:15.415]
================ END TEST Sensor-Status_Init (TestResult : PASS ; Duration : 0.008045s) ================

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Sensor-Status_Init,,,17,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Sensor-Status_Init, {NA}

[2016-04-05 17:39:15.415]
================================== START TEST INDICATOR_INIT (Item40) ==================================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> indicator_init 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 4
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 4
+++++++++ [2] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000049s) +++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Indicator_Init_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [4], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 4
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000791s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Indicator_Init_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 4
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:39:15.415]
================== END TEST Indicator_Init (TestResult : PASS ; Duration : 0.007600s) ==================

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Indicator_Init,,,4,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Indicator_Init, {NA}

[2016-04-05 17:39:15.415]
=============================== START TEST SENSOR-STATUS_DETECT (Item41) ===============================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> sensor-status_detect 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 13
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 19
+++++++++ [2] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000047s) +++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Sensor-Status_Detect_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [19], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 19
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000790s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Sensor-Status_Detect_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 19
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:15.415]
=============== END TEST Sensor-Status_Detect (TestResult : PASS ; Duration : 0.007650s) ===============

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Sensor-Status_Detect,,,19,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Sensor-Status_Detect, {NA}

[2016-04-05 17:39:15.415]
================================= START TEST INDICATOR_DETECT (Item42) =================================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> indicator_detect 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 6
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 6
+++++++++ [2] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000039s) +++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Indicator_Detect_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [6], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 6
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000777s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Indicator_Detect_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 6
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:39:15.415]
================= END TEST Indicator_Detect (TestResult : PASS ; Duration : 0.007481s) =================

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Indicator_Detect,,,6,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Indicator_Detect, {NA}

[2016-04-05 17:39:15.415]
============================== START TEST SENSOR-STATUS_UNDETECT (Item43) ==============================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> sensor-status_undetect 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 7
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 7
+++++++++ [2] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000038s) +++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Sensor-Status_Undetect_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [7], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 7
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000751s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Sensor-Status_Undetect_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 7
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:39:15.415]
============== END TEST Sensor-Status_Undetect (TestResult : PASS ; Duration : 0.006980s) ==============

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Sensor-Status_Undetect,,,7,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Sensor-Status_Undetect, {NA}

[2016-04-05 17:39:15.415]
================================ START TEST INDICATOR_UNDETECT (Item44) ================================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> indicator_undetect 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 8E
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 142
+++++++++ [2] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000052s) +++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Indicator_Undetect_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [142], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 142
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000793s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Indicator_Undetect_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 142
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:15.415]
================ END TEST Indicator_Undetect (TestResult : PASS ; Duration : 0.007880s) ================

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Indicator_Undetect,,,142,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Indicator_Undetect, {NA}

[2016-04-05 17:39:15.415]
================================= START TEST TURTLE_READ_INIT (Item45) =================================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Init 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 47506
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Turtle_Read_Init_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [47506], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 47506
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000801s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Turtle_Read_Init _units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 47506
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++++

[2016-04-05 17:39:15.415]
================= END TEST Turtle_Read_Init (TestResult : PASS ; Duration : 0.005474s) =================

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Turtle_Read_Init,,,47506,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Turtle_Read_Init, {NA}

[2016-04-05 17:39:15.415]
================================ START TEST TURTLE_READ_DETECT (Item46) ================================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Detect 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 48241
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Turtle_Read_Detect_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [48241], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 48241
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000840s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Turtle_Read_Detect_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 48241
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:39:15.415]
================ END TEST Turtle_Read_Detect (TestResult : PASS ; Duration : 0.006033s) ================

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Turtle_Read_Detect,,,48241,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Turtle_Read_Detect, {NA}

[2016-04-05 17:39:15.415]
================================ START TEST TURTLE_READ_DELTA (Item47) ================================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Turtle_Detect*]-[*Turtle_Init*] 
DecimalPlaces ==> 1 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 735.0
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000170s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Turtle_Read_Delta_spec*] 
 
}

[2016-04-05 17:39:15.415]
JUDGE_SPEC =>  value is [735.0], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 735.0
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000799s) +++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Turtle_Read_Delta_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 735.0
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:39:15.415]
================ END TEST Turtle_Read_Delta (TestResult : PASS ; Duration : 0.005646s) ================

[2016-04-05 17:39:15.415]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Turtle_Read_Delta,,,735.0,NA,NA,,)

[2016-04-05 17:39:15.415]
Item Name:Turtle_Read_Delta, {NA}

[2016-04-05 17:39:15.415]
========================= START TEST 3K TONE SPK TO MIC1_FREQUENCY(L) (Item48) =========================

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --reset 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:15.415]
Write to ---> MOBILE , command[audio --reset(STRING)]

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --reset,2,0;return value:0!

[2016-04-05 17:39:15.415]
PostTXToUI ===> 
{
Info ==> audio --reset 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006635s) +++++++++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --reset 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:15.415]
PostRXToUI ===> 
{
Info ==> audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:15.415]
CATCH_VALUE => Catch OK : Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...Speaker already powered off.OK

[2016-04-05 17:39:15.415]
READ_COMMAND => Catch string between audio --reset and [001D38CC:3020213A] :-) == Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...Speaker already powered off.OK

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...Speaker already powered off.OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.125805s) ++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff topspeaker 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:15.415]
Write to ---> MOBILE , command[audio --turnoff topspeaker(STRING)]

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff topspeaker,2,0;return value:0!

[2016-04-05 17:39:15.415]
PostTXToUI ===> 
{
Info ==> audio --turnoff topspeaker 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...Speaker already powered off.OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005433s) +++++++++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff topspeaker 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff topspeaker
Turning-off power to topspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:15.415]
PostRXToUI ===> 
{
Info ==> audio --turnoff topspeaker
Turning-off power to topspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:15.415]
CATCH_VALUE => Catch OK : Turning-off power to topspeaker...OK

[2016-04-05 17:39:15.415]
READ_COMMAND => Catch string between audio --turnoff topspeaker and [001D38CC:3020213A] :-) == Turning-off power to topspeaker...OK

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Turning-off power to topspeaker...OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020919s) ++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff arc 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:15.415]
Write to ---> MOBILE , command[audio --turnoff arc(STRING)]

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff arc,2,0;return value:0!

[2016-04-05 17:39:15.415]
PostTXToUI ===> 
{
Info ==> audio --turnoff arc 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Turning-off power to topspeaker...OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005335s) +++++++++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff arc 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff arc
Turning-off power to arc...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:15.415]
PostRXToUI ===> 
{
Info ==> audio --turnoff arc
Turning-off power to arc...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:15.415]
CATCH_VALUE => Catch OK : Turning-off power to arc...OK

[2016-04-05 17:39:15.415]
READ_COMMAND => Catch string between audio --turnoff arc and [001D38CC:3020213A] :-) == Turning-off power to arc...OK

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Turning-off power to arc...OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023939s) ++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block codec --in ain1 --out xsp[0] 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:15.415]
Write to ---> MOBILE , command[routeaudio --route --block codec --in ain1 --out xsp[0](STRING)]

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block codec --in ain1 --out xsp[0],2,0;return value:0!

[2016-04-05 17:39:15.415]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain1 --out xsp[0] 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Turning-off power to arc...OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005833s) +++++++++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block codec --in ain1 --out xsp[0] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block codec --in ain1 --out xsp[0]
Routing from codec.ain1[l] --> codec.xsp[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:15.415]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain1 --out xsp[0]
Routing from codec.ain1[l] --> codec.xsp[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:15.415]
CATCH_VALUE => Catch OK : Routing from codec.ain1[l] --> codec.xsp[l]OK

[2016-04-05 17:39:15.415]
READ_COMMAND => Catch string between routeaudio --route --block codec --in ain1 --out xsp[0] and [001D38CC:3020213A] :-) == Routing from codec.ain1[l] --> codec.xsp[l]OK

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Routing from codec.ain1[l] --> codec.xsp[l]OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.119037s) ++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block codec --in ain2 --out xsp[1] 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:15.415]
Write to ---> MOBILE , command[routeaudio --route --block codec --in ain2 --out xsp[1](STRING)]

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block codec --in ain2 --out xsp[1],2,0;return value:0!

[2016-04-05 17:39:15.415]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain2 --out xsp[1] 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Routing from codec.ain1[l] --> codec.xsp[l]OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005842s) +++++++++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block codec --in ain2 --out xsp[1] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block codec --in ain2 --out xsp[1]
Routing from codec.ain2[l] --> codec.xsp[r]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:15.415]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain2 --out xsp[1]
Routing from codec.ain2[l] --> codec.xsp[r]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:15.415]
CATCH_VALUE => Catch OK : Routing from codec.ain2[l] --> codec.xsp[r]OK

[2016-04-05 17:39:15.415]
READ_COMMAND => Catch string between routeaudio --route --block codec --in ain2 --out xsp[1] and [001D38CC:3020213A] :-) == Routing from codec.ain2[l] --> codec.xsp[r]OK

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Routing from codec.ain2[l] --> codec.xsp[r]OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.117598s) ++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block botspeaker --in spk-i2s --out spk-out 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:15.415]
Write to ---> MOBILE , command[routeaudio --route --block botspeaker --in spk-i2s --out spk-out(STRING)]

[2016-04-05 17:39:15.415]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block botspeaker --in spk-i2s --out spk-out,2,0;return value:0!

[2016-04-05 17:39:15.415]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block botspeaker --in spk-i2s --out spk-out 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:15.415 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:15.415]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:15.415]
RETURN_VALUE ===> Routing from codec.ain2[l] --> codec.xsp[r]OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005704s) ++++++++++++++++++++

[2016-04-05 17:39:15.415]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block botspeaker --in spk-i2s --out spk-out 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block botspeaker --in spk-i2s --out spk-out
Routing from botspeaker.spk-i2s[1:0] --> botspeaker.spk-out[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:16.416]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block botspeaker --in spk-i2s --out spk-out
Routing from botspeaker.spk-i2s[1:0] --> botspeaker.spk-out[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : Routing from botspeaker.spk-i2s[1:0] --> botspeaker.spk-out[l]OK

[2016-04-05 17:39:16.416]
READ_COMMAND => Catch string between routeaudio --route --block botspeaker --in spk-i2s --out spk-out and [001D38CC:3020213A] :-) == Routing from botspeaker.spk-i2s[1:0] --> botspeaker.spk-out[l]OK

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Routing from botspeaker.spk-i2s[1:0] --> botspeaker.spk-out[l]OK
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026446s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> setvol -b botspeaker -n spk-vol -v -9.5 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:16.416]
Write to ---> MOBILE , command[setvol -b botspeaker -n spk-vol -v -9.5(STRING)]

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:setvol -b botspeaker -n spk-vol -v -9.5,2,0;return value:0!

[2016-04-05 17:39:16.416]
PostTXToUI ===> 
{
Info ==> setvol -b botspeaker -n spk-vol -v -9.5 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Routing from botspeaker.spk-i2s[1:0] --> botspeaker.spk-out[l]OK
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005815s) ++++++++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> setvol -b botspeaker -n spk-vol -v -9.5 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:setvol -b botspeaker -n spk-vol -v -9.5
Set 'spk-vol' volume to -9.5 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:16.416]
PostRXToUI ===> 
{
Info ==> setvol -b botspeaker -n spk-vol -v -9.5
Set 'spk-vol' volume to -9.5 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : Set 'spk-vol' volume to -9.5 dBOK

[2016-04-05 17:39:16.416]
READ_COMMAND => Catch string between setvol -b botspeaker -n spk-vol -v -9.5 and [001D38CC:3020213A] :-) == Set 'spk-vol' volume to -9.5 dBOK

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Set 'spk-vol' volume to -9.5 dBOK
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021305s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam --set --block botspeaker --param amp-gain --value 16 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:16.416]
Write to ---> MOBILE , command[audioparam --set --block botspeaker --param amp-gain --value 16(STRING)]

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam --set --block botspeaker --param amp-gain --value 16,2,0;return value:0!

[2016-04-05 17:39:16.416]
PostTXToUI ===> 
{
Info ==> audioparam --set --block botspeaker --param amp-gain --value 16 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Set 'spk-vol' volume to -9.5 dBOK
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005630s) ++++++++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam --set --block botspeaker --param amp-gain --value 16 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam --set --block botspeaker --param amp-gain --value 16
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:16.416]
PostRXToUI ===> 
{
Info ==> audioparam --set --block botspeaker --param amp-gain --value 16
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:16.416]
READ_COMMAND => Catch string between audioparam --set --block botspeaker --param amp-gain --value 16 and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> OK
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020579s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam --set --block botspeaker --param enable-mon --value true 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:16.416]
Write to ---> MOBILE , command[audioparam --set --block botspeaker --param enable-mon --value true(STRING)]

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam --set --block botspeaker --param enable-mon --value true,2,0;return value:0!

[2016-04-05 17:39:16.416]
PostTXToUI ===> 
{
Info ==> audioparam --set --block botspeaker --param enable-mon --value true 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> OK
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005754s) ++++++++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam --set --block botspeaker --param enable-mon --value true 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam --set --block botspeaker --param enable-mon --value true
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:16.416]
PostRXToUI ===> 
{
Info ==> audioparam --set --block botspeaker --param enable-mon --value true
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:16.416]
READ_COMMAND => Catch string between audioparam --set --block botspeaker --param enable-mon --value true and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> OK
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020621s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:16.416]
Write to ---> MOBILE , command[processaudio --freebufs all(STRING)]

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all,2,0;return value:0!

[2016-04-05 17:39:16.416]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> OK
++++++++++++++++++++ [19] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005604s) ++++++++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:16.416]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : Delete all buffers in the system...OK

[2016-04-05 17:39:16.416]
READ_COMMAND => Catch string between processaudio --freebufs all and [001D38CC:3020213A] :-) == Delete all buffers in the system...OK

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++ [20] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021066s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> loopaudio -b socmca --txport ap-mca2 --rxport ap-mca4 --len 400 --freq 3000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:16.416]
Write to ---> MOBILE , command[loopaudio -b socmca --txport ap-mca2 --rxport ap-mca4 --len 400 --freq 3000(STRING)]

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:loopaudio -b socmca --txport ap-mca2 --rxport ap-mca4 --len 400 --freq 3000,2,0;return value:0!

[2016-04-05 17:39:16.416]
PostTXToUI ===> 
{
Info ==> loopaudio -b socmca --txport ap-mca2 --rxport ap-mca4 --len 400 --freq 3000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++++++++ [21] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005662s) ++++++++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> loopaudio -b socmca --txport ap-mca2 --rxport ap-mca4 --len 400 --freq 3000 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:loopaudio -b socmca --txport ap-mca2 --rxport ap-mca4 --len 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:16.416]
PostRXToUI ===> 
{
Info ==> loopaudio -b socmca --txport ap-mca2 --rxport ap-mca4 --len 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK

[2016-04-05 17:39:16.416]
READ_COMMAND => Catch string between loopaudio -b socmca --txport ap-mca2 --rxport ap-mca4 --len 400 --freq 3000 and [001D38CC:3020213A] :-) == Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK
++++++++++++++ [22] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.446502s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i looprx0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:16.416]
Write to ---> MOBILE , command[processaudio -p fft -i looprx0(STRING)]

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i looprx0,2,0;return value:0!

[2016-04-05 17:39:16.416]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK
++++++++++++++++++++ [23] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005760s) ++++++++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i looprx0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i looprx0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=11.942747 dBFS
Peak Power: -30.526793 dBFS
Signal Power: -30.684991 dBFS
Noise Power: -42.627739 dBFS
Average Noise PSD: -77.957192 dBFS
Noise Margin: 47.430399 dBFS
THD+N: -20.353081 dB
Channel 1:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000095 FS
Signal Bins=3
SINAD=13.294213 dBFS
Peak Power: -11.472090 dBFS
Signal Power: -11.617283 dBFS
Noise Power: -24.911496 dBFS
Average Noise PSD: -60.240950 dBFS
Noise Margin: 48.768860 dBFS
THD+N: -34.104296 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:16.416]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=11.942747 dBFS
Peak Power: -30.526793 dBFS
Signal Power: -30.684991 dBFS
Noise Power: -42.627739 dBFS
Average Noise PSD: -77.957192 dBFS
Noise Margin: 47.430399 dBFS
THD+N: -20.353081 dB
Channel 1:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000095 FS
Signal Bins=3
SINAD=13.294213 dBFS
Peak Power: -11.472090 dBFS
Signal Power: -11.617283 dBFS
Noise Power: -24.911496 dBFS
Average Noise PSD: -60.240950 dBFS
Noise Margin: 48.768860 dBFS
THD+N: -34.104296 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000006 FSSignal Bins=3SINAD=11.942747 dBFSPeak Power: -30.526793 dBFSSignal Power: -30.684991 dBFSNoise Power: -42.627739 dBFSAverage Noise PSD: -77.957192 dBFSNoise Margin: 47.430399 dBFSTHD+N: -20.353081 dBChannel 1:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000095 FSSignal Bins=3SINAD=13.294213 dBFSPeak Power: -11.472090 dBFSSignal Power: -11.617283 dBFSNoise Power: -24.911496 dBFSAverage Noise PSD: -60.240950 dBFSNoise Margin: 48.768860 dBFSTHD+N: -34.104296 dBOK

[2016-04-05 17:39:16.416]
READ_COMMAND => Catch string between processaudio -p fft -i looprx0 and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000006 FSSignal Bins=3SINAD=11.942747 dBFSPeak Power: -30.526793 dBFSSignal Power: -30.684991 dBFSNoise Power: -42.627739 dBFSAverage Noise PSD: -77.957192 dBFSNoise Margin: 47.430399 dBFSTHD+N: -20.353081 dBChannel 1:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000095 FSSignal Bins=3SINAD=13.294213 dBFSPeak Power: -11.472090 dBFSSignal Power: -11.617283 dBFSNoise Power: -24.911496 dBFSAverage Noise PSD: -60.240950 dBFSNoise Margin: 48.768860 dBFSTHD+N: -34.104296 dBOK

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000006 FSSignal Bins=3SINAD=11.942747 dBFSPeak Power: -30.526793 dBFSSignal Power: -30.684991 dBFSNoise Power: -42.627739 dBFSAverage Noise PSD: -77.957192 dBFSNoise Margin: 47.430399 dBFSTHD+N: -20.353081 dBChannel 1:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000095 FSSignal Bins=3SINAD=13.294213 dBFSPeak Power: -11.472090 dBFSSignal Power: -11.617283 dBFSNoise Power: -24.911496 dBFSAverage Noise PSD: -60.240950 dBFSNoise Margin: 48.768860 dBFSTHD+N: -34.104296 dBOK
++++++++++++++ [24] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.111229s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3KSTMIC 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000006 FSSignal Bins=3SINAD=11.942747 dBFSPeak Power: -30.526793 dBFSSignal Power: -30.684991 dBFSNoise Power: -42.627739 dBFSAverage Noise PSD: -77.957192 dBFSNoise Margin: 47.430399 dBFSTHD+N: -20.353081 dBChannel 1:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000095 FSSignal Bins=3SINAD=13.294213 dBFSPeak Power: -11.472090 dBFSSignal Power: -11.617283 dBFSNoise Power: -24.911496 dBFSAverage Noise PSD: -60.240950 dBFSNoise Margin: 48.768860 dBFSTHD+N: -34.104296 dBOK
++++++++++ [25] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 0: 
KEY ==> 3KSTMIC 
END ==> Channel 1: 
}

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000006 FSSignal Bins=3SINAD=11.942747 dBFSPeak Power: -30.526793 dBFSSignal Power: -30.684991 dBFSNoise Power: -42.627739 dBFSAverage Noise PSD: -77.957192 dBFSNoise Margin: 47.430399 dBFSTHD+N: -20.353081 dB

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000006 FSSignal Bins=3SINAD=11.942747 dBFSPeak Power: -30.526793 dBFSSignal Power: -30.684991 dBFSNoise Power: -42.627739 dBFSAverage Noise PSD: -77.957192 dBFSNoise Margin: 47.430399 dBFSTHD+N: -20.353081 dB
++++++++++++++ [26] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000659s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3KSTM1_LEFT 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.029761 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000006 FSSignal Bins=3SINAD=11.942747 dBFSPeak Power: -30.526793 dBFSSignal Power: -30.684991 dBFSNoise Power: -42.627739 dBFSAverage Noise PSD: -77.957192 dBFSNoise Margin: 47.430399 dBFSTHD+N: -20.353081 dB
++++++++++ [27] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 1: 
KEY ==> 3KSTMIC 
END ==> OK 
}

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000095 FSSignal Bins=3SINAD=13.294213 dBFSPeak Power: -11.472090 dBFSSignal Power: -11.617283 dBFSNoise Power: -24.911496 dBFSAverage Noise PSD: -60.240950 dBFSNoise Margin: 48.768860 dBFSTHD+N: -34.104296 dB

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000095 FSSignal Bins=3SINAD=13.294213 dBFSPeak Power: -11.472090 dBFSSignal Power: -11.617283 dBFSNoise Power: -24.911496 dBFSAverage Noise PSD: -60.240950 dBFSNoise Margin: 48.768860 dBFSTHD+N: -34.104296 dB
++++++++++++++ [28] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000667s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3KSTM4_RIGHT 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.266928 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000095 FSSignal Bins=3SINAD=13.294213 dBFSPeak Power: -11.472090 dBFSSignal Power: -11.617283 dBFSNoise Power: -24.911496 dBFSAverage Noise PSD: -60.240950 dBFSNoise Margin: 48.768860 dBFSTHD+N: -34.104296 dB
++++++++++ [29] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3KSTM1_LEFT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 3000.000000
++++++++++++++ [30] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000213s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone SPK to MIC1_Frequency(L)_spec*] 
 
}

[2016-04-05 17:39:16.416]
JUDGE_SPEC =>  value is [3000.000000], spec is [Item0=2996 ; Item1=3004 ; ], mode is [1]

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 3000.000000
+++++++++++++++ [31] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000648s) +++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone SPK to MIC1_Frequency(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 3000.000000
+++++++++++ [32] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:39:16.416]
========= END TEST 3K Tone SPK to MIC1_Frequency(L) (TestResult : PASS ; Duration : 1.189343s) =========

[2016-04-05 17:39:16.416]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone SPK to MIC1_Frequency(L),,,3000.000000,2996,3004,,)

[2016-04-05 17:39:16.416]
Item Name:3K Tone SPK to MIC1_Frequency(L), [2996,3004]

[2016-04-05 17:39:16.416]
========================= START TEST 3K TONE SPK TO MIC1_MAX_POWER(L) (Item49) =========================

[2016-04-05 17:39:16.416]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3KSTM1_LEFT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 0.029761
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000344s) +++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone SPK to MIC1_Max_Power(L)_spec*] 
 
}

[2016-04-05 17:39:16.416]
JUDGE_SPEC =>  value is [0.029761], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 0.029761
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000928s) +++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone SPK to MIC1_Max_Power(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 0.029761
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:16.416]
========= END TEST 3K Tone SPK to MIC1_Max_Power(L) (TestResult : PASS ; Duration : 0.006905s) =========

[2016-04-05 17:39:16.416]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone SPK to MIC1_Max_Power(L),,,0.029761,NA,NA,,)

[2016-04-05 17:39:16.416]
Item Name:3K Tone SPK to MIC1_Max_Power(L), {NA}

[2016-04-05 17:39:16.416]
========================= START TEST 3K TONE SPK TO MIC4_FREQUENCY(R) (Item50) =========================

[2016-04-05 17:39:16.416]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3KSTM4_RIGHT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 3000.000000
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000261s) +++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone SPK to MIC4_Frequency(R)_spec*] 
 
}

[2016-04-05 17:39:16.416]
JUDGE_SPEC =>  value is [3000.000000], spec is [Item0=2996 ; Item1=3004 ; ], mode is [1]

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 3000.000000
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000822s) +++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone SPK to MIC4_Frequency(R)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 3000.000000
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:39:16.416]
========= END TEST 3K Tone SPK to MIC4_Frequency(R) (TestResult : PASS ; Duration : 0.006043s) =========

[2016-04-05 17:39:16.416]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone SPK to MIC4_Frequency(R),,,3000.000000,2996,3004,,)

[2016-04-05 17:39:16.416]
Item Name:3K Tone SPK to MIC4_Frequency(R), [2996,3004]

[2016-04-05 17:39:16.416]
========================= START TEST 3K TONE SPK TO MIC4_MAX_POWER(R) (Item51) =========================

[2016-04-05 17:39:16.416]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3KSTM4_RIGHT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 0.266928
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000276s) +++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone SPK to MIC4_Max_Power(R)_spec*] 
 
}

[2016-04-05 17:39:16.416]
JUDGE_SPEC =>  value is [0.266928], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 0.266928
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000817s) +++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone SPK to MIC4_Max_Power(R)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 0.266928
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:16.416]
========= END TEST 3K Tone SPK to MIC4_Max_Power(R) (TestResult : PASS ; Duration : 0.006024s) =========

[2016-04-05 17:39:16.416]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone SPK to MIC4_Max_Power(R),,,0.266928,NA,NA,,)

[2016-04-05 17:39:16.416]
Item Name:3K Tone SPK to MIC4_Max_Power(R), {NA}

[2016-04-05 17:39:16.416]
=========================== START TEST 1K TONE TO MIC2_FREQUENCY(L) (Item52) ===========================

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff botspeaker 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:16.416]
Write to ---> MOBILE , command[audio --turnoff botspeaker(STRING)]

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff botspeaker,2,0;return value:0!

[2016-04-05 17:39:16.416]
PostTXToUI ===> 
{
Info ==> audio --turnoff botspeaker 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007172s) +++++++++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff botspeaker 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:16.416]
PostRXToUI ===> 
{
Info ==> audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:16.416]
CATCH_VALUE => Catch OK : Turning-off power to botspeaker...OK

[2016-04-05 17:39:16.416]
READ_COMMAND => Catch string between audio --turnoff botspeaker and [001D38CC:3020213A] :-) == Turning-off power to botspeaker...OK

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Turning-off power to botspeaker...OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021976s) ++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open Speaker2 1000 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:16.416]
Write to ---> FIXTURE , command[Open Speaker2 1000(STRING)]

[2016-04-05 17:39:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Speaker2 1000,2,0;return value:0!

[2016-04-05 17:39:16.416]
PostTXToUI ===> 
{
Info ==> Open Speaker2 1000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:16.416]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:16.416]
RETURN_VALUE ===> Turning-off power to botspeaker...OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006236s) +++++++++++++++++++++

[2016-04-05 17:39:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open Speaker2 1000 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Speaker2 1000
Open Speaker2 1000 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:17.417]
PostRXToUI ===> 
{
Info ==> Open Speaker2 1000
Open Speaker2 1000 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:17.417]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:17.417]
CATCH_VALUE => Catch OK : Open Speaker2 1000 Pass

[2016-04-05 17:39:17.417]
READ_COMMAND => Catch string between Open Speaker2 1000 and @_@ == Open Speaker2 1000 Pass

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Open Speaker2 1000 Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.058460s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block codec --in ain3 --out xsp[1:0] 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:17.417]
Write to ---> MOBILE , command[routeaudio --route --block codec --in ain3 --out xsp[1:0](STRING)]

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block codec --in ain3 --out xsp[1:0],2,0;return value:0!

[2016-04-05 17:39:17.417]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain3 --out xsp[1:0] 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Open Speaker2 1000 Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005932s) +++++++++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block codec --in ain3 --out xsp[1:0] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block codec --in ain3 --out xsp[1:0]
Routing from codec.ain3[l] --> codec.xsp[1:0]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:17.417]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain3 --out xsp[1:0]
Routing from codec.ain3[l] --> codec.xsp[1:0]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:17.417]
CATCH_VALUE => Catch OK : Routing from codec.ain3[l] --> codec.xsp[1:0]OK

[2016-04-05 17:39:17.417]
READ_COMMAND => Catch string between routeaudio --route --block codec --in ain3 --out xsp[1:0] and [001D38CC:3020213A] :-) == Routing from codec.ain3[l] --> codec.xsp[1:0]OK

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Routing from codec.ain3[l] --> codec.xsp[1:0]OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.118460s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:17.417]
Write to ---> MOBILE , command[processaudio --freebufs all(STRING)]

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all,2,0;return value:0!

[2016-04-05 17:39:17.417]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Routing from codec.ain3[l] --> codec.xsp[1:0]OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005774s) +++++++++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:17.417]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:17.417]
CATCH_VALUE => Catch OK : Delete all buffers in the system...OK

[2016-04-05 17:39:17.417]
READ_COMMAND => Catch string between processaudio --freebufs all and [001D38CC:3020213A] :-) == Delete all buffers in the system...OK

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023044s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> recordaudio -b socmca -p ap-mca4 -r 48000 -l 400 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:17.417]
Write to ---> MOBILE , command[recordaudio -b socmca -p ap-mca4 -r 48000 -l 400(STRING)]

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:recordaudio -b socmca -p ap-mca4 -r 48000 -l 400,2,0;return value:0!

[2016-04-05 17:39:17.417]
PostTXToUI ===> 
{
Info ==> recordaudio -b socmca -p ap-mca4 -r 48000 -l 400 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Delete all buffers in the system...OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006272s) +++++++++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> recordaudio -b socmca -p ap-mca4 -r 48000 -l 400 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:recordaudio -b socmca -p ap-mca4 -r 48000 -l 400
DataFormat = 00000002
Configuring 'socmca' to record 48Khz, 16-bit, 2 channels of audio data for 400mS...
Requesting new buffer...
Using buffer 'record0'
Recording audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:17.417]
PostRXToUI ===> 
{
Info ==> recordaudio -b socmca -p ap-mca4 -r 48000 -l 400
DataFormat = 00000002
Configuring 'socmca' to record 48Khz, 16-bit, 2 channels of audio data for 400mS...
Requesting new buffer...
Using buffer 'record0'
Recording audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:17.417]
CATCH_VALUE => Catch OK : DataFormat = 00000002Configuring 'socmca' to record 48Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK

[2016-04-05 17:39:17.417]
READ_COMMAND => Catch string between recordaudio -b socmca -p ap-mca4 -r 48000 -l 400 and [001D38CC:3020213A] :-) == DataFormat = 00000002Configuring 'socmca' to record 48Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> DataFormat = 00000002Configuring 'socmca' to record 48Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.432679s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Speaker2 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:17.417]
Write to ---> FIXTURE , command[Close Speaker2(STRING)]

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Speaker2,2,0;return value:0!

[2016-04-05 17:39:17.417]
PostTXToUI ===> 
{
Info ==> Close Speaker2 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:17.417]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> DataFormat = 00000002Configuring 'socmca' to record 48Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005835s) ++++++++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Speaker2 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Speaker2
Close Speaker2 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:17.417]
PostRXToUI ===> 
{
Info ==> Close Speaker2
Close Speaker2 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:17.417]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:17.417]
CATCH_VALUE => Catch OK : Close Speaker2 Pass

[2016-04-05 17:39:17.417]
READ_COMMAND => Catch string between Close Speaker2 and @_@ == Close Speaker2 Pass

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Close Speaker2 Pass
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.011539s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i record0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:17.417]
Write to ---> MOBILE , command[processaudio -p fft -i record0(STRING)]

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i record0,2,0;return value:0!

[2016-04-05 17:39:17.417]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i record0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Close Speaker2 Pass
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005362s) ++++++++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i record0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i record0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 Hz
DC Magnitude=0.001275 FS
Signal Bins=3
SINAD=11.219171 dBFS
Peak Power: -8.394625 dBFS
Signal Power: -8.311971 dBFS
Noise Power: -19.531143 dBFS
Average Noise PSD: -54.860597 dBFS
Noise Margin: 46.465971 dBFS
THD+N: -19.759491 dB
Channel 1:
Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 Hz
DC Magnitude=0.001275 FS
Signal Bins=3
SINAD=11.219171 dBFS
Peak Power: -8.394625 dBFS
Signal Power: -8.311971 dBFS
Noise Power: -19.531143 dBFS
Average Noise PSD: -54.860597 dBFS
Noise Margin: 46.465972 dBFS
THD+N: -19.759491 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:17.417]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i record0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 Hz
DC Magnitude=0.001275 FS
Signal Bins=3
SINAD=11.219171 dBFS
Peak Power: -8.394625 dBFS
Signal Power: -8.311971 dBFS
Noise Power: -19.531143 dBFS
Average Noise PSD: -54.860597 dBFS
Noise Margin: 46.465971 dBFS
THD+N: -19.759491 dB
Channel 1:
Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 Hz
DC Magnitude=0.001275 FS
Signal Bins=3
SINAD=11.219171 dBFS
Peak Power: -8.394625 dBFS
Signal Power: -8.311971 dBFS
Noise Power: -19.531143 dBFS
Average Noise PSD: -54.860597 dBFS
Noise Margin: 46.465972 dBFS
THD+N: -19.759491 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:17.417]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465971 dBFSTHD+N: -19.759491 dBChannel 1:Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465972 dBFSTHD+N: -19.759491 dBOK

[2016-04-05 17:39:17.417]
READ_COMMAND => Catch string between processaudio -p fft -i record0 and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465971 dBFSTHD+N: -19.759491 dBChannel 1:Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465972 dBFSTHD+N: -19.759491 dBOK

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465971 dBFSTHD+N: -19.759491 dBChannel 1:Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465972 dBFSTHD+N: -19.759491 dBOK
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.100152s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 1KSTM2 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465971 dBFSTHD+N: -19.759491 dBChannel 1:Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465972 dBFSTHD+N: -19.759491 dBOK
++++++++++ [15] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 0: 
KEY ==> 1KSTM2 
END ==> Channel 1: 
}

[2016-04-05 17:39:17.417]
CATCH_VALUE => Catch OK : Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465971 dBFSTHD+N: -19.759491 dB

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465971 dBFSTHD+N: -19.759491 dB
++++++++++++++ [16] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000763s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 1KSTM2_LEFT 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465971 dBFSTHD+N: -19.759491 dB
++++++++++ [17] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 1: 
KEY ==> 1KSTM2 
END ==> OK 
}

[2016-04-05 17:39:17.417]
CATCH_VALUE => Catch OK : Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465972 dBFSTHD+N: -19.759491 dB

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465972 dBFSTHD+N: -19.759491 dB
++++++++++++++ [18] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000662s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 1KSTM2_RIGHT 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> Using 16384 bins, Peak Bin= 341; Peak Magnitude=0.380424 FS; Frequency:  999.023437 +/- 1.464843 HzDC Magnitude=0.001275 FSSignal Bins=3SINAD=11.219171 dBFSPeak Power: -8.394625 dBFSSignal Power: -8.311971 dBFSNoise Power: -19.531143 dBFSAverage Noise PSD: -54.860597 dBFSNoise Margin: 46.465972 dBFSTHD+N: -19.759491 dB
++++++++++ [19] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 1KSTM2_LEFT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 999.023437
++++++++++++++ [20] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000205s) ++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*1K Tone to MIC2_Frequency(L)_spec*] 
 
}

[2016-04-05 17:39:17.417]
JUDGE_SPEC =>  value is [999.023437], spec is [Item0=996 ; Item1=1004 ; ], mode is [1]

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 999.023437
+++++++++++++++ [21] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000612s) +++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*1K Tone to MIC2_Frequency(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 999.023437
+++++++++++ [22] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++++++

[2016-04-05 17:39:17.417]
=========== END TEST 1K Tone to MIC2_Frequency(L) (TestResult : PASS ; Duration : 0.842681s) ===========

[2016-04-05 17:39:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(1K Tone to MIC2_Frequency(L),,,999.023437,996,1004,,)

[2016-04-05 17:39:17.417]
Item Name:1K Tone to MIC2_Frequency(L), [996,1004]

[2016-04-05 17:39:17.417]
=========================== START TEST 1K TONE TO MIC2_MAX_POWER(L) (Item53) ===========================

[2016-04-05 17:39:17.417]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 1KSTM2_LEFT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 0.380424
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000258s) +++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*1K Tone to MIC2_Max_Power(L)_spec*] 
 
}

[2016-04-05 17:39:17.417]
JUDGE_SPEC =>  value is [0.380424], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 0.380424
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000822s) +++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*1K Tone to MIC2_Max_Power(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 0.380424
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:17.417]
=========== END TEST 1K Tone to MIC2_Max_Power(L) (TestResult : PASS ; Duration : 0.006099s) ===========

[2016-04-05 17:39:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(1K Tone to MIC2_Max_Power(L),,,0.380424,NA,NA,,)

[2016-04-05 17:39:17.417]
Item Name:1K Tone to MIC2_Max_Power(L), {NA}

[2016-04-05 17:39:17.417]
=========================== START TEST 1K TONE TO MIC2_FREQUENCY(R) (Item54) ===========================

[2016-04-05 17:39:17.417]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 1KSTM2_RIGHT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 999.023437
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000260s) +++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*1K Tone to MIC2_Frequency(R)_spec*] 
 
}

[2016-04-05 17:39:17.417]
JUDGE_SPEC =>  value is [999.023437], spec is [Item0=996 ; Item1=1004 ; ], mode is [1]

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 999.023437
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000824s) +++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*1K Tone to MIC2_Frequency(R)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 999.023437
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:17.417]
=========== END TEST 1K Tone to MIC2_Frequency(R) (TestResult : PASS ; Duration : 0.005917s) ===========

[2016-04-05 17:39:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(1K Tone to MIC2_Frequency(R),,,999.023437,996,1004,,)

[2016-04-05 17:39:17.417]
Item Name:1K Tone to MIC2_Frequency(R), [996,1004]

[2016-04-05 17:39:17.417]
=========================== START TEST 1K TONE TO MIC2_MAX_POWER(R) (Item55) ===========================

[2016-04-05 17:39:17.417]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 1KSTM2_RIGHT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 0.380424
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000292s) +++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*1K Tone to MIC2_Max_Power(R)_spec*] 
 
}

[2016-04-05 17:39:17.417]
JUDGE_SPEC =>  value is [0.380424], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 0.380424
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000809s) +++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*1K Tone to MIC2_Max_Power(R)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 0.380424
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:17.417]
=========== END TEST 1K Tone to MIC2_Max_Power(R) (TestResult : PASS ; Duration : 0.006305s) ===========

[2016-04-05 17:39:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(1K Tone to MIC2_Max_Power(R),,,0.380424,NA,NA,,)

[2016-04-05 17:39:17.417]
Item Name:1K Tone to MIC2_Max_Power(R), {NA}

[2016-04-05 17:39:17.417]
====================== START TEST 1K TONE TO LOW_POWER_MIC2_FREQUENCY(L) (Item56) ======================

[2016-04-05 17:39:17.417]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --reset 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:17.417]
Write to ---> MOBILE , command[audio --reset(STRING)]

[2016-04-05 17:39:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --reset,2,0;return value:0!

[2016-04-05 17:39:17.417]
PostTXToUI ===> 
{
Info ==> audio --reset 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:17.417 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:17.417]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:17.417]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006964s) +++++++++++++++++++++

[2016-04-05 17:39:17.417]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --reset 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...Speaker already powered off.OK

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between audio --reset and [001D38CC:3020213A] :-) == Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...Speaker already powered off.OK

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...Speaker already powered off.OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.155501s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open Speaker2 1000 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:18.418]
Write to ---> FIXTURE , command[Open Speaker2 1000(STRING)]

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Speaker2 1000,2,0;return value:0!

[2016-04-05 17:39:18.418]
PostTXToUI ===> 
{
Info ==> Open Speaker2 1000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:18.418]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...Speaker already powered off.OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005595s) +++++++++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open Speaker2 1000 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Speaker2 1000
Open Speaker2 1000 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> Open Speaker2 1000
Open Speaker2 1000 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : Open Speaker2 1000 Pass

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between Open Speaker2 1000 and @_@ == Open Speaker2 1000 Pass

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Open Speaker2 1000 Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.054713s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:18.418]
Write to ---> MOBILE , command[audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave(STRING)]

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave,2,0;return value:0!

[2016-04-05 17:39:18.418]
PostTXToUI ===> 
{
Info ==> audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Open Speaker2 1000 Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005992s) +++++++++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022652s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:18.418]
Write to ---> MOBILE , command[audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave(STRING)]

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave,2,0;return value:0!

[2016-04-05 17:39:18.418]
PostTXToUI ===> 
{
Info ==> audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006173s) +++++++++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021506s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio -b codec -i lp_ain3 -o xsp[0] -r 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:18.418]
Write to ---> MOBILE , command[routeaudio -b codec -i lp_ain3 -o xsp[0] -r(STRING)]

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio -b codec -i lp_ain3 -o xsp[0] -r,2,0;return value:0!

[2016-04-05 17:39:18.418]
PostTXToUI ===> 
{
Info ==> routeaudio -b codec -i lp_ain3 -o xsp[0] -r 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006083s) +++++++++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio -b codec -i lp_ain3 -o xsp[0] -r 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio -b codec -i lp_ain3 -o xsp[0] -r
Routing from codec.lp_ain3[l] --> codec.xsp[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> routeaudio -b codec -i lp_ain3 -o xsp[0] -r
Routing from codec.lp_ain3[l] --> codec.xsp[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : Routing from codec.lp_ain3[l] --> codec.xsp[l]OK

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between routeaudio -b codec -i lp_ain3 -o xsp[0] -r and [001D38CC:3020213A] :-) == Routing from codec.lp_ain3[l] --> codec.xsp[l]OK

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Routing from codec.lp_ain3[l] --> codec.xsp[l]OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.116676s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:18.418]
Write to ---> MOBILE , command[processaudio --freebufs all(STRING)]

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all,2,0;return value:0!

[2016-04-05 17:39:18.418]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Routing from codec.lp_ain3[l] --> codec.xsp[l]OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005553s) ++++++++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : Delete all buffers in the system...OK

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between processaudio --freebufs all and [001D38CC:3020213A] :-) == Delete all buffers in the system...OK

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021572s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:18.418]
Write to ---> MOBILE , command[recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000(STRING)]

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000,2,0;return value:0!

[2016-04-05 17:39:18.418]
PostTXToUI ===> 
{
Info ==> recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005597s) ++++++++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000
DataFormat = 00000002
Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...
Requesting new buffer...
Using buffer 'record0'
Recording audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000
DataFormat = 00000002
Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...
Requesting new buffer...
Using buffer 'record0'
Recording audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : DataFormat = 00000002Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000 and [001D38CC:3020213A] :-) == DataFormat = 00000002Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> DataFormat = 00000002Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.433337s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Speaker2 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:18.418]
Write to ---> FIXTURE , command[Close Speaker2(STRING)]

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Speaker2,2,0;return value:0!

[2016-04-05 17:39:18.418]
PostTXToUI ===> 
{
Info ==> Close Speaker2 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:18.418]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> DataFormat = 00000002Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005751s) ++++++++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Speaker2 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Speaker2
Close Speaker2 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> Close Speaker2
Close Speaker2 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : Close Speaker2 Pass

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between Close Speaker2 and @_@ == Close Speaker2 Pass

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Close Speaker2 Pass
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.019385s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i record0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:18.418]
Write to ---> MOBILE , command[processaudio -p fft -i record0(STRING)]

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i record0,2,0;return value:0!

[2016-04-05 17:39:18.418]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i record0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Close Speaker2 Pass
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006764s) ++++++++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i record0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i record0
Number of samples does not equal power of 2 - truncating to 4096 samples...
Channel 0:
Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 Hz
DC Magnitude=0.009993 FS
Signal Bins=3
SINAD=9.087434 dBFS
Peak Power: -7.126877 dBFS
Signal Power: -7.255057 dBFS
Noise Power: -16.342492 dBFS
Average Noise PSD: -46.439125 dBFS
Noise Margin: 39.312248 dBFS
THD+N: -11.659624 dB
Channel 1:
Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz
[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0
[0mDC Magnitude=0.000000 FS
Signal Bins=3
SINAD=-inf dBFS
Peak Power: -inf dBFS
Signal Power: -inf dBFS
Noise Power: -inf dBFS
Average Noise PSD: -inf dBFS
Noise Margin: NaN dBFS
THD+N: 0.000000 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:18.418]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i record0
Number of samples does not equal power of 2 - truncating to 4096 samples...
Channel 0:
Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 Hz
DC Magnitude=0.009993 FS
Signal Bins=3
SINAD=9.087434 dBFS
Peak Power: -7.126877 dBFS
Signal Power: -7.255057 dBFS
Noise Power: -16.342492 dBFS
Average Noise PSD: -46.439125 dBFS
Noise Margin: 39.312248 dBFS
THD+N: -11.659624 dB
Channel 1:
Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz
[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0
[0mDC Magnitude=0.000000 FS
Signal Bins=3
SINAD=-inf dBFS
Peak Power: -inf dBFS
Signal Power: -inf dBFS
Noise Power: -inf dBFS
Average Noise PSD: -inf dBFS
Noise Margin: NaN dBFS
THD+N: 0.000000 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:18.418]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 4096 samples...Channel 0:Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 HzDC Magnitude=0.009993 FSSignal Bins=3SINAD=9.087434 dBFSPeak Power: -7.126877 dBFSSignal Power: -7.255057 dBFSNoise Power: -16.342492 dBFSAverage Noise PSD: -46.439125 dBFSNoise Margin: 39.312248 dBFSTHD+N: -11.659624 dBChannel 1:Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBOK

[2016-04-05 17:39:18.418]
READ_COMMAND => Catch string between processaudio -p fft -i record0 and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 4096 samples...Channel 0:Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 HzDC Magnitude=0.009993 FSSignal Bins=3SINAD=9.087434 dBFSPeak Power: -7.126877 dBFSSignal Power: -7.255057 dBFSNoise Power: -16.342492 dBFSAverage Noise PSD: -46.439125 dBFSNoise Margin: 39.312248 dBFSTHD+N: -11.659624 dBChannel 1:Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBOK

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 4096 samples...Channel 0:Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 HzDC Magnitude=0.009993 FSSignal Bins=3SINAD=9.087434 dBFSPeak Power: -7.126877 dBFSSignal Power: -7.255057 dBFSNoise Power: -16.342492 dBFSAverage Noise PSD: -46.439125 dBFSNoise Margin: 39.312248 dBFSTHD+N: -11.659624 dBChannel 1:Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBOK
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.100330s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 1K_MIC2_LOW 
}

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 4096 samples...Channel 0:Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 HzDC Magnitude=0.009993 FSSignal Bins=3SINAD=9.087434 dBFSPeak Power: -7.126877 dBFSSignal Power: -7.255057 dBFSNoise Power: -16.342492 dBFSAverage Noise PSD: -46.439125 dBFSNoise Margin: 39.312248 dBFSTHD+N: -11.659624 dBChannel 1:Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBOK
++++++++++ [19] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 0: 
KEY ==> 1K_MIC2_LOW 
END ==> Channel 1: 
}

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 HzDC Magnitude=0.009993 FSSignal Bins=3SINAD=9.087434 dBFSPeak Power: -7.126877 dBFSSignal Power: -7.255057 dBFSNoise Power: -16.342492 dBFSAverage Noise PSD: -46.439125 dBFSNoise Margin: 39.312248 dBFSTHD+N: -11.659624 dB

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 HzDC Magnitude=0.009993 FSSignal Bins=3SINAD=9.087434 dBFSPeak Power: -7.126877 dBFSSignal Power: -7.255057 dBFSNoise Power: -16.342492 dBFSAverage Noise PSD: -46.439125 dBFSNoise Margin: 39.312248 dBFSTHD+N: -11.659624 dB
++++++++++++++ [20] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000743s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 1K_MIC2_LOW_LEFT 
}

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Using 4096 bins, Peak Bin= 255; Peak Magnitude=0.440206 FS; Frequency:  996.093750 +/- 1.953125 HzDC Magnitude=0.009993 FSSignal Bins=3SINAD=9.087434 dBFSPeak Power: -7.126877 dBFSSignal Power: -7.255057 dBFSNoise Power: -16.342492 dBFSAverage Noise PSD: -46.439125 dBFSNoise Margin: 39.312248 dBFSTHD+N: -11.659624 dB
++++++++++ [21] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 1: 
KEY ==> 1K_MIC2_LOW 
END ==> OK 
}

[2016-04-05 17:39:18.418]
CATCH_VALUE => Catch OK : Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dB

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dB
++++++++++++++ [22] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000685s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 1K_MIC2_LOW_RIGHT 
}

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dB
++++++++++ [23] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 1K_MIC2_LOW_LEFT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> 996.093750
++++++++++++++ [24] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000207s) ++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*1K Tone to Low_Power_MIC2_Frequency(L)_spec*] 
 
}

[2016-04-05 17:39:18.418]
JUDGE_SPEC =>  value is [996.093750], spec is [Item0=950 ; Item1=1050 ; ], mode is [1]

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> 996.093750
+++++++++++++++ [25] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000634s) +++++++++++++++

[2016-04-05 17:39:18.418]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*1K Tone to Low_Power_MIC2_Frequency(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:18.418]
RETURN_VALUE ===> 996.093750
+++++++++++ [26] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++++++

[2016-04-05 17:39:18.418]
====== END TEST 1K Tone to Low_Power_MIC2_Frequency(L) (TestResult : PASS ; Duration : 1.038630s) ======

[2016-04-05 17:39:18.418]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(1K Tone to Low_Power_MIC2_Frequency(L),,,996.093750,950,1050,,)

[2016-04-05 17:39:18.418]
Item Name:1K Tone to Low_Power_MIC2_Frequency(L), [950,1050]

[2016-04-05 17:39:18.418]
====================== START TEST 1K TONE TO LOW_POWER_MIC2_MAX_POWER(L) (Item57) ======================

[2016-04-05 17:39:19.419]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 1K_MIC2_LOW_LEFT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 0.440206
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000345s) +++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*1K Tone to Low_Power_MIC2_Max_Power(L)_spec*] 
 
}

[2016-04-05 17:39:19.419]
JUDGE_SPEC =>  value is [0.440206], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 0.440206
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000852s) +++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*1K Tone to Low_Power_MIC2_Max_Power(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 0.440206
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:19.419]
====== END TEST 1K Tone to Low_Power_MIC2_Max_Power(L) (TestResult : PASS ; Duration : 0.006595s) ======

[2016-04-05 17:39:19.419]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(1K Tone to Low_Power_MIC2_Max_Power(L),,,0.440206,NA,NA,,)

[2016-04-05 17:39:19.419]
Item Name:1K Tone to Low_Power_MIC2_Max_Power(L), {NA}

[2016-04-05 17:39:19.419]
===================== START TEST 400 TONE TO LOW_POWER_MIC2_FREQUENCY(L) (Item58) =====================

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open Speaker2 400 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> FIXTURE , command[Open Speaker2 400(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Speaker2 400,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> Open Speaker2 400 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006604s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open Speaker2 400 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Speaker2 400
Open Speaker2 400 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:19.419]
PostRXToUI ===> 
{
Info ==> Open Speaker2 400
Open Speaker2 400 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:19.419]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Open Speaker2 400 Pass

[2016-04-05 17:39:19.419]
READ_COMMAND => Catch string between Open Speaker2 400 and @_@ == Open Speaker2 400 Pass

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Open Speaker2 400 Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.041960s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> MOBILE , command[processaudio --freebufs all(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Open Speaker2 400 Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005467s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:19.419]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Delete all buffers in the system...OK

[2016-04-05 17:39:19.419]
READ_COMMAND => Catch string between processaudio --freebufs all and [001D38CC:3020213A] :-) == Delete all buffers in the system...OK

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021150s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> MOBILE , command[recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Delete all buffers in the system...OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.008025s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 20 
END ==> :-) 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000
DataFormat = 00000002
Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...
Requesting new buffer...
Using buffer 'record0'
Recording audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:20.000000);return value:0!

[2016-04-05 17:39:19.419]
PostRXToUI ===> 
{
Info ==> recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000
DataFormat = 00000002
Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...
Requesting new buffer...
Using buffer 'record0'
Recording audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : DataFormat = 00000002Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK

[2016-04-05 17:39:19.419]
READ_COMMAND => Catch string between recordaudio -b socmca -p ap-mca4 -d 16 --len 400 -r 16000 and [001D38CC:3020213A] :-) == DataFormat = 00000002Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> DataFormat = 00000002Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.431145s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Speaker2 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> FIXTURE , command[Close Speaker2(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Speaker2,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> Close Speaker2 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> DataFormat = 00000002Configuring 'socmca' to record 16Khz, 16-bit, 2 channels of audio data for 400mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005602s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Speaker2 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 60 
END ==> @_@ 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Speaker2
Close Speaker2 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:19.419]
PostRXToUI ===> 
{
Info ==> Close Speaker2
Close Speaker2 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:19.419]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Close Speaker2 Pass

[2016-04-05 17:39:19.419]
READ_COMMAND => Catch string between Close Speaker2 and @_@ == Close Speaker2 Pass

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Close Speaker2 Pass
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.030652s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i record0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> MOBILE , command[processaudio -p fft -i record0(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i record0,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i record0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Close Speaker2 Pass
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005322s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i record0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i record0
Number of samples does not equal power of 2 - truncating to 4096 samples...
Channel 0:
Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 Hz
DC Magnitude=0.000002 FS
Signal Bins=3
SINAD=7.592801 dBFS
Peak Power: -21.678749 dBFS
Signal Power: -21.834550 dBFS
Noise Power: -29.427351 dBFS
Average Noise PSD: -59.523984 dBFS
Noise Margin: 37.845235 dBFS
THD+N: -9.836864 dB
Channel 1:
Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz
[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0
[0mDC Magnitude=0.000000 FS
Signal Bins=3
SINAD=-inf dBFS
Peak Power: -inf dBFS
Signal Power: -inf dBFS
Noise Power: -inf dBFS
Average Noise PSD: -inf dBFS
Noise Margin: NaN dBFS
THD+N: 0.000000 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:19.419]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i record0
Number of samples does not equal power of 2 - truncating to 4096 samples...
Channel 0:
Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 Hz
DC Magnitude=0.000002 FS
Signal Bins=3
SINAD=7.592801 dBFS
Peak Power: -21.678749 dBFS
Signal Power: -21.834550 dBFS
Noise Power: -29.427351 dBFS
Average Noise PSD: -59.523984 dBFS
Noise Margin: 37.845235 dBFS
THD+N: -9.836864 dB
Channel 1:
Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz
[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0
[0mDC Magnitude=0.000000 FS
Signal Bins=3
SINAD=-inf dBFS
Peak Power: -inf dBFS
Signal Power: -inf dBFS
Noise Power: -inf dBFS
Average Noise PSD: -inf dBFS
Noise Margin: NaN dBFS
THD+N: 0.000000 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 4096 samples...Channel 0:Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 HzDC Magnitude=0.000002 FSSignal Bins=3SINAD=7.592801 dBFSPeak Power: -21.678749 dBFSSignal Power: -21.834550 dBFSNoise Power: -29.427351 dBFSAverage Noise PSD: -59.523984 dBFSNoise Margin: 37.845235 dBFSTHD+N: -9.836864 dBChannel 1:Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBOK

[2016-04-05 17:39:19.419]
READ_COMMAND => Catch string between processaudio -p fft -i record0 and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 4096 samples...Channel 0:Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 HzDC Magnitude=0.000002 FSSignal Bins=3SINAD=7.592801 dBFSPeak Power: -21.678749 dBFSSignal Power: -21.834550 dBFSNoise Power: -29.427351 dBFSAverage Noise PSD: -59.523984 dBFSNoise Margin: 37.845235 dBFSTHD+N: -9.836864 dBChannel 1:Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBOK

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 4096 samples...Channel 0:Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 HzDC Magnitude=0.000002 FSSignal Bins=3SINAD=7.592801 dBFSPeak Power: -21.678749 dBFSSignal Power: -21.834550 dBFSNoise Power: -29.427351 dBFSAverage Noise PSD: -59.523984 dBFSNoise Margin: 37.845235 dBFSTHD+N: -9.836864 dBChannel 1:Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBOK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.101089s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 400_MIC2_LOW 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 4096 samples...Channel 0:Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 HzDC Magnitude=0.000002 FSSignal Bins=3SINAD=7.592801 dBFSPeak Power: -21.678749 dBFSSignal Power: -21.834550 dBFSNoise Power: -29.427351 dBFSAverage Noise PSD: -59.523984 dBFSNoise Margin: 37.845235 dBFSTHD+N: -9.836864 dBChannel 1:Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBOK
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 0: 
KEY ==> 400_MIC2_LOW 
END ==> Channel 1: 
}

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 HzDC Magnitude=0.000002 FSSignal Bins=3SINAD=7.592801 dBFSPeak Power: -21.678749 dBFSSignal Power: -21.834550 dBFSNoise Power: -29.427351 dBFSAverage Noise PSD: -59.523984 dBFSNoise Margin: 37.845235 dBFSTHD+N: -9.836864 dB

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 HzDC Magnitude=0.000002 FSSignal Bins=3SINAD=7.592801 dBFSPeak Power: -21.678749 dBFSSignal Power: -21.834550 dBFSNoise Power: -29.427351 dBFSAverage Noise PSD: -59.523984 dBFSNoise Margin: 37.845235 dBFSTHD+N: -9.836864 dB
++++++++++++++ [12] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000698s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 400_MIC2_LOW_LEFT 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Using 4096 bins, Peak Bin= 102; Peak Magnitude=0.082425 FS; Frequency:  398.437500 +/- 1.953125 HzDC Magnitude=0.000002 FSSignal Bins=3SINAD=7.592801 dBFSPeak Power: -21.678749 dBFSSignal Power: -21.834550 dBFSNoise Power: -29.427351 dBFSAverage Noise PSD: -59.523984 dBFSNoise Margin: 37.845235 dBFSTHD+N: -9.836864 dB
++++++++++ [13] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 1: 
KEY ==> 400_MIC2_LOW 
END ==> OK 
}

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dB

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dB
++++++++++++++ [14] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000691s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 400_MIC2_LOW_RIGHT 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Using 4096 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.953125 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dB
++++++++++ [15] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 400_MIC2_LOW_LEFT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 398.437500
++++++++++++++ [16] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000212s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*400 Tone to Low_Power_MIC2_Frequency(L)_spec*] 
 
}

[2016-04-05 17:39:19.419]
JUDGE_SPEC =>  value is [398.437500], spec is [Item0=380 ; Item1=420 ; ], mode is [1]

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 398.437500
+++++++++++++++ [17] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000619s) +++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*400 Tone to Low_Power_MIC2_Frequency(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 398.437500
+++++++++++ [18] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:39:19.419]
===== END TEST 400 Tone to Low_Power_MIC2_Frequency(L) (TestResult : PASS ; Duration : 0.684196s) =====

[2016-04-05 17:39:19.419]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(400 Tone to Low_Power_MIC2_Frequency(L),,,398.437500,380,420,,)

[2016-04-05 17:39:19.419]
Item Name:400 Tone to Low_Power_MIC2_Frequency(L), [380,420]

[2016-04-05 17:39:19.419]
===================== START TEST 400 TONE TO LOW_POWER_MIC2_MAX_POWER(L) (Item59) =====================

[2016-04-05 17:39:19.419]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 400_MIC2_LOW_LEFT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 0.082425
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000349s) +++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*400 Tone to Low_Power_MIC2_Max_Power(L)_spec*] 
 
}

[2016-04-05 17:39:19.419]
JUDGE_SPEC =>  value is [0.082425], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 0.082425
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000876s) +++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*400 Tone to Low_Power_MIC2_Max_Power(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 0.082425
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:19.419]
===== END TEST 400 Tone to Low_Power_MIC2_Max_Power(L) (TestResult : PASS ; Duration : 0.006724s) =====

[2016-04-05 17:39:19.419]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(400 Tone to Low_Power_MIC2_Max_Power(L),,,0.082425,NA,NA,,)

[2016-04-05 17:39:19.419]
Item Name:400 Tone to Low_Power_MIC2_Max_Power(L), {NA}

[2016-04-05 17:39:19.419]
===================== START TEST 3K TONE TOPSPEAKER TO MIC3_FREQUENCY(L) (Item60) =====================

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --reset 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> MOBILE , command[audio --reset(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --reset,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> audio --reset 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006453s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --reset 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --reset
Resetting arc...
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:19.419]
PostRXToUI ===> 
{
Info ==> audio --reset
Resetting arc...
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Resetting arc...Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK

[2016-04-05 17:39:19.419]
READ_COMMAND => Catch string between audio --reset and [001D38CC:3020213A] :-) == Resetting arc...Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Resetting arc...Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.142458s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff botspeaker 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> MOBILE , command[audio --turnoff botspeaker(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff botspeaker,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> audio --turnoff botspeaker 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Resetting arc...Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005602s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff botspeaker 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:19.419]
PostRXToUI ===> 
{
Info ==> audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Turning-off power to botspeaker...OK

[2016-04-05 17:39:19.419]
READ_COMMAND => Catch string between audio --turnoff botspeaker and [001D38CC:3020213A] :-) == Turning-off power to botspeaker...OK

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Turning-off power to botspeaker...OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021759s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff arc 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> MOBILE , command[audio --turnoff arc(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff arc,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> audio --turnoff arc 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Turning-off power to botspeaker...OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005441s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff arc 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff arc
Turning-off power to arc...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:19.419]
PostRXToUI ===> 
{
Info ==> audio --turnoff arc
Turning-off power to arc...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:19.419]
CATCH_VALUE => Catch OK : Turning-off power to arc...OK

[2016-04-05 17:39:19.419]
READ_COMMAND => Catch string between audio --turnoff arc and [001D38CC:3020213A] :-) == Turning-off power to arc...OK

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Turning-off power to arc...OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023635s) ++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block codec --in xsp[0] --out pdm 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:19.419]
Write to ---> MOBILE , command[routeaudio --route --block codec --in xsp[0] --out pdm(STRING)]

[2016-04-05 17:39:19.419]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block codec --in xsp[0] --out pdm,2,0;return value:0!

[2016-04-05 17:39:19.419]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block codec --in xsp[0] --out pdm 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:19.419 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:19.419]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:19.419]
RETURN_VALUE ===> Turning-off power to arc...OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005714s) +++++++++++++++++++++

[2016-04-05 17:39:19.419]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block codec --in xsp[0] --out pdm 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block codec --in xsp[0] --out pdm
Routing from codec.xsp[l] --> codec.pdm[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block codec --in xsp[0] --out pdm
Routing from codec.xsp[l] --> codec.pdm[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Routing from codec.xsp[l] --> codec.pdm[l]OK

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between routeaudio --route --block codec --in xsp[0] --out pdm and [001D38CC:3020213A] :-) == Routing from codec.xsp[l] --> codec.pdm[l]OK

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Routing from codec.xsp[l] --> codec.pdm[l]OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028800s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block codec --in ain4 --out xsp[1:0] 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:20.420]
Write to ---> MOBILE , command[routeaudio --route --block codec --in ain4 --out xsp[1:0](STRING)]

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block codec --in ain4 --out xsp[1:0],2,0;return value:0!

[2016-04-05 17:39:20.420]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain4 --out xsp[1:0] 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Routing from codec.xsp[l] --> codec.pdm[l]OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005779s) +++++++++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block codec --in ain4 --out xsp[1:0] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block codec --in ain4 --out xsp[1:0]
Routing from codec.ain4[l] --> codec.xsp[1:0]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain4 --out xsp[1:0]
Routing from codec.ain4[l] --> codec.xsp[1:0]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Routing from codec.ain4[l] --> codec.xsp[1:0]OK

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between routeaudio --route --block codec --in ain4 --out xsp[1:0] and [001D38CC:3020213A] :-) == Routing from codec.ain4[l] --> codec.xsp[1:0]OK

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Routing from codec.ain4[l] --> codec.xsp[1:0]OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.116989s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block topspeaker --in spk-pdm --out spk-out 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:20.420]
Write to ---> MOBILE , command[routeaudio --route --block topspeaker --in spk-pdm --out spk-out(STRING)]

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block topspeaker --in spk-pdm --out spk-out,2,0;return value:0!

[2016-04-05 17:39:20.420]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block topspeaker --in spk-pdm --out spk-out 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Routing from codec.ain4[l] --> codec.xsp[1:0]OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005736s) ++++++++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block topspeaker --in spk-pdm --out spk-out 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block topspeaker --in spk-pdm --out spk-out
Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block topspeaker --in spk-pdm --out spk-out
Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]OK

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between routeaudio --route --block topspeaker --in spk-pdm --out spk-out and [001D38CC:3020213A] :-) == Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]OK

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]OK
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026433s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam --set --block topspeaker --param enable-mon --value true 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:20.420]
Write to ---> MOBILE , command[audioparam --set --block topspeaker --param enable-mon --value true(STRING)]

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam --set --block topspeaker --param enable-mon --value true,2,0;return value:0!

[2016-04-05 17:39:20.420]
PostTXToUI ===> 
{
Info ==> audioparam --set --block topspeaker --param enable-mon --value true 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]OK
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005853s) ++++++++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam --set --block topspeaker --param enable-mon --value true 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam --set --block topspeaker --param enable-mon --value true
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> audioparam --set --block topspeaker --param enable-mon --value true
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between audioparam --set --block topspeaker --param enable-mon --value true and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> OK
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022476s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> setvol -b codec -n mixerA-channel1 -v -6 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:20.420]
Write to ---> MOBILE , command[setvol -b codec -n mixerA-channel1 -v -6(STRING)]

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:setvol -b codec -n mixerA-channel1 -v -6,2,0;return value:0!

[2016-04-05 17:39:20.420]
PostTXToUI ===> 
{
Info ==> setvol -b codec -n mixerA-channel1 -v -6 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> OK
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005887s) ++++++++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> setvol -b codec -n mixerA-channel1 -v -6 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:setvol -b codec -n mixerA-channel1 -v -6
Set 'mixerA-channel1' volume to -6 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> setvol -b codec -n mixerA-channel1 -v -6
Set 'mixerA-channel1' volume to -6 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Set 'mixerA-channel1' volume to -6 dBOK

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between setvol -b codec -n mixerA-channel1 -v -6 and [001D38CC:3020213A] :-) == Set 'mixerA-channel1' volume to -6 dBOK

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Set 'mixerA-channel1' volume to -6 dBOK
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023056s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -v 2 0x40 0x17 0x0F 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:20.420]
Write to ---> MOBILE , command[i2c -v 2 0x40 0x17 0x0F(STRING)]

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -v 2 0x40 0x17 0x0F,2,0;return value:0!

[2016-04-05 17:39:20.420]
PostTXToUI ===> 
{
Info ==> i2c -v 2 0x40 0x17 0x0F 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Set 'mixerA-channel1' volume to -6 dBOK
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005976s) ++++++++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -v 2 0x40 0x17 0x0F 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -v 2 0x40 0x17 0x0F
Set  bytes:	0x0F 	Writing 1 bytes
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> i2c -v 2 0x40 0x17 0x0F
Set  bytes:	0x0F 	Writing 1 bytes
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Set  bytes:	0x0F 	Writing 1 bytes

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between i2c -v 2 0x40 0x17 0x0F and [001D38CC:3020213A] :-) == Set  bytes:	0x0F 	Writing 1 bytes

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Set  bytes:	0x0F 	Writing 1 bytes
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022311s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:20.420]
Write to ---> MOBILE , command[processaudio --freebufs all(STRING)]

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all,2,0;return value:0!

[2016-04-05 17:39:20.420]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Set  bytes:	0x0F 	Writing 1 bytes
++++++++++++++++++++ [19] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005760s) ++++++++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Delete all buffers in the system...OK

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between processaudio --freebufs all and [001D38CC:3020213A] :-) == Delete all buffers in the system...OK

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++ [20] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023396s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 2 -l 400 --freq 3000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:20.420]
Write to ---> MOBILE , command[loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 2 -l 400 --freq 3000(STRING)]

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 2 -l 400 --freq 3000,2,0;return value:0!

[2016-04-05 17:39:20.420]
PostTXToUI ===> 
{
Info ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 2 -l 400 --freq 3000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++++++++ [21] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007195s) ++++++++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 2 -l 400 --freq 3000 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 2 -l 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 24-bit, 2 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 2 -l 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 24-bit, 2 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Configuring 'socmca' to play/record 48Khz, 24-bit, 2 channels of padded audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 2 -l 400 --freq 3000 and [001D38CC:3020213A] :-) == Configuring 'socmca' to play/record 48Khz, 24-bit, 2 channels of padded audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 24-bit, 2 channels of padded audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK
++++++++++++++ [22] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.443436s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i looprx0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:20.420]
Write to ---> MOBILE , command[processaudio -p fft -i looprx0(STRING)]

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i looprx0,2,0;return value:0!

[2016-04-05 17:39:20.420]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 24-bit, 2 channels of padded audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK
++++++++++++++++++++ [23] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005839s) ++++++++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i looprx0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:20.420]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i looprx0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000025 FS
Signal Bins=3
SINAD=13.255715 dBFS
Peak Power: -39.343390 dBFS
Signal Power: -39.495221 dBFS
Noise Power: -52.750937 dBFS
Average Noise PSD: -88.080391 dBFS
Noise Margin: 48.737001 dBFS
THD+N: -21.616322 dB
Channel 1:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000025 FS
Signal Bins=3
SINAD=13.255715 dBFS
Peak Power: -39.343390 dBFS
Signal Power: -39.495221 dBFS
Noise Power: -52.750937 dBFS
Average Noise PSD: -88.080391 dBFS
Noise Margin: 48.737001 dBFS
THD+N: -21.616322 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:20.420]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000025 FS
Signal Bins=3
SINAD=13.255715 dBFS
Peak Power: -39.343390 dBFS
Signal Power: -39.495221 dBFS
Noise Power: -52.750937 dBFS
Average Noise PSD: -88.080391 dBFS
Noise Margin: 48.737001 dBFS
THD+N: -21.616322 dB
Channel 1:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000025 FS
Signal Bins=3
SINAD=13.255715 dBFS
Peak Power: -39.343390 dBFS
Signal Power: -39.495221 dBFS
Noise Power: -52.750937 dBFS
Average Noise PSD: -88.080391 dBFS
Noise Margin: 48.737001 dBFS
THD+N: -21.616322 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:20.420 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:20.420]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dBChannel 1:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dBOK

[2016-04-05 17:39:20.420]
READ_COMMAND => Catch string between processaudio -p fft -i looprx0 and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dBChannel 1:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dBOK

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dBChannel 1:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dBOK
++++++++++++++ [24] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.113538s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_TO_MIC3 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dBChannel 1:Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dBOK
++++++++++ [25] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 0: 
KEY ==> 3K_TO_MIC3 
END ==> Channel 1: 
}

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dB

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dB
++++++++++++++ [26] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000661s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_TO_MIC3_LEFT 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dB
++++++++++ [27] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 1: 
KEY ==> 3K_TO_MIC3 
END ==> OK 
}

[2016-04-05 17:39:20.420]
CATCH_VALUE => Catch OK : Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dB

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dB
++++++++++++++ [28] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000670s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_TO_MIC3_RIGHT 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.010785 FS; Frequency: 3000.000000 +/- 1.464843 HzDC Magnitude=0.000025 FSSignal Bins=3SINAD=13.255715 dBFSPeak Power: -39.343390 dBFSSignal Power: -39.495221 dBFSNoise Power: -52.750937 dBFSAverage Noise PSD: -88.080391 dBFSNoise Margin: 48.737001 dBFSTHD+N: -21.616322 dB
++++++++++ [29] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_TO_MIC3_LEFT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 3000.000000
++++++++++++++ [30] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000206s) ++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone TopSpeaker to MIC3_Frequency(L)_spec*] 
 
}

[2016-04-05 17:39:20.420]
JUDGE_SPEC =>  value is [3000.000000], spec is [Item0=2996 ; Item1=3004 ; ], mode is [1]

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 3000.000000
+++++++++++++++ [31] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000619s) +++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone TopSpeaker to MIC3_Frequency(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 3000.000000
+++++++++++ [32] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++++++

[2016-04-05 17:39:20.420]
===== END TEST 3K Tone TopSpeaker to MIC3_Frequency(L) (TestResult : PASS ; Duration : 1.126350s) =====

[2016-04-05 17:39:20.420]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone TopSpeaker to MIC3_Frequency(L),,,3000.000000,2996,3004,,)

[2016-04-05 17:39:20.420]
Item Name:3K Tone TopSpeaker to MIC3_Frequency(L), [2996,3004]

[2016-04-05 17:39:20.420]
===================== START TEST 3K TONE TOPSPEAKER TO MIC3_MAX_POWER(L) (Item61) =====================

[2016-04-05 17:39:20.420]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_TO_MIC3_LEFT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 0.010785
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000259s) +++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone TopSpeaker to MIC3_Max_Power(L)_spec*] 
 
}

[2016-04-05 17:39:20.420]
JUDGE_SPEC =>  value is [0.010785], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 0.010785
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000774s) +++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone TopSpeaker to MIC3_Max_Power(L)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 0.010785
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:20.420]
===== END TEST 3K Tone TopSpeaker to MIC3_Max_Power(L) (TestResult : PASS ; Duration : 0.005908s) =====

[2016-04-05 17:39:20.420]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone TopSpeaker to MIC3_Max_Power(L),,,0.010785,NA,NA,,)

[2016-04-05 17:39:20.420]
Item Name:3K Tone TopSpeaker to MIC3_Max_Power(L), {NA}

[2016-04-05 17:39:20.420]
===================== START TEST 3K TONE TOPSPEAKER TO MIC3_FREQUENCY(R) (Item62) =====================

[2016-04-05 17:39:20.420]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_TO_MIC3_RIGHT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 3000.000000
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000303s) +++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone TopSpeaker to MIC3_Frequency(R)_spec*] 
 
}

[2016-04-05 17:39:20.420]
JUDGE_SPEC =>  value is [3000.000000], spec is [Item0=2996 ; Item1=3004 ; ], mode is [1]

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 3000.000000
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000852s) +++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone TopSpeaker to MIC3_Frequency(R)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 3000.000000
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:39:20.420]
===== END TEST 3K Tone TopSpeaker to MIC3_Frequency(R) (TestResult : PASS ; Duration : 0.006442s) =====

[2016-04-05 17:39:20.420]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone TopSpeaker to MIC3_Frequency(R),,,3000.000000,2996,3004,,)

[2016-04-05 17:39:20.420]
Item Name:3K Tone TopSpeaker to MIC3_Frequency(R), [2996,3004]

[2016-04-05 17:39:20.420]
===================== START TEST 3K TONE TOPSPEAKER TO MIC3_MAX_POWER(R) (Item63) =====================

[2016-04-05 17:39:20.420]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_TO_MIC3_RIGHT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 0.010785
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000262s) +++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone TopSpeaker to MIC3_Max_Power(R)_spec*] 
 
}

[2016-04-05 17:39:20.420]
JUDGE_SPEC =>  value is [0.010785], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 0.010785
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000851s) +++++++++++++++

[2016-04-05 17:39:20.420]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone TopSpeaker to MIC3_Max_Power(R)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:20.420]
RETURN_VALUE ===> 0.010785
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000025s) +++++++++++

[2016-04-05 17:39:20.420]
===== END TEST 3K Tone TopSpeaker to MIC3_Max_Power(R) (TestResult : PASS ; Duration : 0.005855s) =====

[2016-04-05 17:39:20.420]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone TopSpeaker to MIC3_Max_Power(R),,,0.010785,NA,NA,,)

[2016-04-05 17:39:20.420]
Item Name:3K Tone TopSpeaker to MIC3_Max_Power(R), {NA}

[2016-04-05 17:39:21.421]
====================== START TEST 3K TONE TOPSPK TO LOW_POWER_MIC3_FR(R) (Item64) ======================

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --reset 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audio --reset(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --reset,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audio --reset 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006387s) +++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --reset 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audio --reset and [001D38CC:3020213A] :-) == Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.157297s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff botspeaker 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audio --turnoff botspeaker(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff botspeaker,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audio --turnoff botspeaker 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005719s) +++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff botspeaker 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : Turning-off power to botspeaker...OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audio --turnoff botspeaker and [001D38CC:3020213A] :-) == Turning-off power to botspeaker...OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Turning-off power to botspeaker...OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022592s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff arc 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audio --turnoff arc(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff arc,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audio --turnoff arc 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Turning-off power to botspeaker...OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005396s) +++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff arc 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff arc
Turning-off power to arc...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audio --turnoff arc
Turning-off power to arc...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : Turning-off power to arc...OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audio --turnoff arc and [001D38CC:3020213A] :-) == Turning-off power to arc...OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Turning-off power to arc...OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021738s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam -b socmca -s -n clocking-mode -p ap-mca2 -v slave 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioparam -b socmca -s -n clocking-mode -p ap-mca2 -v slave(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam -b socmca -s -n clocking-mode -p ap-mca2 -v slave,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioparam -b socmca -s -n clocking-mode -p ap-mca2 -v slave 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Turning-off power to arc...OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006090s) +++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam -b socmca -s -n clocking-mode -p ap-mca2 -v slave 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam -b socmca -s -n clocking-mode -p ap-mca2 -v slave
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioparam -b socmca -s -n clocking-mode -p ap-mca2 -v slave
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioparam -b socmca -s -n clocking-mode -p ap-mca2 -v slave and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020676s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam -b audmux -s -n clocking-mode -p ext-mca2 -v slave 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioparam -b audmux -s -n clocking-mode -p ext-mca2 -v slave(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam -b audmux -s -n clocking-mode -p ext-mca2 -v slave,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioparam -b audmux -s -n clocking-mode -p ext-mca2 -v slave 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005706s) +++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam -b audmux -s -n clocking-mode -p ext-mca2 -v slave 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam -b audmux -s -n clocking-mode -p ext-mca2 -v slave
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioparam -b audmux -s -n clocking-mode -p ext-mca2 -v slave
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioparam -b audmux -s -n clocking-mode -p ext-mca2 -v slave and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021143s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block topspeaker --in spk-i2s --out spk-out 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[routeaudio --route --block topspeaker --in spk-i2s --out spk-out(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block topspeaker --in spk-i2s --out spk-out,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block topspeaker --in spk-i2s --out spk-out 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005648s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block topspeaker --in spk-i2s --out spk-out 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block topspeaker --in spk-i2s --out spk-out
Routing from topspeaker.spk-i2s[1:0] --> topspeaker.spk-out[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block topspeaker --in spk-i2s --out spk-out
Routing from topspeaker.spk-i2s[1:0] --> topspeaker.spk-out[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : Routing from topspeaker.spk-i2s[1:0] --> topspeaker.spk-out[l]OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between routeaudio --route --block topspeaker --in spk-i2s --out spk-out and [001D38CC:3020213A] :-) == Routing from topspeaker.spk-i2s[1:0] --> topspeaker.spk-out[l]OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Routing from topspeaker.spk-i2s[1:0] --> topspeaker.spk-out[l]OK
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026680s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> setvol -b topspeaker -n spk-vol -v -12 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[setvol -b topspeaker -n spk-vol -v -12(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:setvol -b topspeaker -n spk-vol -v -12,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> setvol -b topspeaker -n spk-vol -v -12 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Routing from topspeaker.spk-i2s[1:0] --> topspeaker.spk-out[l]OK
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005487s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> setvol -b topspeaker -n spk-vol -v -12 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:setvol -b topspeaker -n spk-vol -v -12
Set 'spk-vol' volume to -12 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> setvol -b topspeaker -n spk-vol -v -12
Set 'spk-vol' volume to -12 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : Set 'spk-vol' volume to -12 dBOK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between setvol -b topspeaker -n spk-vol -v -12 and [001D38CC:3020213A] :-) == Set 'spk-vol' volume to -12 dBOK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Set 'spk-vol' volume to -12 dBOK
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021482s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Set 'spk-vol' volume to -12 dBOK
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005701s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioparam -s -n clocking-mode -b socmca -p ap-mca4 -v slave and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> OK
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020660s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> OK
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005651s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioparam -s -n clocking-mode -b audmux -p ext-mca4 -v slave and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> OK
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020889s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio -b codec -i lp_ain4 -o xsp[1] -r 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[routeaudio -b codec -i lp_ain4 -o xsp[1] -r(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio -b codec -i lp_ain4 -o xsp[1] -r,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> routeaudio -b codec -i lp_ain4 -o xsp[1] -r 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> OK
++++++++++++++++++++ [19] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005675s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio -b codec -i lp_ain4 -o xsp[1] -r 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio -b codec -i lp_ain4 -o xsp[1] -r
Routing from codec.lp_ain4[l] --> codec.xsp[r]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> routeaudio -b codec -i lp_ain4 -o xsp[1] -r
Routing from codec.lp_ain4[l] --> codec.xsp[r]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : Routing from codec.lp_ain4[l] --> codec.xsp[r]OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between routeaudio -b codec -i lp_ain4 -o xsp[1] -r and [001D38CC:3020213A] :-) == Routing from codec.lp_ain4[l] --> codec.xsp[r]OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Routing from codec.lp_ain4[l] --> codec.xsp[r]OK
++++++++++++++ [20] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.119374s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -b codec -w -a 0x010000 -d 0x0f 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -b codec -w -a 0x010000 -d 0x0f(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -b codec -w -a 0x010000 -d 0x0f,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x010000 -d 0x0f 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Routing from codec.lp_ain4[l] --> codec.xsp[r]OK
++++++++++++++++++++ [21] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005769s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -b codec -w -a 0x010000 -d 0x0f 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -b codec -w -a 0x010000 -d 0x0f

codec:write
	0x10000 = 0x0F
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x010000 -d 0x0f

codec:write
	0x10000 = 0x0F
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x10000 = 0x0FOK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -b codec -w -a 0x010000 -d 0x0f and [001D38CC:3020213A] :-) == codec:write	0x10000 = 0x0FOK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x10000 = 0x0FOK
++++++++++++++ [22] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022804s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -w -b codec -a 0x020001 -d 0x30 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -w -b codec -a 0x020001 -d 0x30(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -w -b codec -a 0x020001 -d 0x30,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -w -b codec -a 0x020001 -d 0x30 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x10000 = 0x0FOK
++++++++++++++++++++ [23] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005696s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -w -b codec -a 0x020001 -d 0x30 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -w -b codec -a 0x020001 -d 0x30

codec:write
	0x20001 = 0x30
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -w -b codec -a 0x020001 -d 0x30

codec:write
	0x20001 = 0x30
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x20001 = 0x30OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -w -b codec -a 0x020001 -d 0x30 and [001D38CC:3020213A] :-) == codec:write	0x20001 = 0x30OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x20001 = 0x30OK
++++++++++++++ [24] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022914s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -w -b codec -a 0x020002 -d 0x7d 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -w -b codec -a 0x020002 -d 0x7d(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -w -b codec -a 0x020002 -d 0x7d,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -w -b codec -a 0x020002 -d 0x7d 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x20001 = 0x30OK
++++++++++++++++++++ [25] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005711s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -w -b codec -a 0x020002 -d 0x7d 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -w -b codec -a 0x020002 -d 0x7d

codec:write
	0x20002 = 0x7D
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -w -b codec -a 0x020002 -d 0x7d

codec:write
	0x20002 = 0x7D
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x20002 = 0x7DOK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -w -b codec -a 0x020002 -d 0x7d and [001D38CC:3020213A] :-) == codec:write	0x20002 = 0x7DOK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x20002 = 0x7DOK
++++++++++++++ [26] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022078s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -w -b codec -a 0x020003 -d 0x2f 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -w -b codec -a 0x020003 -d 0x2f(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -w -b codec -a 0x020003 -d 0x2f,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -w -b codec -a 0x020003 -d 0x2f 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x20002 = 0x7DOK
++++++++++++++++++++ [27] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005888s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -w -b codec -a 0x020003 -d 0x2f 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -w -b codec -a 0x020003 -d 0x2f

codec:write
	0x20003 = 0x2F
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -w -b codec -a 0x020003 -d 0x2f

codec:write
	0x20003 = 0x2F
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x20003 = 0x2FOK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -w -b codec -a 0x020003 -d 0x2f and [001D38CC:3020213A] :-) == codec:write	0x20003 = 0x2FOK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x20003 = 0x2FOK
++++++++++++++ [28] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020644s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -w -b codec -a 0x020004 -d 0x5f 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -w -b codec -a 0x020004 -d 0x5f(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -w -b codec -a 0x020004 -d 0x5f,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -w -b codec -a 0x020004 -d 0x5f 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x20003 = 0x2FOK
++++++++++++++++++++ [29] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005650s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -w -b codec -a 0x020004 -d 0x5f 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -w -b codec -a 0x020004 -d 0x5f

codec:write
	0x20004 = 0x5F
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -w -b codec -a 0x020004 -d 0x5f

codec:write
	0x20004 = 0x5F
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x20004 = 0x5FOK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -w -b codec -a 0x020004 -d 0x5f and [001D38CC:3020213A] :-) == codec:write	0x20004 = 0x5FOK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x20004 = 0x5FOK
++++++++++++++ [30] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020794s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -b codec -w -a 0x330000 -d 0x09 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -b codec -w -a 0x330000 -d 0x09(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -b codec -w -a 0x330000 -d 0x09,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x330000 -d 0x09 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x20004 = 0x5FOK
++++++++++++++++++++ [31] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005443s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -b codec -w -a 0x330000 -d 0x09 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -b codec -w -a 0x330000 -d 0x09

codec:write
	0x330000 = 0x09
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x330000 -d 0x09

codec:write
	0x330000 = 0x09
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x330000 = 0x09OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -b codec -w -a 0x330000 -d 0x09 and [001D38CC:3020213A] :-) == codec:write	0x330000 = 0x09OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x330000 = 0x09OK
++++++++++++++ [32] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020850s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -b codec -w -a 0x330008 -d 0x09 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -b codec -w -a 0x330008 -d 0x09(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -b codec -w -a 0x330008 -d 0x09,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x330008 -d 0x09 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x330000 = 0x09OK
++++++++++++++++++++ [33] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005595s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -b codec -w -a 0x330008 -d 0x09 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -b codec -w -a 0x330008 -d 0x09

codec:write
	0x330008 = 0x09
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x330008 -d 0x09

codec:write
	0x330008 = 0x09
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x330008 = 0x09OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -b codec -w -a 0x330008 -d 0x09 and [001D38CC:3020213A] :-) == codec:write	0x330008 = 0x09OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x330008 = 0x09OK
++++++++++++++ [34] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021926s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -b codec -w -a 0x000008 -d 0x0f 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -b codec -w -a 0x000008 -d 0x0f(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -b codec -w -a 0x000008 -d 0x0f,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x000008 -d 0x0f 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x330008 = 0x09OK
++++++++++++++++++++ [35] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006067s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -b codec -w -a 0x000008 -d 0x0f 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -b codec -w -a 0x000008 -d 0x0f

codec:write
	0x08 = 0x0F
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x000008 -d 0x0f

codec:write
	0x08 = 0x0F
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x08 = 0x0FOK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -b codec -w -a 0x000008 -d 0x0f and [001D38CC:3020213A] :-) == codec:write	0x08 = 0x0FOK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x08 = 0x0FOK
++++++++++++++ [36] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022758s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -b codec -w -a 0x150000 -d 0x04 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -b codec -w -a 0x150000 -d 0x04(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -b codec -w -a 0x150000 -d 0x04,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x150000 -d 0x04 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x08 = 0x0FOK
++++++++++++++++++++ [37] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005687s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -b codec -w -a 0x150000 -d 0x04 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -b codec -w -a 0x150000 -d 0x04

codec:write
	0x150000 = 0x04
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x150000 -d 0x04

codec:write
	0x150000 = 0x04
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x150000 = 0x04OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -b codec -w -a 0x150000 -d 0x04 and [001D38CC:3020213A] :-) == codec:write	0x150000 = 0x04OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x150000 = 0x04OK
++++++++++++++ [38] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023298s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioreg -b codec -w -a 0x010000 -d 0x0c 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[audioreg -b codec -w -a 0x010000 -d 0x0c(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioreg -b codec -w -a 0x010000 -d 0x0c,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x010000 -d 0x0c 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x150000 = 0x04OK
++++++++++++++++++++ [39] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005710s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioreg -b codec -w -a 0x010000 -d 0x0c 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioreg -b codec -w -a 0x010000 -d 0x0c

codec:write
	0x10000 = 0x0C
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> audioreg -b codec -w -a 0x010000 -d 0x0c

codec:write
	0x10000 = 0x0C
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : codec:write	0x10000 = 0x0COK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between audioreg -b codec -w -a 0x010000 -d 0x0c and [001D38CC:3020213A] :-) == codec:write	0x10000 = 0x0COK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x10000 = 0x0COK
++++++++++++++ [40] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021238s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[processaudio --freebufs all(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> codec:write	0x10000 = 0x0COK
++++++++++++++++++++ [41] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005416s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:21.421]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:21.421]
CATCH_VALUE => Catch OK : Delete all buffers in the system...OK

[2016-04-05 17:39:21.421]
READ_COMMAND => Catch string between processaudio --freebufs all and [001D38CC:3020213A] :-) == Delete all buffers in the system...OK

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++ [42] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022637s) ++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> loopaudio -b socmca -p ap-mca4 -x ap-mca2 --rate 48000 --channels 2 -l 400 --freq 3000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:21.421]
Write to ---> MOBILE , command[loopaudio -b socmca -p ap-mca4 -x ap-mca2 --rate 48000 --channels 2 -l 400 --freq 3000(STRING)]

[2016-04-05 17:39:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:loopaudio -b socmca -p ap-mca4 -x ap-mca2 --rate 48000 --channels 2 -l 400 --freq 3000,2,0;return value:0!

[2016-04-05 17:39:21.421]
PostTXToUI ===> 
{
Info ==> loopaudio -b socmca -p ap-mca4 -x ap-mca2 --rate 48000 --channels 2 -l 400 --freq 3000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:21.421]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++++++++ [43] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006135s) ++++++++++++++++++++

[2016-04-05 17:39:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> loopaudio -b socmca -p ap-mca4 -x ap-mca2 --rate 48000 --channels 2 -l 400 --freq 3000 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:loopaudio -b socmca -p ap-mca4 -x ap-mca2 --rate 48000 --channels 2 -l 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> loopaudio -b socmca -p ap-mca4 -x ap-mca2 --rate 48000 --channels 2 -l 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between loopaudio -b socmca -p ap-mca4 -x ap-mca2 --rate 48000 --channels 2 -l 400 --freq 3000 and [001D38CC:3020213A] :-) == Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK
++++++++++++++ [44] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.443823s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i looprx0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[processaudio -p fft -i looprx0(STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i looprx0,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 16-bit, 2 channels of packed audio data for 400mS...Requesting new tx buffer...Generating tone data into 'looptx0'...Requesting new rx buffer...Using rx buffer 'looprx0'...Playing/Receiving audio...Done!OK
++++++++++++++++++++ [45] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005457s) ++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i looprx0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i looprx0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.464843 Hz
[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0
[0mDC Magnitude=0.000000 FS
Signal Bins=3
SINAD=-inf dBFS
Peak Power: -inf dBFS
Signal Power: -inf dBFS
Noise Power: -inf dBFS
Average Noise PSD: -inf dBFS
Noise Margin: NaN dBFS
THD+N: 0.000000 dB
Channel 1:
Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 Hz
DC Magnitude=0.000000 FS
Signal Bins=3
SINAD=10.443135 dBFS
Peak Power: -22.641222 dBFS
Signal Power: -22.391489 dBFS
Noise Power: -32.834624 dBFS
Average Noise PSD: -68.164078 dBFS
Noise Margin: 45.522856 dBFS
THD+N: -26.607860 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.464843 Hz
[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0
[0mDC Magnitude=0.000000 FS
Signal Bins=3
SINAD=-inf dBFS
Peak Power: -inf dBFS
Signal Power: -inf dBFS
Noise Power: -inf dBFS
Average Noise PSD: -inf dBFS
Noise Margin: NaN dBFS
THD+N: 0.000000 dB
Channel 1:
Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 Hz
DC Magnitude=0.000000 FS
Signal Bins=3
SINAD=10.443135 dBFS
Peak Power: -22.641222 dBFS
Signal Power: -22.391489 dBFS
Noise Power: -32.834624 dBFS
Average Noise PSD: -68.164078 dBFS
Noise Margin: 45.522856 dBFS
THD+N: -26.607860 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.464843 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBChannel 1:Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 HzDC Magnitude=0.000000 FSSignal Bins=3SINAD=10.443135 dBFSPeak Power: -22.641222 dBFSSignal Power: -22.391489 dBFSNoise Power: -32.834624 dBFSAverage Noise PSD: -68.164078 dBFSNoise Margin: 45.522856 dBFSTHD+N: -26.607860 dBOK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between processaudio -p fft -i looprx0 and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.464843 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBChannel 1:Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 HzDC Magnitude=0.000000 FSSignal Bins=3SINAD=10.443135 dBFSPeak Power: -22.641222 dBFSSignal Power: -22.391489 dBFSNoise Power: -32.834624 dBFSAverage Noise PSD: -68.164078 dBFSNoise Margin: 45.522856 dBFSTHD+N: -26.607860 dBOK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.464843 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBChannel 1:Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 HzDC Magnitude=0.000000 FSSignal Bins=3SINAD=10.443135 dBFSPeak Power: -22.641222 dBFSSignal Power: -22.391489 dBFSNoise Power: -32.834624 dBFSAverage Noise PSD: -68.164078 dBFSNoise Margin: 45.522856 dBFSTHD+N: -26.607860 dBOK
++++++++++++++ [46] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.112171s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_MIC3_LOW 
}

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...Channel 0:Using 16384 bins, Peak Bin=   0; Peak Magnitude=0.000000 FS; Frequency:    0.000000 +/- 1.464843 Hz[0;35mWARNING: Noise Power can not be zero for SINAD calculation (divide by zero), setting SINAD to 0[0mDC Magnitude=0.000000 FSSignal Bins=3SINAD=-inf dBFSPeak Power: -inf dBFSSignal Power: -inf dBFSNoise Power: -inf dBFSAverage Noise PSD: -inf dBFSNoise Margin: NaN dBFSTHD+N: 0.000000 dBChannel 1:Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 HzDC Magnitude=0.000000 FSSignal Bins=3SINAD=10.443135 dBFSPeak Power: -22.641222 dBFSSignal Power: -22.391489 dBFSNoise Power: -32.834624 dBFSAverage Noise PSD: -68.164078 dBFSNoise Margin: 45.522856 dBFSTHD+N: -26.607860 dBOK
++++++++++ [47] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> Channel 1: 
KEY ==> 3K_MIC3_LOW 
END ==> OK 
}

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 HzDC Magnitude=0.000000 FSSignal Bins=3SINAD=10.443135 dBFSPeak Power: -22.641222 dBFSSignal Power: -22.391489 dBFSNoise Power: -32.834624 dBFSAverage Noise PSD: -68.164078 dBFSNoise Margin: 45.522856 dBFSTHD+N: -26.607860 dB

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 HzDC Magnitude=0.000000 FSSignal Bins=3SINAD=10.443135 dBFSPeak Power: -22.641222 dBFSSignal Power: -22.391489 dBFSNoise Power: -32.834624 dBFSAverage Noise PSD: -68.164078 dBFSNoise Margin: 45.522856 dBFSTHD+N: -26.607860 dB
++++++++++++++ [48] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000705s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_MIC3_LOW_RIGHT 
}

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Using 16384 bins, Peak Bin=1020; Peak Magnitude=0.073780 FS; Frequency: 2988.281250 +/- 1.464843 HzDC Magnitude=0.000000 FSSignal Bins=3SINAD=10.443135 dBFSPeak Power: -22.641222 dBFSSignal Power: -22.391489 dBFSNoise Power: -32.834624 dBFSAverage Noise PSD: -68.164078 dBFSNoise Margin: 45.522856 dBFSTHD+N: -26.607860 dB
++++++++++ [49] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_MIC3_LOW_RIGHT 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> 2988.281250
++++++++++++++ [50] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000214s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone TopSpk to Low_Power_MIC3_FR(R)_spec*] 
 
}

[2016-04-05 17:39:22.422]
JUDGE_SPEC =>  value is [2988.281250], spec is [Item0=2850 ; Item1=3150 ; ], mode is [1]

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> 2988.281250
+++++++++++++++ [51] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000673s) +++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone TopSpk to Low_Power_MIC3_FR(R)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> 2988.281250
+++++++++++ [52] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000025s) +++++++++++

[2016-04-05 17:39:22.422]
====== END TEST 3K Tone TopSpk to Low_Power_MIC3_FR(R) (TestResult : PASS ; Duration : 1.454826s) ======

[2016-04-05 17:39:22.422]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone TopSpk to Low_Power_MIC3_FR(R),,,2988.281250,2850,3150,,)

[2016-04-05 17:39:22.422]
Item Name:3K Tone TopSpk to Low_Power_MIC3_FR(R), [2850,3150]

[2016-04-05 17:39:22.422]
==================== START TEST 3K TONE TOPSPK TO LOW_POWER_MIC3_MAX_PR(R) (Item65) ====================

[2016-04-05 17:39:22.422]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K_MIC3_LOW_RIGHT 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> 0.073780
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000347s) +++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone TopSpk to Low_Power_MIC3_Max_PR(R)_spec*] 
 
}

[2016-04-05 17:39:22.422]
JUDGE_SPEC =>  value is [0.073780], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> 0.073780
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000876s) +++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*3K Tone TopSpk to Low_Power_MIC3_Max_PR(R)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> 0.073780
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:22.422]
==== END TEST 3K Tone TopSpk to Low_Power_MIC3_Max_PR(R) (TestResult : PASS ; Duration : 0.006673s) ====

[2016-04-05 17:39:22.422]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone TopSpk to Low_Power_MIC3_Max_PR(R),,,0.073780,NA,NA,,)

[2016-04-05 17:39:22.422]
Item Name:3K Tone TopSpk to Low_Power_MIC3_Max_PR(R), {NA}

[2016-04-05 17:39:22.422]
========================= START TEST 3K TONE NO HAC TO MIC4_FREQUENCY (Item66) =========================

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --reset 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[audio --reset(STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --reset,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> audio --reset 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006903s) +++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --reset 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between audio --reset and [001D38CC:3020213A] :-) == Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.135093s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff botspeaker 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[audio --turnoff botspeaker(STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff botspeaker,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> audio --turnoff botspeaker 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005821s) +++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff botspeaker 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Turning-off power to botspeaker...
OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between audio --turnoff botspeaker and [001D38CC:3020213A] :-) == Turning-off power to botspeaker...
OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Turning-off power to botspeaker...
OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021208s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --turnoff arc 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[audio --turnoff arc(STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --turnoff arc,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> audio --turnoff arc 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Turning-off power to botspeaker...
OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005764s) +++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --turnoff arc 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --turnoff arc
Turning-off power to arc...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> audio --turnoff arc
Turning-off power to arc...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Turning-off power to arc...
OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between audio --turnoff arc and [001D38CC:3020213A] :-) == Turning-off power to arc...
OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Turning-off power to arc...
OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024986s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block codec --in xsp[0] --out pdm  
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[routeaudio --route --block codec --in xsp[0] --out pdm (STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block codec --in xsp[0] --out pdm ,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block codec --in xsp[0] --out pdm  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Turning-off power to arc...
OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006198s) +++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block codec --in xsp[0] --out pdm  
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block codec --in xsp[0] --out pdm 
Routing from codec.xsp[l] --> codec.pdm[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block codec --in xsp[0] --out pdm 
Routing from codec.xsp[l] --> codec.pdm[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Routing from codec.xsp[l] --> codec.pdm[l]
OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between routeaudio --route --block codec --in xsp[0] --out pdm  and [001D38CC:3020213A] :-) == Routing from codec.xsp[l] --> codec.pdm[l]
OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Routing from codec.xsp[l] --> codec.pdm[l]
OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.029030s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block codec --in ain2 --out xsp[1:0] 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[routeaudio --route --block codec --in ain2 --out xsp[1:0](STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block codec --in ain2 --out xsp[1:0],2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain2 --out xsp[1:0] 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Routing from codec.xsp[l] --> codec.pdm[l]
OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005986s) +++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block codec --in ain2 --out xsp[1:0] 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block codec --in ain2 --out xsp[1:0]
Routing from codec.ain2[l] --> codec.xsp[1:0]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block codec --in ain2 --out xsp[1:0]
Routing from codec.ain2[l] --> codec.xsp[1:0]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Routing from codec.ain2[l] --> codec.xsp[1:0]
OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between routeaudio --route --block codec --in ain2 --out xsp[1:0] and [001D38CC:3020213A] :-) == Routing from codec.ain2[l] --> codec.xsp[1:0]
OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Routing from codec.ain2[l] --> codec.xsp[1:0]
OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.119304s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio --route --block topspeaker --in spk-pdm --out spk-out  
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[routeaudio --route --block topspeaker --in spk-pdm --out spk-out (STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio --route --block topspeaker --in spk-pdm --out spk-out ,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> routeaudio --route --block topspeaker --in spk-pdm --out spk-out  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Routing from codec.ain2[l] --> codec.xsp[1:0]
OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005799s) ++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio --route --block topspeaker --in spk-pdm --out spk-out  
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio --route --block topspeaker --in spk-pdm --out spk-out 
Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> routeaudio --route --block topspeaker --in spk-pdm --out spk-out 
Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]
OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between routeaudio --route --block topspeaker --in spk-pdm --out spk-out  and [001D38CC:3020213A] :-) == Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]
OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]
OK
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028380s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audioparam --set --block topspeaker --param enable-mon --value true 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[audioparam --set --block topspeaker --param enable-mon --value true(STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audioparam --set --block topspeaker --param enable-mon --value true,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> audioparam --set --block topspeaker --param enable-mon --value true 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Routing from topspeaker.spk-pdm[l] --> topspeaker.spk-out[l]
OK
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006220s) ++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audioparam --set --block topspeaker --param enable-mon --value true 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audioparam --set --block topspeaker --param enable-mon --value true
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> audioparam --set --block topspeaker --param enable-mon --value true
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between audioparam --set --block topspeaker --param enable-mon --value true and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> OK
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021031s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> setvol -b codec -n mixerA-channel1 -v -6 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[setvol -b codec -n mixerA-channel1 -v -6(STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:setvol -b codec -n mixerA-channel1 -v -6,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> setvol -b codec -n mixerA-channel1 -v -6 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> OK
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005773s) ++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> setvol -b codec -n mixerA-channel1 -v -6 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:setvol -b codec -n mixerA-channel1 -v -6
Set 'mixerA-channel1' volume to -6 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:22.422]
PostRXToUI ===> 
{
Info ==> setvol -b codec -n mixerA-channel1 -v -6
Set 'mixerA-channel1' volume to -6 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:22.422]
CATCH_VALUE => Catch OK : Set 'mixerA-channel1' volume to -6 dB
OK

[2016-04-05 17:39:22.422]
READ_COMMAND => Catch string between setvol -b codec -n mixerA-channel1 -v -6 and [001D38CC:3020213A] :-) == Set 'mixerA-channel1' volume to -6 dB
OK

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Set 'mixerA-channel1' volume to -6 dB
OK
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023494s) ++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -v 2 0x40 0x17 0x0F 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:22.422]
Write to ---> MOBILE , command[i2c -v 2 0x40 0x17 0x0F(STRING)]

[2016-04-05 17:39:22.422]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -v 2 0x40 0x17 0x0F,2,0;return value:0!

[2016-04-05 17:39:22.422]
PostTXToUI ===> 
{
Info ==> i2c -v 2 0x40 0x17 0x0F 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:22.422 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:22.422]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:22.422]
RETURN_VALUE ===> Set 'mixerA-channel1' volume to -6 dB
OK
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005923s) ++++++++++++++++++++

[2016-04-05 17:39:22.422]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -v 2 0x40 0x17 0x0F 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -v 2 0x40 0x17 0x0F
Set  bytes:	0x0F 	Writing 1 bytes
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:23.423]
PostRXToUI ===> 
{
Info ==> i2c -v 2 0x40 0x17 0x0F
Set  bytes:	0x0F 	Writing 1 bytes
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:23.423 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:23.423]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:23.423]
CATCH_VALUE => Catch OK : Set  bytes:	0x0F 	Writing 1 bytes

[2016-04-05 17:39:23.423]
READ_COMMAND => Catch string between i2c -v 2 0x40 0x17 0x0F and [001D38CC:3020213A] :-) == Set  bytes:	0x0F 	Writing 1 bytes

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Set  bytes:	0x0F 	Writing 1 bytes
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021162s) ++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all  
TARGET ==> MOBILE 
}

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:23.423]
Write to ---> MOBILE , command[processaudio --freebufs all (STRING)]

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all ,2,0;return value:0!

[2016-04-05 17:39:23.423]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:23.423 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:23.423]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Set  bytes:	0x0F 	Writing 1 bytes
++++++++++++++++++++ [19] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005373s) ++++++++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all  
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all 
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:23.423]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all 
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:23.423 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:23.423]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:23.423]
CATCH_VALUE => Catch OK : Delete all buffers in the system...
OK

[2016-04-05 17:39:23.423]
READ_COMMAND => Catch string between processaudio --freebufs all  and [001D38CC:3020213A] :-) == Delete all buffers in the system...
OK

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Delete all buffers in the system...
OK
++++++++++++++ [20] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020874s) ++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:23.423]
Write to ---> MOBILE , command[loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000(STRING)]

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000,2,0;return value:0!

[2016-04-05 17:39:23.423]
PostTXToUI ===> 
{
Info ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:23.423 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:23.423]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Delete all buffers in the system...
OK
++++++++++++++++++++ [21] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006049s) ++++++++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:23.423]
PostRXToUI ===> 
{
Info ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:23.423 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:23.423]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:23.423]
CATCH_VALUE => Catch OK : Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK

[2016-04-05 17:39:23.423]
READ_COMMAND => Catch string between loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000 and [001D38CC:3020213A] :-) == Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
++++++++++++++ [22] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.443639s) ++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i looprx0 -o "--minHz 2990 --maxHz 3010" 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:23.423]
Write to ---> MOBILE , command[processaudio -p fft -i looprx0 -o "--minHz 2990 --maxHz 3010"(STRING)]

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i looprx0 -o "--minHz 2990 --maxHz 3010",2,0;return value:0!

[2016-04-05 17:39:23.423]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0 -o "--minHz 2990 --maxHz 3010" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:23.423 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:23.423]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
++++++++++++++++++++ [23] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005693s) ++++++++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i looprx0 -o "--minHz 2990 --maxHz 3010" 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i looprx0 -o "--minHz 2990 --maxHz 3010"
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.000228 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000005 FS
Signal Bins=3
SINAD=11.937735 dBFS
Peak Power: -72.829352 dBFS
Signal Power: -72.905691 dBFS
Noise Power: -84.843427 dBFS
Average Noise PSD: -87.853727 dBFS
Noise Margin: 15.024374 dBFS
THD+N: -1.299911 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:23.423]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0 -o "--minHz 2990 --maxHz 3010"
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.000228 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000005 FS
Signal Bins=3
SINAD=11.937735 dBFS
Peak Power: -72.829352 dBFS
Signal Power: -72.905691 dBFS
Noise Power: -84.843427 dBFS
Average Noise PSD: -87.853727 dBFS
Noise Margin: 15.024374 dBFS
THD+N: -1.299911 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:23.423 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:23.423]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:23.423]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.000228 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000005 FS
Signal Bins=3
SINAD=11.937735 dBFS
Peak Power: -72.829352 dBFS
Signal Power: -72.905691 dBFS
Noise Power: -84.843427 dBFS
Average Noise PSD: -87.853727 dBFS
Noise Margin: 15.024374 dBFS
THD+N: -1.299911 dB
OK

[2016-04-05 17:39:23.423]
READ_COMMAND => Catch string between processaudio -p fft -i looprx0 -o "--minHz 2990 --maxHz 3010" and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.000228 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000005 FS
Signal Bins=3
SINAD=11.937735 dBFS
Peak Power: -72.829352 dBFS
Signal Power: -72.905691 dBFS
Noise Power: -84.843427 dBFS
Average Noise PSD: -87.853727 dBFS
Noise Margin: 15.024374 dBFS
THD+N: -1.299911 dB
OK

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.000228 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000005 FS
Signal Bins=3
SINAD=11.937735 dBFS
Peak Power: -72.829352 dBFS
Signal Power: -72.905691 dBFS
Noise Power: -84.843427 dBFS
Average Noise PSD: -87.853727 dBFS
Noise Margin: 15.024374 dBFS
THD+N: -1.299911 dB
OK
++++++++++++++ [24] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.071534s) ++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Close_HAC_Value 
}

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.000228 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000005 FS
Signal Bins=3
SINAD=11.937735 dBFS
Peak Power: -72.829352 dBFS
Signal Power: -72.905691 dBFS
Noise Power: -84.843427 dBFS
Average Noise PSD: -87.853727 dBFS
Noise Margin: 15.024374 dBFS
THD+N: -1.299911 dB
OK
++++++++++ [25] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Close_HAC_Value 
REGEX ==> Frequency:\s*(.*?)\s*\+ 
}

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> 3000.000000
++++++++++++++ [26] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000227s) ++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Close_HAC_Frequency_Value 
}

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> 3000.000000
++++++++++ [27] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone No HAC to MIC4_Frequency_spec*] 
 
}

[2016-04-05 17:39:23.423]
JUDGE_SPEC =>  value is [3000.000000], spec is [Item0=2990 ; Item1=3010 ; ], mode is [1]

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> 3000.000000
+++++++++++++++ [28] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000621s) +++++++++++++++

[2016-04-05 17:39:23.423]
========= END TEST 3K Tone No HAC to MIC4_Frequency (TestResult : PASS ; Duration : 1.070327s) =========

[2016-04-05 17:39:23.423]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone No HAC to MIC4_Frequency,,,3000.000000,2990,3010,,)

[2016-04-05 17:39:23.423]
Item Name:3K Tone No HAC to MIC4_Frequency, [2990,3010]

[2016-04-05 17:39:23.423]
========================= START TEST 3K TONE NO HAC TO MIC4_PEAK MAG (Item67) =========================

[2016-04-05 17:39:23.423]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Close_HAC_Value 
}

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.000228 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000005 FS
Signal Bins=3
SINAD=11.937735 dBFS
Peak Power: -72.829352 dBFS
Signal Power: -72.905691 dBFS
Noise Power: -84.843427 dBFS
Average Noise PSD: -87.853727 dBFS
Noise Margin: 15.024374 dBFS
THD+N: -1.299911 dB
OK
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) ++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Close_HAC_Value 
REGEX ==> Peak Magnitude=(.*?) FS 
}

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> 0.000228
+++++++++++++++ [2] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000308s) +++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Close_HAC_Magnitude_Value 
}

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> 0.000228
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone No HAC to MIC4_Peak Mag_spec*] 
 
}

[2016-04-05 17:39:23.423]
JUDGE_SPEC =>  value is [0.000228], spec is [Item0= ; Item1=0.005 ; ], mode is [1]

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> 0.000228
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000782s) +++++++++++++++

[2016-04-05 17:39:23.423]
========= END TEST 3K Tone No HAC to MIC4_Peak Mag (TestResult : PASS ; Duration : 0.008331s) =========

[2016-04-05 17:39:23.423]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone No HAC to MIC4_Peak Mag,,,0.000228,NA,0.005,,)

[2016-04-05 17:39:23.423]
Item Name:3K Tone No HAC to MIC4_Peak Mag, [,0.005]

[2016-04-05 17:39:23.423]
========================== START TEST 3K TONE HAC TO MIC4_FREQUENCY (Item68) ==========================

[2016-04-05 17:39:23.423]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Cap 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:23.423]
Write to ---> FIXTURE , command[Close Cap(STRING)]

[2016-04-05 17:39:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Cap,2,0;return value:0!

[2016-04-05 17:39:23.423]
PostTXToUI ===> 
{
Info ==> Close Cap 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:23.423 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:23.423]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:23.423]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006862s) +++++++++++++++++++++

[2016-04-05 17:39:23.423]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Cap 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Cap
Close Cap Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:24.424]
PostRXToUI ===> 
{
Info ==> Close Cap
Close Cap Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:24.424 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:24.424]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:24.424]
CATCH_VALUE => Catch OK : Close Cap Pass

[2016-04-05 17:39:24.424]
READ_COMMAND => Catch string between Close Cap and @_@ == Close Cap Pass

[2016-04-05 17:39:24.424]
RETURN_VALUE ===> Close Cap Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.472582s) ++++++++++++++

[2016-04-05 17:39:24.424]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open HAC 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:24.424]
Write to ---> FIXTURE , command[Open HAC(STRING)]

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open HAC,2,0;return value:0!

[2016-04-05 17:39:24.424]
PostTXToUI ===> 
{
Info ==> Open HAC 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:24.424 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:24.424]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:24.424]
RETURN_VALUE ===> Close Cap Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005310s) +++++++++++++++++++++

[2016-04-05 17:39:24.424]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open HAC 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open HAC
Open HAC Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:24.424]
PostRXToUI ===> 
{
Info ==> Open HAC
Open HAC Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:24.424 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:24.424]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:24.424]
CATCH_VALUE => Catch OK : Open HAC Pass

[2016-04-05 17:39:24.424]
READ_COMMAND => Catch string between Open HAC and @_@ == Open HAC Pass

[2016-04-05 17:39:24.424]
RETURN_VALUE ===> Open HAC Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.329511s) ++++++++++++++

[2016-04-05 17:39:24.424]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all  
TARGET ==> MOBILE 
}

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:24.424]
Write to ---> MOBILE , command[processaudio --freebufs all (STRING)]

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all ,2,0;return value:0!

[2016-04-05 17:39:24.424]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:24.424 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:24.424]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:24.424]
RETURN_VALUE ===> Open HAC Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006196s) +++++++++++++++++++++

[2016-04-05 17:39:24.424]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all  
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all 
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:24.424]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all 
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:24.424 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:24.424]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:24.424]
CATCH_VALUE => Catch OK : Delete all buffers in the system...
OK

[2016-04-05 17:39:24.424]
READ_COMMAND => Catch string between processaudio --freebufs all  and [001D38CC:3020213A] :-) == Delete all buffers in the system...
OK

[2016-04-05 17:39:24.424]
RETURN_VALUE ===> Delete all buffers in the system...
OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021659s) ++++++++++++++

[2016-04-05 17:39:24.424]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:24.424]
Write to ---> MOBILE , command[loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000(STRING)]

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000,2,0;return value:0!

[2016-04-05 17:39:24.424]
PostTXToUI ===> 
{
Info ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:24.424 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:24.424]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:24.424]
RETURN_VALUE ===> Delete all buffers in the system...
OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005866s) +++++++++++++++++++++

[2016-04-05 17:39:24.424]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:24.424]
PostRXToUI ===> 
{
Info ==> loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000
Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:24.424 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:24.424]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:24.424]
CATCH_VALUE => Catch OK : Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK

[2016-04-05 17:39:24.424]
READ_COMMAND => Catch string between loopaudio -b socmca -p ap-mca4 -x ap-mca4 -d 24 --rate 48000 --channels 1 -l 400 --freq 3000 and [001D38CC:3020213A] :-) == Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK

[2016-04-05 17:39:24.424]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.444153s) ++++++++++++++

[2016-04-05 17:39:24.424]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i looprx0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:24.424]
Write to ---> MOBILE , command[processaudio -p fft -i looprx0(STRING)]

[2016-04-05 17:39:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i looprx0,2,0;return value:0!

[2016-04-05 17:39:24.424]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:24.424 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:24.424]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:24.424]
RETURN_VALUE ===> Configuring 'socmca' to play/record 48Khz, 24-bit, 1 channels of padded audio data for 400mS...
Requesting new tx buffer...
Generating tone data into 'looptx0'...
Requesting new rx buffer...
Using rx buffer 'looprx0'...
Playing/Receiving audio...
Done!
OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005486s) +++++++++++++++++++++

[2016-04-05 17:39:24.424]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i looprx0 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i looprx0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.061434 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=13.426952 dBFS
Peak Power: -24.231742 dBFS
Signal Power: -24.391212 dBFS
Noise Power: -37.818165 dBFS
Average Noise PSD: -73.147619 dBFS
Noise Margin: 48.915876 dBFS
THD+N: -25.414318 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:25.425]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i looprx0
Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.061434 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=13.426952 dBFS
Peak Power: -24.231742 dBFS
Signal Power: -24.391212 dBFS
Noise Power: -37.818165 dBFS
Average Noise PSD: -73.147619 dBFS
Noise Margin: 48.915876 dBFS
THD+N: -25.414318 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:25.425]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.061434 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=13.426952 dBFS
Peak Power: -24.231742 dBFS
Signal Power: -24.391212 dBFS
Noise Power: -37.818165 dBFS
Average Noise PSD: -73.147619 dBFS
Noise Margin: 48.915876 dBFS
THD+N: -25.414318 dB
OK

[2016-04-05 17:39:25.425]
READ_COMMAND => Catch string between processaudio -p fft -i looprx0 and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.061434 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=13.426952 dBFS
Peak Power: -24.231742 dBFS
Signal Power: -24.391212 dBFS
Noise Power: -37.818165 dBFS
Average Noise PSD: -73.147619 dBFS
Noise Margin: 48.915876 dBFS
THD+N: -25.414318 dB
OK

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.061434 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=13.426952 dBFS
Peak Power: -24.231742 dBFS
Signal Power: -24.391212 dBFS
Noise Power: -37.818165 dBFS
Average Noise PSD: -73.147619 dBFS
Noise Margin: 48.915876 dBFS
THD+N: -25.414318 dB
OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.068519s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Open_HAC_Value 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.061434 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=13.426952 dBFS
Peak Power: -24.231742 dBFS
Signal Power: -24.391212 dBFS
Noise Power: -37.818165 dBFS
Average Noise PSD: -73.147619 dBFS
Noise Margin: 48.915876 dBFS
THD+N: -25.414318 dB
OK
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Open_HAC_Value 
REGEX ==> Frequency:\s*(.*?)\s*\+ 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 3000.000000
++++++++++++++ [12] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000249s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Open_HAC_Frequency_Value 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 3000.000000
++++++++++ [13] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone HAC to MIC4_Frequency_spec*] 
 
}

[2016-04-05 17:39:25.425]
JUDGE_SPEC =>  value is [3000.000000], spec is [Item0=2996 ; Item1=3004 ; ], mode is [1]

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 3000.000000
+++++++++++++++ [14] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000677s) +++++++++++++++

[2016-04-05 17:39:25.425]
========== END TEST 3K Tone HAC to MIC4_Frequency (TestResult : PASS ; Duration : 1.386469s) ==========

[2016-04-05 17:39:25.425]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone HAC to MIC4_Frequency,,,3000.000000,2996,3004,,)

[2016-04-05 17:39:25.425]
Item Name:3K Tone HAC to MIC4_Frequency, [2996,3004]

[2016-04-05 17:39:25.425]
=========================== START TEST 3K TONE HAC TO MIC4_PEAK MAG (Item69) ===========================

[2016-04-05 17:39:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close HAC 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:25.425]
Write to ---> FIXTURE , command[Close HAC(STRING)]

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close HAC,2,0;return value:0!

[2016-04-05 17:39:25.425]
PostTXToUI ===> 
{
Info ==> Close HAC 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:25.425]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007081s) +++++++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close HAC 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close HAC
Close HAC Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:25.425]
PostRXToUI ===> 
{
Info ==> Close HAC
Close HAC Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:25.425]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:25.425]
CATCH_VALUE => Catch OK : Close HAC Pass

[2016-04-05 17:39:25.425]
READ_COMMAND => Catch string between Close HAC and @_@ == Close HAC Pass

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Close HAC Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.043135s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Open_HAC_Value 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 16384 samples...
Channel 0:
Using 16384 bins, Peak Bin=1024; Peak Magnitude=0.061434 FS; Frequency: 3000.000000 +/- 1.464843 Hz
DC Magnitude=0.000006 FS
Signal Bins=3
SINAD=13.426952 dBFS
Peak Power: -24.231742 dBFS
Signal Power: -24.391212 dBFS
Noise Power: -37.818165 dBFS
Average Noise PSD: -73.147619 dBFS
Noise Margin: 48.915876 dBFS
THD+N: -25.414318 dB
OK
++++++++ [3] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Open_HAC_Value 
REGEX ==> Peak Magnitude=(.*?) FS 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 0.061434
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000224s) +++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Open_HAC_Magnitude_Value 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 0.061434
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone HAC to MIC4_Peak Mag_spec*] 
 
}

[2016-04-05 17:39:25.425]
JUDGE_SPEC =>  value is [0.061434], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 0.061434
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000604s) +++++++++++++++

[2016-04-05 17:39:25.425]
=========== END TEST 3K Tone HAC to MIC4_Peak Mag (TestResult : PASS ; Duration : 0.059396s) ===========

[2016-04-05 17:39:25.425]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone HAC to MIC4_Peak Mag,,,0.061434,NA,NA,,)

[2016-04-05 17:39:25.425]
Item Name:3K Tone HAC to MIC4_Peak Mag, {NA}

[2016-04-05 17:39:25.425]
================================ START TEST 3K TONE HAC RATIO (Item70) ================================

[2016-04-05 17:39:25.425]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Open_HAC_Magnitude_Value*]/[*Close_HAC_Magnitude_Value*] 
DecimalPlaces ==> 1 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 269.4
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000250s) +++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> 3K Tone HAC Ratio 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 269.4
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*3K Tone HAC Ratio_spec*] 
 
}

[2016-04-05 17:39:25.425]
JUDGE_SPEC =>  value is [269.4], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 269.4
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000799s) +++++++++++++++

[2016-04-05 17:39:25.425]
================ END TEST 3K Tone HAC Ratio (TestResult : PASS ; Duration : 0.005848s) ================

[2016-04-05 17:39:25.425]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(3K Tone HAC Ratio,,,269.4,NA,NA,,)

[2016-04-05 17:39:25.425]
Item Name:3K Tone HAC Ratio, {NA}

[2016-04-05 17:39:25.425]
=================================== START TEST ALS ID CHECK (Item71) ===================================

[2016-04-05 17:39:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel als --init 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:25.425]
Write to ---> MOBILE , command[sensor --sel als --init(STRING)]

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --init,2,0;return value:0!

[2016-04-05 17:39:25.425]
PostTXToUI ===> 
{
Info ==> sensor --sel als --init 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006983s) +++++++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel als --init 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --init
Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:25.425]
PostRXToUI ===> 
{
Info ==> sensor --sel als --init
Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:25.425]
CATCH_VALUE => Catch OK : Turning off power to 'als' sensor...Turning on power to 'als' sensor...Resetting 'als' sensor...OK

[2016-04-05 17:39:25.425]
READ_COMMAND => Catch string between sensor --sel als --init and [001D38CC:3020213A] :-) == Turning off power to 'als' sensor...Turning on power to 'als' sensor...Resetting 'als' sensor...OK

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Turning off power to 'als' sensor...Turning on power to 'als' sensor...Resetting 'als' sensor...OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.029079s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel als --get chip_id 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:25.425]
Write to ---> MOBILE , command[sensor --sel als --get chip_id(STRING)]

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --get chip_id,2,0;return value:0!

[2016-04-05 17:39:25.425]
PostTXToUI ===> 
{
Info ==> sensor --sel als --get chip_id 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Turning off power to 'als' sensor...Turning on power to 'als' sensor...Resetting 'als' sensor...OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006121s) +++++++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel als --get chip_id 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --get chip_id
als:
	chip_id = 0x9B
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:25.425]
PostRXToUI ===> 
{
Info ==> sensor --sel als --get chip_id
als:
	chip_id = 0x9B
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:25.425]
CATCH_VALUE => Catch OK : als:	chip_id = 0x9BOK

[2016-04-05 17:39:25.425]
READ_COMMAND => Catch string between sensor --sel als --get chip_id and [001D38CC:3020213A] :-) == als:	chip_id = 0x9BOK

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> als:	chip_id = 0x9BOK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022562s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_ID 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> als:	chip_id = 0x9BOK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_ID 
REGEX ==> chip_id =\s(0x.{2}) 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 0x9B
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000149s) +++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS ID check_spec*] 
 
}

[2016-04-05 17:39:25.425]
JUDGE_SPEC =>  value is [0x9B], spec is [Item0=0x9B ; ], mode is [5]

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 0x9B
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000710s) +++++++++++++++

[2016-04-05 17:39:25.425]
=================== END TEST ALS ID check (TestResult : PASS ; Duration : 0.075577s) ===================

[2016-04-05 17:39:25.425]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS ID check,,,0x9B,0x9B,0x9B,,)

[2016-04-05 17:39:25.425]
Item Name:ALS ID check, <0x9B>

[2016-04-05 17:39:25.425]
=============================== START TEST CLEAR TEST NO LIGHT (Item72) ===============================

[2016-04-05 17:39:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Prox Cap 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:25.425]
Write to ---> FIXTURE , command[Close Prox Cap(STRING)]

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Prox Cap,2,0;return value:0!

[2016-04-05 17:39:25.425]
PostTXToUI ===> 
{
Info ==> Close Prox Cap 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:25.425]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007372s) +++++++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Prox Cap 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Prox Cap
Close Prox Cap Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:25.425]
PostRXToUI ===> 
{
Info ==> Close Prox Cap
Close Prox Cap Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:25.425]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:25.425]
CATCH_VALUE => Catch OK : Close Prox Cap Pass

[2016-04-05 17:39:25.425]
READ_COMMAND => Catch string between Close Prox Cap and @_@ == Close Prox Cap Pass

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Close Prox Cap Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.113419s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:25.425]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-04-05 17:39:25.425]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Close Prox Cap Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005392s) +++++++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> RunExit 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:25.425]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:25.425]
CATCH_VALUE => Catch OK : Pass

[2016-04-05 17:39:25.425]
READ_COMMAND => Catch string between RunExit and [001D38CC:3020213A] :-) == Pass

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.157882s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -o 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:25.425]
Write to ---> MOBILE , command[bl -o(STRING)]

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -o,2,0;return value:0!

[2016-04-05 17:39:25.425]
PostTXToUI ===> 
{
Info ==> bl -o 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005328s) +++++++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -o 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -o
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:25.425]
PostRXToUI ===> 
{
Info ==> bl -o
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:25.425]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:25.425]
READ_COMMAND => Catch string between bl -o and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.007086s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel als --init 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:25.425]
Write to ---> MOBILE , command[sensor --sel als --init(STRING)]

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --init,2,0;return value:0!

[2016-04-05 17:39:25.425]
PostTXToUI ===> 
{
Info ==> sensor --sel als --init 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005478s) +++++++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel als --init 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --init
Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:25.425]
PostRXToUI ===> 
{
Info ==> sensor --sel als --init
Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:25.425]
CATCH_VALUE => Catch OK : Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK

[2016-04-05 17:39:25.425]
READ_COMMAND => Catch string between sensor --sel als --init and [001D38CC:3020213A] :-) == Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.030030s) ++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 100 
}

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
+++++++++++++++++ [9] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.103247s) +++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:25.425]
Write to ---> MOBILE , command[sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-04-05 17:39:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-04-05 17:39:25.425]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:25.425]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:25.425]
RETURN_VALUE ===> Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007156s) ++++++++++++++++++++

[2016-04-05 17:39:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 306s:726142us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:124146us (+00s:398004us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:522088us (+00s:397942us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:920090us (+00s:398002us) = ir = 0x00000000, clear = 0x00000000
als:		 308s:318036us (+00s:397946us) = ir = 0x00000000, clear = 0x00000000
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:27.427]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 306s:726142us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:124146us (+00s:398004us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:522088us (+00s:397942us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:920090us (+00s:398002us) = ir = 0x00000000, clear = 0x00000000
als:		 308s:318036us (+00s:397946us) = ir = 0x00000000, clear = 0x00000000
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:27.427 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:27.427]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:27.427]
CATCH_VALUE => Catch OK : Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 306s:726142us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:124146us (+00s:398004us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:522088us (+00s:397942us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:920090us (+00s:398002us) = ir = 0x00000000, clear = 0x00000000
als:		 308s:318036us (+00s:397946us) = ir = 0x00000000, clear = 0x00000000
OK

[2016-04-05 17:39:27.427]
READ_COMMAND => Catch string between sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream and [001D38CC:3020213A] :-) == Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 306s:726142us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:124146us (+00s:398004us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:522088us (+00s:397942us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:920090us (+00s:398002us) = ir = 0x00000000, clear = 0x00000000
als:		 308s:318036us (+00s:397946us) = ir = 0x00000000, clear = 0x00000000
OK

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 306s:726142us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:124146us (+00s:398004us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:522088us (+00s:397942us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:920090us (+00s:398002us) = ir = 0x00000000, clear = 0x00000000
als:		 308s:318036us (+00s:397946us) = ir = 0x00000000, clear = 0x00000000
OK
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.039958s) ++++++++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 306s:726142us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:124146us (+00s:398004us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:522088us (+00s:397942us) = ir = 0x00000000, clear = 0x00000000
als:		 307s:920090us (+00s:398002us) = ir = 0x00000000, clear = 0x00000000
als:		 308s:318036us (+00s:397946us) = ir = 0x00000000, clear = 0x00000000
OK
+++++++++ [12] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000082s) +++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 0
+++++++ [13] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel_No_Light 
}

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 0
++++++++++ [14] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Clear Test No Light_spec*] 
 
}

[2016-04-05 17:39:27.427]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; Item1=8 ; ], mode is [1]

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 0
+++++++++++++++ [15] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000772s) +++++++++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Clear Test No Light_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 0
+++++++++++ [16] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:27.427]
=============== END TEST Clear Test No Light (TestResult : PASS ; Duration : 2.507978s) ===============

[2016-04-05 17:39:27.427]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Clear Test No Light,,,0,0,8,,)

[2016-04-05 17:39:27.427]
Item Name:Clear Test No Light, [0,8]

[2016-04-05 17:39:27.427]
================================= START TEST IR TEST NO LIGHT (Item73) =================================

[2016-04-05 17:39:27.427]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel 
}

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 0
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000029s) ++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel_No_Light 
}

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 0
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) ++++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*IR Test No Light_spec*] 
 
}

[2016-04-05 17:39:27.427]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; Item1=8 ; ], mode is [1]

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 0
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000778s) +++++++++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*IR Test No Light_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 0
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000044s) +++++++++++

[2016-04-05 17:39:27.427]
================= END TEST IR Test No Light (TestResult : PASS ; Duration : 0.007043s) =================

[2016-04-05 17:39:27.427]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(IR Test No Light,,,0,0,8,,)

[2016-04-05 17:39:27.427]
Item Name:IR Test No Light, [0,8]

[2016-04-05 17:39:27.427]
=========================== START TEST CLEAR TEST WITH LIGHT(BLACK) (Item76) ===========================

[2016-04-05 17:39:27.427]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> White Led On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:27.427]
Write to ---> FIXTURE , command[White Led On(STRING)]

[2016-04-05 17:39:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:White Led On,2,0;return value:0!

[2016-04-05 17:39:27.427]
PostTXToUI ===> 
{
Info ==> White Led On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:27.427 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:27.427]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006500s) +++++++++++++++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> White Led On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:White Led On
White Led On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:27.427]
PostRXToUI ===> 
{
Info ==> White Led On
White Led On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:27.427 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:27.427]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:27.427]
CATCH_VALUE => Catch OK : White Led On Pass

[2016-04-05 17:39:27.427]
READ_COMMAND => Catch string between White Led On and @_@ == White Led On Pass

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> White Led On Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.127880s) ++++++++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel als --set gain 140 integration_cycles 144 --sample 5 --stream 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:27.427]
Write to ---> MOBILE , command[sensor --sel als --set gain 140 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-04-05 17:39:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 140 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-04-05 17:39:27.427]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 140 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:27.427 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:27.427]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:27.427]
RETURN_VALUE ===> White Led On Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005761s) +++++++++++++++++++++

[2016-04-05 17:39:27.427]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel als --set gain 140 integration_cycles 144 --sample 5 --stream 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 140 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 140 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 308s:952655us (+00s:000000us) = ir = 0x0000030E, clear = 0x00002998
als:		 309s:350669us (+00s:398014us) = ir = 0x0000030D, clear = 0x0000298E
als:		 309s:748620us (+00s:397951us) = ir = 0x0000030D, clear = 0x00002987
als:		 310s:146566us (+00s:397946us) = ir = 0x0000030D, clear = 0x00002985
als:		 310s:544587us (+00s:398021us) = ir = 0x0000030D, clear = 0x00002984
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:29.429]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 140 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 140 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 308s:952655us (+00s:000000us) = ir = 0x0000030E, clear = 0x00002998
als:		 309s:350669us (+00s:398014us) = ir = 0x0000030D, clear = 0x0000298E
als:		 309s:748620us (+00s:397951us) = ir = 0x0000030D, clear = 0x00002987
als:		 310s:146566us (+00s:397946us) = ir = 0x0000030D, clear = 0x00002985
als:		 310s:544587us (+00s:398021us) = ir = 0x0000030D, clear = 0x00002984
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:29.429]
CATCH_VALUE => Catch OK : Setting parameter 'gain' to 140 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 308s:952655us (+00s:000000us) = ir = 0x0000030E, clear = 0x00002998
als:		 309s:350669us (+00s:398014us) = ir = 0x0000030D, clear = 0x0000298E
als:		 309s:748620us (+00s:397951us) = ir = 0x0000030D, clear = 0x00002987
als:		 310s:146566us (+00s:397946us) = ir = 0x0000030D, clear = 0x00002985
als:		 310s:544587us (+00s:398021us) = ir = 0x0000030D, clear = 0x00002984
OK

[2016-04-05 17:39:29.429]
READ_COMMAND => Catch string between sensor --sel als --set gain 140 integration_cycles 144 --sample 5 --stream and [001D38CC:3020213A] :-) == Setting parameter 'gain' to 140 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 308s:952655us (+00s:000000us) = ir = 0x0000030E, clear = 0x00002998
als:		 309s:350669us (+00s:398014us) = ir = 0x0000030D, clear = 0x0000298E
als:		 309s:748620us (+00s:397951us) = ir = 0x0000030D, clear = 0x00002987
als:		 310s:146566us (+00s:397946us) = ir = 0x0000030D, clear = 0x00002985
als:		 310s:544587us (+00s:398021us) = ir = 0x0000030D, clear = 0x00002984
OK

[2016-04-05 17:39:29.429]
RETURN_VALUE ===> Setting parameter 'gain' to 140 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 308s:952655us (+00s:000000us) = ir = 0x0000030E, clear = 0x00002998
als:		 309s:350669us (+00s:398014us) = ir = 0x0000030D, clear = 0x0000298E
als:		 309s:748620us (+00s:397951us) = ir = 0x0000030D, clear = 0x00002987
als:		 310s:146566us (+00s:397946us) = ir = 0x0000030D, clear = 0x00002985
als:		 310s:544587us (+00s:398021us) = ir = 0x0000030D, clear = 0x00002984
OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.037463s) ++++++++++++++

[2016-04-05 17:39:29.429]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:39:29.429]
RETURN_VALUE ===> Setting parameter 'gain' to 140 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 308s:952655us (+00s:000000us) = ir = 0x0000030E, clear = 0x00002998
als:		 309s:350669us (+00s:398014us) = ir = 0x0000030D, clear = 0x0000298E
als:		 309s:748620us (+00s:397951us) = ir = 0x0000030D, clear = 0x00002987
als:		 310s:146566us (+00s:397946us) = ir = 0x0000030D, clear = 0x00002985
als:		 310s:544587us (+00s:398021us) = ir = 0x0000030D, clear = 0x00002984
OK
+++++++++ [5] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000065s) +++++++++

[2016-04-05 17:39:29.429]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-04-05 17:39:29.429]
RETURN_VALUE ===> 10634.8
++++++++ [6] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) ++++++++

[2016-04-05 17:39:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel_With_Light 
}

[2016-04-05 17:39:29.429]
RETURN_VALUE ===> 10634.8
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Clear Test With Light(Black)_spec*] 
 
}

[2016-04-05 17:39:29.429]
JUDGE_SPEC =>  value is [10634.8], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:29.429]
RETURN_VALUE ===> 10634.8
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000647s) +++++++++++++++

[2016-04-05 17:39:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-04-05 17:39:29.429]
RETURN_VALUE ===> 10634.8
++++++++++ [9] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> White Led Off 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:29.429]
Write to ---> FIXTURE , command[White Led Off(STRING)]

[2016-04-05 17:39:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:White Led Off,2,0;return value:0!

[2016-04-05 17:39:29.429]
PostTXToUI ===> 
{
Info ==> White Led Off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:29.429]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:29.429]
RETURN_VALUE ===> 10634.8
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005785s) ++++++++++++++++++++

[2016-04-05 17:39:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> White Led Off 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:White Led Off
White Led Off Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:30.430]
PostRXToUI ===> 
{
Info ==> White Led Off
White Led Off Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:30.430]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:30.430]
CATCH_VALUE => Catch OK : White Led Off Pass

[2016-04-05 17:39:30.430]
READ_COMMAND => Catch string between White Led Off and @_@ == White Led Off Pass

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> White Led Off Pass
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.030498s) ++++++++++++++

[2016-04-05 17:39:30.430]
=========== END TEST Clear Test With Light(Black) (TestResult : PASS ; Duration : 2.229555s) ===========

[2016-04-05 17:39:30.430]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Clear Test With Light(Black),,,10634.8,NA,NA,,)

[2016-04-05 17:39:30.430]
Item Name:Clear Test With Light(Black), {NA}

[2016-04-05 17:39:30.430]
============================ START TEST IR TEST WITH LIGHT(BLACK) (Item77) ============================

[2016-04-05 17:39:30.430]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 781.2
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000032s) ++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel_With_Light 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 781.2
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*IR Test With Light(Black)_spec*] 
 
}

[2016-04-05 17:39:30.430]
JUDGE_SPEC =>  value is [781.2], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 781.2
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000743s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*IR Test With Light(Black)_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 781.2
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:30.430]
============ END TEST IR Test With Light(Black) (TestResult : PASS ; Duration : 0.006933s) ============

[2016-04-05 17:39:30.430]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(IR Test With Light(Black),,,781.2,NA,NA,,)

[2016-04-05 17:39:30.430]
Item Name:IR Test With Light(Black), {NA}

[2016-04-05 17:39:30.430]
=============================== START TEST ALS_CLEAR_TEST_DELTA (Item78) ===============================

[2016-04-05 17:39:30.430]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*ALS_Clear_channel_With_Light*])-([*ALS_Clear_channel_No_Light*]) 
DecimalPlaces ==> 5 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 10634.79980
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000152s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS_Clear_Test_Delta_spec*] 
 
}

[2016-04-05 17:39:30.430]
JUDGE_SPEC =>  value is [10634.79980], spec is [Item0=10 ; Item1= ; ], mode is [1]

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 10634.79980
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000789s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ALS_Clear_Test_Delta_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 10634.79980
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000025s) +++++++++++

[2016-04-05 17:39:30.430]
=============== END TEST ALS_Clear_Test_Delta (TestResult : PASS ; Duration : 0.005621s) ===============

[2016-04-05 17:39:30.430]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS_Clear_Test_Delta,,,10634.79980,10,NA,,)

[2016-04-05 17:39:30.430]
Item Name:ALS_Clear_Test_Delta, [10,]

[2016-04-05 17:39:30.430]
================================ START TEST ALS_IR_TEST_DELTA (Item79) ================================

[2016-04-05 17:39:30.430]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*ALS_IR_channel_With_Light*])-([*ALS_IR_channel_No_Light*]) 
DecimalPlaces ==> 5 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 781.20001
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000142s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS_IR_Test_Delta_spec*] 
 
}

[2016-04-05 17:39:30.430]
JUDGE_SPEC =>  value is [781.20001], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 781.20001
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000778s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ALS_IR_Test_Delta_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 781.20001
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:30.430]
================ END TEST ALS_IR_Test_Delta (TestResult : PASS ; Duration : 0.005618s) ================

[2016-04-05 17:39:30.430]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS_IR_Test_Delta,,,781.20001,NA,NA,,)

[2016-04-05 17:39:30.430]
Item Name:ALS_IR_Test_Delta, {NA}

[2016-04-05 17:39:30.430]
======================================= START TEST HOLD (Item80) =======================================

[2016-04-05 17:39:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:30.430]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:30.430]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006214s) +++++++++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:30.430]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:30.430]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:30.430]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022214s) ++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> HoldKey=(\d{1}).*PMU 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000160s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> HoldKey_Original 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 0
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> PMU.*HoldKey=(\d{1}) 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 0
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000183s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMUHoldKey_Original 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 0
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open Hold 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:30.430]
Write to ---> FIXTURE , command[Open Hold(STRING)]

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Hold,2,0;return value:0!

[2016-04-05 17:39:30.430]
PostTXToUI ===> 
{
Info ==> Open Hold 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:30.430]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 0
+++++++++++++++++++++ [8] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005543s) +++++++++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open Hold 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Hold
Open Hold Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:30.430]
PostRXToUI ===> 
{
Info ==> Open Hold
Open Hold Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:30.430]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:30.430]
CATCH_VALUE => Catch OK : Open Hold Pass

[2016-04-05 17:39:30.430]
READ_COMMAND => Catch string between Open Hold and @_@ == Open Hold Pass

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> Open Hold Pass
++++++++++++++ [9] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.113205s) ++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 400 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> Open Hold Pass
++++++++++++++++ [10] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.404722s) ++++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:30.430]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:30.430]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> Open Hold Pass
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006598s) ++++++++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=1 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=1 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:30.430]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=1 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=1 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:30.430]
CATCH_VALUE => Catch OK : AP: HoldKey=1 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=1 VolDown=0 RingerA=1

[2016-04-05 17:39:30.430]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=1 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=1 VolDown=0 RingerA=1

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> AP: HoldKey=1 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=1 VolDown=0 RingerA=1
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021816s) ++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> AP: HoldKey=1 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=1 VolDown=0 RingerA=1
++++++++++ [13] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> HoldKey=(\d{1}).*PMU 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 1
++++++++++++++ [14] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000158s) ++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> HoldKey_1 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 1
++++++++++ [15] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> PMU.*HoldKey=(\d{1}) 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 1
++++++++++++++ [16] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000150s) ++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMUHoldKey_1 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 1
++++++++++ [17] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*HoldKey_1*])-([*HoldKey_Original*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 1.00
+++++++++++++++ [18] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000104s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:30.430]
JUDGE_SPEC =>  value is [1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 1.00
+++++++++++++++ [19] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000617s) +++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Hold 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:30.430]
Write to ---> FIXTURE , command[Close Hold(STRING)]

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Hold,2,0;return value:0!

[2016-04-05 17:39:30.430]
PostTXToUI ===> 
{
Info ==> Close Hold 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:30.430]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> 1.00
++++++++++++++++++++ [20] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005342s) ++++++++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Hold 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Hold
Close Hold Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:30.430]
PostRXToUI ===> 
{
Info ==> Close Hold
Close Hold Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:30.430]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:30.430]
CATCH_VALUE => Catch OK : Close Hold Pass

[2016-04-05 17:39:30.430]
READ_COMMAND => Catch string between Close Hold and @_@ == Close Hold Pass

[2016-04-05 17:39:30.430]
RETURN_VALUE ===> Close Hold Pass
++++++++++++++ [21] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.119520s) ++++++++++++++

[2016-04-05 17:39:30.430]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 400 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> Close Hold Pass
++++++++++++++++ [22] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.401804s) ++++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:31.431]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:31.431]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> Close Hold Pass
++++++++++++++++++++ [23] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006370s) ++++++++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:31.431]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:31.431]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:31.431]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [24] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022437s) ++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [25] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> HoldKey=(\d{1}).*PMU 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 0
++++++++++++++ [26] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000190s) ++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> HoldKey_2 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 0
++++++++++ [27] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> PMU.*HoldKey=(\d{1}) 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 0
++++++++++++++ [28] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000149s) ++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMUHoldKey_2 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 0
++++++++++ [29] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*HoldKey_2*])-([*HoldKey_1*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> -1.00
+++++++++++++++ [30] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000079s) +++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:31.431]
JUDGE_SPEC =>  value is [-1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> -1.00
+++++++++++++++ [31] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000612s) +++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> PASS
++++ [32] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hold_spec*] 
 
}

[2016-04-05 17:39:31.431]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> PASS
+++++++++++++++ [33] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000603s) +++++++++++++++

[2016-04-05 17:39:31.431]
======================= END TEST Hold (TestResult : PASS ; Duration : 1.184230s) =======================

[2016-04-05 17:39:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hold,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:31.431]
Item Name:Hold, <PASS>

[2016-04-05 17:39:31.431]
====================================== START TEST VOL_UP (Item81) ======================================

[2016-04-05 17:39:31.431]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> VolUp=(\d{1}).*PMU 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 0
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000292s) +++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> VolUp_Original 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 0
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open Volup 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:31.431]
Write to ---> FIXTURE , command[Open Volup(STRING)]

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Volup,2,0;return value:0!

[2016-04-05 17:39:31.431]
PostTXToUI ===> 
{
Info ==> Open Volup 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:31.431]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 0
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006564s) +++++++++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open Volup 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Volup
Open Volup Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:31.431]
PostRXToUI ===> 
{
Info ==> Open Volup
Open Volup Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:31.431]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:31.431]
CATCH_VALUE => Catch OK : Open Volup Pass

[2016-04-05 17:39:31.431]
READ_COMMAND => Catch string between Open Volup and @_@ == Open Volup Pass

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> Open Volup Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.108546s) ++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 400 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> Open Volup Pass
+++++++++++++++++ [5] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.405111s) +++++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:31.431]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:31.431]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> Open Volup Pass
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006154s) +++++++++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=1 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:31.431]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=1 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:31.431]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=1 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:31.431]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=1 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=1 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024246s) ++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=1 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [8] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> VolUp=(\d{1}).*PMU 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 1
+++++++++++++++ [9] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000160s) +++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> VolUp_1 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 1
++++++++++ [10] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*VolUp_1*])-([*VolUp_Original*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 1.00
+++++++++++++++ [11] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000080s) +++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:31.431]
JUDGE_SPEC =>  value is [1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 1.00
+++++++++++++++ [12] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000698s) +++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Volup 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:31.431]
Write to ---> FIXTURE , command[Close Volup(STRING)]

[2016-04-05 17:39:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Volup,2,0;return value:0!

[2016-04-05 17:39:31.431]
PostTXToUI ===> 
{
Info ==> Close Volup 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:31.431]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:31.431]
RETURN_VALUE ===> 1.00
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005271s) ++++++++++++++++++++

[2016-04-05 17:39:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Volup 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Volup
Close Volup Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:32.432]
PostRXToUI ===> 
{
Info ==> Close Volup
Close Volup Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:32.432]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:32.432]
CATCH_VALUE => Catch OK : Close Volup Pass

[2016-04-05 17:39:32.432]
READ_COMMAND => Catch string between Close Volup and @_@ == Close Volup Pass

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> Close Volup Pass
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.120765s) ++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 400 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> Close Volup Pass
++++++++++++++++ [15] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.401926s) ++++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:32.432]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:32.432]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:32.432]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> Close Volup Pass
++++++++++++++++++++ [16] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006764s) ++++++++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:32.432]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:32.432]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:32.432]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:32.432]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [17] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021719s) ++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [18] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> VolUp=(\d{1}).*PMU 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> 0
++++++++++++++ [19] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000157s) ++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> VolUp_2 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> 0
++++++++++ [20] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*VolUp_2*])-([*VolUp_1*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> -1.00
+++++++++++++++ [21] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000079s) +++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:32.432]
JUDGE_SPEC =>  value is [-1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> -1.00
+++++++++++++++ [22] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000765s) +++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> PASS
++++ [23] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Vol_Up_spec*] 
 
}

[2016-04-05 17:39:32.432]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> PASS
+++++++++++++++ [24] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000596s) +++++++++++++++

[2016-04-05 17:39:32.432]
====================== END TEST Vol_Up (TestResult : PASS ; Duration : 1.145802s) ======================

[2016-04-05 17:39:32.432]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Vol_Up,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:32.432]
Item Name:Vol_Up, <PASS>

[2016-04-05 17:39:32.432]
====================================== START TEST VOL_DW (Item82) ======================================

[2016-04-05 17:39:32.432]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> VolDown=(\d{1}).*PMU 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> 0
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000222s) +++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> VolDown_Original 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> 0
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> PMU.*VolDown=(\d{1}) 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> 0
+++++++++++++++ [3] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000239s) +++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMUVolDown_Original 
}

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> 0
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open Voldown 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:32.432]
Write to ---> FIXTURE , command[Open Voldown(STRING)]

[2016-04-05 17:39:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Voldown,2,0;return value:0!

[2016-04-05 17:39:32.432]
PostTXToUI ===> 
{
Info ==> Open Voldown 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:32.432]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> 0
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006368s) +++++++++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open Voldown 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Voldown
Open Voldown Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:32.432]
PostRXToUI ===> 
{
Info ==> Open Voldown
Open Voldown Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:32.432]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:32.432]
CATCH_VALUE => Catch OK : Open Voldown Pass

[2016-04-05 17:39:32.432]
READ_COMMAND => Catch string between Open Voldown and @_@ == Open Voldown Pass

[2016-04-05 17:39:32.432]
RETURN_VALUE ===> Open Voldown Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.119627s) ++++++++++++++

[2016-04-05 17:39:32.432]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 400 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> Open Voldown Pass
+++++++++++++++++ [7] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.405060s) +++++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:33.433]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:33.433]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:33.433 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:33.433]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> Open Voldown Pass
+++++++++++++++++++++ [8] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006965s) +++++++++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=1 RingerA=1 
PMU: HoldKey=0 VolDown=1 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:33.433]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=1 RingerA=1 
PMU: HoldKey=0 VolDown=1 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:33.433 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:33.433]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:33.433]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=1 RingerA=1 PMU: HoldKey=0 VolDown=1 RingerA=1

[2016-04-05 17:39:33.433]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=1 RingerA=1 PMU: HoldKey=0 VolDown=1 RingerA=1

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=1 RingerA=1 PMU: HoldKey=0 VolDown=1 RingerA=1
++++++++++++++ [9] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.027017s) ++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=1 RingerA=1 PMU: HoldKey=0 VolDown=1 RingerA=1
++++++++++ [10] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> VolDown=(\d{1}).*PMU 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
++++++++++++++ [11] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000185s) ++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> VolDown_1 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
++++++++++ [12] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000030s) ++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> PMU.*VolDown=(\d{1}) 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
++++++++++++++ [13] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000158s) ++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMUVolDown_1 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
++++++++++ [14] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*VolDown_1*])-([*VolDown_Original*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1.00
+++++++++++++++ [15] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000082s) +++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:33.433]
JUDGE_SPEC =>  value is [1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1.00
+++++++++++++++ [16] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000628s) +++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Voldown 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:33.433]
Write to ---> FIXTURE , command[Close Voldown(STRING)]

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Voldown,2,0;return value:0!

[2016-04-05 17:39:33.433]
PostTXToUI ===> 
{
Info ==> Close Voldown 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:33.433 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:33.433]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1.00
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005419s) ++++++++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Voldown 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Voldown
Close Voldown Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:33.433]
PostRXToUI ===> 
{
Info ==> Close Voldown
Close Voldown Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:33.433 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:33.433]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:33.433]
CATCH_VALUE => Catch OK : Close Voldown Pass

[2016-04-05 17:39:33.433]
READ_COMMAND => Catch string between Close Voldown and @_@ == Close Voldown Pass

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> Close Voldown Pass
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.114004s) ++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 400 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> Close Voldown Pass
++++++++++++++++ [19] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.402719s) ++++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:33.433]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:33.433]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:33.433 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:33.433]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> Close Voldown Pass
++++++++++++++++++++ [20] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006574s) ++++++++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:33.433]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:33.433 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:33.433]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:33.433]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:33.433]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [21] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023465s) ++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [22] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> VolDown=(\d{1}).*PMU 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 0
++++++++++++++ [23] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000167s) ++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> VolDown_2 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 0
++++++++++ [24] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> AFTER_BUTTON_CATCH 
REGEX ==> PMU.*VolDown=(\d{1}) 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 0
++++++++++++++ [25] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000196s) ++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMUVolDown_2 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 0
++++++++++ [26] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*VolDown_2*])-([*VolDown_1*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> -1.00
+++++++++++++++ [27] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000084s) +++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:33.433]
JUDGE_SPEC =>  value is [-1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> -1.00
+++++++++++++++ [28] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000617s) +++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> PASS
++++ [29] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) ++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Vol_Dw_spec*] 
 
}

[2016-04-05 17:39:33.433]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> PASS
+++++++++++++++ [30] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000639s) +++++++++++++++

[2016-04-05 17:39:33.433]
====================== END TEST Vol_Dw (TestResult : PASS ; Duration : 1.164720s) ======================

[2016-04-05 17:39:33.433]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Vol_Dw,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:33.433]
Item Name:Vol_Dw, <PASS>

[2016-04-05 17:39:33.433]
====================================== START TEST RINGER (Item83) ======================================

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> RingerA=(\d{1}).*PMU 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000294s) +++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Ringer_Original 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> PMU.*RingerA=(\d{1}) 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
+++++++++++++++ [3] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000211s) +++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMURINGER_Original 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : CHECK_RINGER_STATUS:RETURN_VALUE: ===> parameters:
{
RINGER_DOWN ==> 1 
FixtureUP ==> Open Ringer Up 
RINGRT_ORIGINAL ==> [*Ringer_Original*] 
FixtureDOWN ==> Open Ringer Down 
}

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
+++++++++++ [5] CHECK_RINGER_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000032s) +++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*FirstFixtureCommand*] 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:33.433]
Write to ---> FIXTURE , command[Open Ringer Up(STRING)]

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Ringer Up,2,0;return value:0!

[2016-04-05 17:39:33.433]
PostTXToUI ===> 
{
Info ==> Open Ringer Up 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:33.433 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:33.433]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> 1
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006517s) +++++++++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:33.433]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Ringer Up
Open Ringer Up Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:33.433]
PostRXToUI ===> 
{
Info ==> Open Ringer Up
Open Ringer Up Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:33.433 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:33.433]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:33.433]
CATCH_VALUE => Catch OK : Open Ringer UpOpen Ringer Up Pass

[2016-04-05 17:39:33.433]
READ_COMMAND => Catch string between  and @_@ == Open Ringer UpOpen Ringer Up Pass

[2016-04-05 17:39:33.433]
RETURN_VALUE ===> Open Ringer UpOpen Ringer Up Pass
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.255239s) ++++++++++++++

[2016-04-05 17:39:33.433]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 500 
}

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> Open Ringer UpOpen Ringer Up Pass
+++++++++++++++++ [8] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.505059s) +++++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:34.434]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:34.434]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:34.434 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:34.434]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> Open Ringer UpOpen Ringer Up Pass
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.023260s) +++++++++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:34.434]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:34.434 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:34.434]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:34.434]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:34.434]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.015101s) ++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_1 
}

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_1 
REGEX ==> RingerA=(\d{1}).*PMU 
}

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> 1
++++++++++++++ [12] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000215s) ++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_1 
}

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> 1
++++++++++ [13] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_1 
REGEX ==> PMU.*RingerA=(\d{1}) 
}

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> 1
++++++++++++++ [14] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000185s) ++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMURINGER_1 
}

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> 1
++++++++++ [15] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*RINGER_1*])-([*Ringer_Original*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> 0.00
+++++++++++++++ [16] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000110s) +++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:34.434]
JUDGE_SPEC =>  value is [0.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> 0.00
+++++++++++++++ [17] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000718s) +++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*SecondFixtureCommand*] 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:34.434]
Write to ---> FIXTURE , command[Open Ringer Down(STRING)]

[2016-04-05 17:39:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Ringer Down,2,0;return value:0!

[2016-04-05 17:39:34.434]
PostTXToUI ===> 
{
Info ==> Open Ringer Down 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:34.434 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:34.434]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> 0.00
++++++++++++++++++++ [18] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005508s) ++++++++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Ringer Down
Open Ringer Down Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:34.434]
PostRXToUI ===> 
{
Info ==> Open Ringer Down
Open Ringer Down Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:34.434 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:34.434]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:34.434]
CATCH_VALUE => Catch OK : Open Ringer DownOpen Ringer Down Pass

[2016-04-05 17:39:34.434]
READ_COMMAND => Catch string between  and @_@ == Open Ringer DownOpen Ringer Down Pass

[2016-04-05 17:39:34.434]
RETURN_VALUE ===> Open Ringer DownOpen Ringer Down Pass
++++++++++++++ [19] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.250755s) ++++++++++++++

[2016-04-05 17:39:34.434]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 500 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> Open Ringer DownOpen Ringer Down Pass
++++++++++++++++ [20] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.505045s) ++++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:35.435]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:35.435]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:35.435 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:35.435]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> Open Ringer DownOpen Ringer Down Pass
++++++++++++++++++++ [21] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006449s) ++++++++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:35.435]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:35.435 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:35.435]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:35.435]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:35.435]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [22] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023874s) ++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_2 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [23] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_2 
REGEX ==> RingerA=(\d{1}).*PMU 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++++++ [24] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000164s) ++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_2 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++ [25] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_2 
REGEX ==> PMU.*RingerA=(\d{1}) 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++++++ [26] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000169s) ++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMURINGER_2 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++ [27] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*RINGER_2*])-([*RINGER_1*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 0.00
+++++++++++++++ [28] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000103s) +++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:35.435]
JUDGE_SPEC =>  value is [0.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 0.00
+++++++++++++++ [29] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000643s) +++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> FAIL
++++ [30] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) ++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Ringer_spec*] 
 
}

[2016-04-05 17:39:35.435]
JUDGE_SPEC =>  value is [FAIL], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> FAIL
+++++++++++++++ [31] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000647s) +++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 0 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> FAIL
+++++++++++ [32] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) +++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ===> parameters:
{
RESULT ==> 1 
}

[2016-04-05 17:39:35.435]
PRE SUB ITEM HAS CHANGED to [1]

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> FAIL
+++++++ [33] CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000578s) +++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:35.435]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:35.435]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:35.435 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:35.435]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> FAIL
++++++++++++++++++++ [34] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005135s) ++++++++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:35.435]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:35.435 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:35.435]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:35.435]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:35.435]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [35] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022065s) ++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [36] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> RingerA=(\d{1}).*PMU 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++++++ [37] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000159s) ++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Ringer_Original 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++ [38] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BUTTON_CATCH 
REGEX ==> PMU.*RingerA=(\d{1}) 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++++++ [39] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000148s) ++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMURINGER_Original 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++ [40] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : CHECK_RINGER_STATUS:RETURN_VALUE: ===> parameters:
{
RINGER_DOWN ==> 1 
FixtureUP ==> Open Ringer Up 
RINGRT_ORIGINAL ==> [*Ringer_Original*] 
FixtureDOWN ==> Open Ringer Down 
}

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++ [41] CHECK_RINGER_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) ++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*FirstFixtureCommand*] 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:35.435]
Write to ---> FIXTURE , command[Open Ringer Up(STRING)]

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Ringer Up,2,0;return value:0!

[2016-04-05 17:39:35.435]
PostTXToUI ===> 
{
Info ==> Open Ringer Up 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:35.435 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:35.435]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> 1
++++++++++++++++++++ [42] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005357s) ++++++++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Ringer Up
Open Ringer Up Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:35.435]
PostRXToUI ===> 
{
Info ==> Open Ringer Up
Open Ringer Up Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:35.435 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:35.435]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:35.435]
CATCH_VALUE => Catch OK : Open Ringer UpOpen Ringer Up Pass

[2016-04-05 17:39:35.435]
READ_COMMAND => Catch string between  and @_@ == Open Ringer UpOpen Ringer Up Pass

[2016-04-05 17:39:35.435]
RETURN_VALUE ===> Open Ringer UpOpen Ringer Up Pass
++++++++++++++ [43] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.260524s) ++++++++++++++

[2016-04-05 17:39:35.435]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 500 
}

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> Open Ringer UpOpen Ringer Up Pass
++++++++++++++++ [44] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.501502s) ++++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:36.436]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:36.436]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:36.436]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:36.436]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:36.436 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:36.436]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> Open Ringer UpOpen Ringer Up Pass
++++++++++++++++++++ [45] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007485s) ++++++++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:36.436]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:36.436]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:36.436 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:36.436]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:36.436]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:36.436]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [46] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023373s) ++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_1 
}

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [47] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_1 
REGEX ==> RingerA=(\d{1}).*PMU 
}

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> 1
++++++++++++++ [48] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000163s) ++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_1 
}

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> 1
++++++++++ [49] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_1 
REGEX ==> PMU.*RingerA=(\d{1}) 
}

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> 1
++++++++++++++ [50] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000154s) ++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> PMURINGER_1 
}

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> 1
++++++++++ [51] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*RINGER_1*])-([*Ringer_Original*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> 0.00
+++++++++++++++ [52] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000105s) +++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:36.436]
JUDGE_SPEC =>  value is [0.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> 0.00
+++++++++++++++ [53] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000758s) +++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*SecondFixtureCommand*] 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:36.436]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:36.436]
Write to ---> FIXTURE , command[Open Ringer Down(STRING)]

[2016-04-05 17:39:36.436]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Ringer Down,2,0;return value:0!

[2016-04-05 17:39:36.436]
PostTXToUI ===> 
{
Info ==> Open Ringer Down 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:36.436 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:36.436]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> 0.00
++++++++++++++++++++ [54] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005588s) ++++++++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:36.436]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Ringer Down
Open Ringer Down Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:36.436]
PostRXToUI ===> 
{
Info ==> Open Ringer Down
Open Ringer Down Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:36.436 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:36.436]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:36.436]
CATCH_VALUE => Catch OK : Open Ringer DownOpen Ringer Down Pass

[2016-04-05 17:39:36.436]
READ_COMMAND => Catch string between  and @_@ == Open Ringer DownOpen Ringer Down Pass

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> Open Ringer DownOpen Ringer Down Pass
++++++++++++++ [55] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.260576s) ++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 500 
}

[2016-04-05 17:39:36.436]
RETURN_VALUE ===> Open Ringer DownOpen Ringer Down Pass
++++++++++++++++ [56] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.503396s) ++++++++++++++++

[2016-04-05 17:39:36.436]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> key 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:36.436]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:36.436]
Write to ---> MOBILE , command[key(STRING)]

[2016-04-05 17:39:36.436]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:key,2,0;return value:0!

[2016-04-05 17:39:36.436]
PostTXToUI ===> 
{
Info ==> key 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:36.436 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:36.436]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> Open Ringer DownOpen Ringer Down Pass
++++++++++++++++++++ [57] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006116s) ++++++++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> key 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:37.437]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:37.437]
PostRXToUI ===> 
{
Info ==> key
AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 
PMU: HoldKey=0 VolDown=0 RingerA=1 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:37.437 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:37.437]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:37.437]
CATCH_VALUE => Catch OK : AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:37.437]
READ_COMMAND => Catch string between key and [001D38CC:3020213A] :-) == AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++++++ [58] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.025460s) ++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> AP: HoldKey=0 VolUp=0 VolDown=0 RingerA=1 PMU: HoldKey=0 VolDown=0 RingerA=1
++++++++++ [59] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_2 
REGEX ==> RingerA=(\d{1}).*PMU 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 1
++++++++++++++ [60] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000162s) ++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 1
++++++++++ [61] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> RINGER_BUTTON_2 
REGEX ==> PMU.*RingerA=(\d{1}) 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 1
++++++++++++++ [62] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000172s) ++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : this[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 1
++++++++++ [63] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*RINGER_2*])-([*RINGER_1*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 0.00
+++++++++++++++ [64] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000078s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [0.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 0.00
+++++++++++++++ [65] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000631s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> FAIL
++++ [66] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Ringer_spec*] 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [FAIL], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> FAIL
+++++++++++++++ [67] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000595s) +++++++++++++++

[2016-04-05 17:39:37.437]
====================== END TEST Ringer (TestResult : FAIL ; Duration : 3.371067s) ======================

[2016-04-05 17:39:37.437]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Ringer,,,FAIL,PASS,PASS,,Ringer_FAIL)

[2016-04-05 17:39:37.437]
Item Name:Ringer, <PASS>

[2016-04-05 17:39:37.437]
===================================== START TEST PMUHOLD (Item84) =====================================

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*PMUHoldKey_1*])-([*PMUHoldKey_Original*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 1.00
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000130s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 1.00
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000934s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*PMUHoldKey_2*])-([*PMUHoldKey_1*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> -1.00
+++++++++++++++ [3] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000098s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [-1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> -1.00
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000778s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> PASS
+++++ [5] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000022s) +++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PMUHold_spec*] 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> PASS
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000823s) +++++++++++++++

[2016-04-05 17:39:37.437]
===================== END TEST PMUHold (TestResult : PASS ; Duration : 0.013022s) =====================

[2016-04-05 17:39:37.437]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PMUHold,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:37.437]
Item Name:PMUHold, <PASS>

[2016-04-05 17:39:37.437]
==================================== START TEST PMUVOLDOWN (Item85) ====================================

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*PMUVolDown_1*])-([*PMUVolDown_Original*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 1.00
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000103s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 1.00
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000744s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*PMUVolDown_2*])-([*PMUVolDown_1*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> -1.00
+++++++++++++++ [3] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000093s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [-1.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> -1.00
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000739s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> PASS
+++++ [5] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000022s) +++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PMUVolDown_spec*] 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> PASS
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000781s) +++++++++++++++

[2016-04-05 17:39:37.437]
==================== END TEST PMUVolDown (TestResult : PASS ; Duration : 0.011629s) ====================

[2016-04-05 17:39:37.437]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PMUVolDown,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:37.437]
Item Name:PMUVolDown, <PASS>

[2016-04-05 17:39:37.437]
==================================== START TEST PMURINGER (Item86) ====================================

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*PMURINGER_1*])-([*PMURINGER_Original*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 0.00
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000106s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [0.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 0.00
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000750s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*PMURINGER_2*])-([*PMURINGER_1*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 0.00
+++++++++++++++ [3] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000097s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <-1.00,1.00> 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [0.00], spec is [Item0=-1.00 ; Item1=1.00 ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 0.00
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000749s) +++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> FAIL
+++++ [5] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PMURinger_spec*] 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [FAIL], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> FAIL
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000832s) +++++++++++++++

[2016-04-05 17:39:37.437]
==================== END TEST PMURinger (TestResult : FAIL ; Duration : 0.011959s) ====================

[2016-04-05 17:39:37.437]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PMURinger,,,FAIL,PASS,PASS,,PMURinger_FAIL)

[2016-04-05 17:39:37.437]
Item Name:PMURinger, <PASS>

[2016-04-05 17:39:37.437]
=================================== START TEST BUTTON TEST (Item87) ===================================

[2016-04-05 17:39:37.437]
^=^ Begin subItem : BUTTONTEST_FINAL_RESULT:RETURN_VALUE: ===> parameters:
{
SubItems ==> Item0=Hold ; Item1=Vol_Up ; Item2=Vol_Dw ; Item3=Ringer ; Item4=PMURinger ; Item5=PMUHold ; Item6=PMUVolDown ;  
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 
+++++++++ [1] BUTTONTEST_FINAL_RESULT:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000022s) +++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> FAIL
+++++ [2] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000031s) +++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Button Test_spec*] 
 
}

[2016-04-05 17:39:37.437]
JUDGE_SPEC =>  value is [FAIL], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> FAIL
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000847s) +++++++++++++++

[2016-04-05 17:39:37.437]
=================== END TEST Button Test (TestResult : FAIL ; Duration : 0.007039s) ===================

[2016-04-05 17:39:37.437]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Button Test,,,FAIL,PASS,PASS,,Button Test_FAIL)

[2016-04-05 17:39:37.437]
Item Name:Button Test, <PASS>

[2016-04-05 17:39:37.437]
================================ START TEST MUON_OFF_MAXVALUE (Item88) ================================

[2016-04-05 17:39:37.437]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Cap 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:37.437]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:37.437]
Write to ---> FIXTURE , command[Close Cap(STRING)]

[2016-04-05 17:39:37.437]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Cap,2,0;return value:0!

[2016-04-05 17:39:37.437]
PostTXToUI ===> 
{
Info ==> Close Cap 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:37.437 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:37.437]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006713s) +++++++++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Cap 
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:37.437]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Cap
Close Cap Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:37.437]
PostRXToUI ===> 
{
Info ==> Close Cap
Close Cap Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:37.437 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:37.437]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:37.437]
CATCH_VALUE => Catch OK : Close Cap Pass

[2016-04-05 17:39:37.437]
READ_COMMAND => Catch string between Close Cap and @_@ == Close Cap Pass

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> Close Cap Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.119489s) ++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Prox Cap 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:37.437]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:37.437]
Write to ---> FIXTURE , command[Close Prox Cap(STRING)]

[2016-04-05 17:39:37.437]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Prox Cap,2,0;return value:0!

[2016-04-05 17:39:37.437]
PostTXToUI ===> 
{
Info ==> Close Prox Cap 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:37.437 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:37.437]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> Close Cap Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005483s) +++++++++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Prox Cap 
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:37.437]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Prox Cap
Close Prox Cap Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:37.437]
PostRXToUI ===> 
{
Info ==> Close Prox Cap
Close Prox Cap Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:37.437 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:37.437]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:37.437]
CATCH_VALUE => Catch OK : Close Prox Cap Pass

[2016-04-05 17:39:37.437]
READ_COMMAND => Catch string between Close Prox Cap and @_@ == Close Prox Cap Pass

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> Close Prox Cap Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.119381s) ++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 500 
}

[2016-04-05 17:39:37.437]
RETURN_VALUE ===> Close Prox Cap Pass
+++++++++++++++++ [5] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.503786s) +++++++++++++++++

[2016-04-05 17:39:37.437]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pattern --iqc 3 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:37.437]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:38.438]
Write to ---> MOBILE , command[pattern --iqc 3(STRING)]

[2016-04-05 17:39:38.438]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pattern --iqc 3,2,0;return value:0!

[2016-04-05 17:39:38.438]
PostTXToUI ===> 
{
Info ==> pattern --iqc 3 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:38.438 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:38.438]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:38.438]
RETURN_VALUE ===> Close Prox Cap Pass
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006446s) +++++++++++++++++++++

[2016-04-05 17:39:38.438]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:38.438]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pattern --iqc 3

[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:38.438]
PostRXToUI ===> 
{
Info ==> pattern --iqc 3

[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:38.438 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:38.438]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:38.438]
CATCH_VALUE => Catch OK : pattern --iqc 3

[2016-04-05 17:39:38.438]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == pattern --iqc 3

[2016-04-05 17:39:38.438]
RETURN_VALUE ===> pattern --iqc 3
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.073596s) ++++++++++++++

[2016-04-05 17:39:38.438]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 250 
}

[2016-04-05 17:39:38.438]
RETURN_VALUE ===> pattern --iqc 3
+++++++++++++++++ [8] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.250085s) +++++++++++++++++

[2016-04-05 17:39:38.438]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -o 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:38.438]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:38.438]
Write to ---> MOBILE , command[bl -o(STRING)]

[2016-04-05 17:39:38.438]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -o,2,0;return value:0!

[2016-04-05 17:39:38.438]
PostTXToUI ===> 
{
Info ==> bl -o 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:38.438 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:38.438]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:38.438]
RETURN_VALUE ===> pattern --iqc 3
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006378s) +++++++++++++++++++++

[2016-04-05 17:39:38.438]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -o 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:38.438]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -o
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:38.438]
PostRXToUI ===> 
{
Info ==> bl -o
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:38.438 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:38.438]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:38.438]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:38.438]
READ_COMMAND => Catch string between bl -o and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:38.438]
RETURN_VALUE ===> OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.010838s) ++++++++++++++

[2016-04-05 17:39:38.438]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> read lcm light 00015 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:38.438]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:38.438]
Write to ---> FIXTURE , command[read lcm light 00015(STRING)]

[2016-04-05 17:39:38.438]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:read lcm light 00015,2,0;return value:0!

[2016-04-05 17:39:38.438]
PostTXToUI ===> 
{
Info ==> read lcm light 00015 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:38.438 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:38.438]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:38.438]
RETURN_VALUE ===> OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005337s) ++++++++++++++++++++

[2016-04-05 17:39:38.438]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> read lcm light 00015 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 30 
END ==> @_@ 
}

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:read lcm light 00015read lcm light 00015
CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0
Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-04-05 17:39:39.439]
PostRXToUI ===> 
{
Info ==> read lcm light 00015read lcm light 00015
CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0
Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:39.439 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:39.439]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:39.439]
CATCH_VALUE => Catch OK : read lcm light 00015
CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0
Pass

[2016-04-05 17:39:39.439]
READ_COMMAND => Catch string between read lcm light 00015 and @_@ == read lcm light 00015
CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0
Pass

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> read lcm light 00015
CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0
Pass
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.760906s) ++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_Off 
}

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> read lcm light 00015
CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0

CH0_DATA:0
Pass
++++++++++ [13] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : CACULATE_MUON_VALUE:RETURN_VALUE: ===> parameters:
{
LENGTH ==> 15 
KEY ==> Muon_Off 
TYPE ==> MAX 
}

[2016-04-05 17:39:39.439]
GET_OBD_VALUE => Get OK : 0.00

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 0.00
++++++++++ [14] CACULATE_MUON_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001091s) ++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_Off_MaxCounts 
}

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 0.00
++++++++++ [15] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_Off_MaxValue_spec*] 
 
}

[2016-04-05 17:39:39.439]
JUDGE_SPEC =>  value is [0.00], spec is [Item0=0 ; Item1=100 ; ], mode is [1]

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 0.00
+++++++++++++++ [16] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000726s) +++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_Off_MaxValue_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 0.00
+++++++++++ [17] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000052s) +++++++++++

[2016-04-05 17:39:39.439]
================ END TEST Muon_Off_MaxValue (TestResult : PASS ; Duration : 1.896397s) ================

[2016-04-05 17:39:39.439]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_Off_MaxValue,,,0.00,0,100,,)

[2016-04-05 17:39:39.439]
Item Name:Muon_Off_MaxValue, [0,100]

[2016-04-05 17:39:39.439]
============================ START TEST MUON_IMAX_CURRENT_SETTING (Item89) ============================

[2016-04-05 17:39:39.439]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> syscfg print BLCl_2 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:39.439]
Write to ---> MOBILE , command[syscfg print BLCl_2(STRING)]

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:syscfg print BLCl_2,2,0;return value:0!

[2016-04-05 17:39:39.439]
PostTXToUI ===> 
{
Info ==> syscfg print BLCl_2 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:39.439 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:39.439]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006527s) +++++++++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> syscfg print BLCl_2 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:syscfg print BLCl_2
0x00000100 0x44D01104 0x0000027A 0x00000000 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:39.439]
PostRXToUI ===> 
{
Info ==> syscfg print BLCl_2
0x00000100 0x44D01104 0x0000027A 0x00000000 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:39.439 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:39.439]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:39.439]
CATCH_VALUE => Catch OK : 0x00000100 0x44D01104 0x0000027A 0x00000000

[2016-04-05 17:39:39.439]
READ_COMMAND => Catch string between syscfg print BLCl_2 and [001D38CC:3020213A] :-) == 0x00000100 0x44D01104 0x0000027A 0x00000000

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 0x00000100 0x44D01104 0x0000027A 0x00000000
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.025890s) ++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> BLCl_2 
}

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 0x00000100 0x44D01104 0x0000027A 0x00000000
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BLCl_2 
REGEX ==> 0x.{8}\s*0x(.{4}).{4}\s*0x.{8}\s*0x.{8} 
}

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 44D0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000160s) +++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 17616
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000032s) +++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> iMax 
}

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 17616
++++++++++ [6] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_iMax_Current_Setting_spec*] 
 
}

[2016-04-05 17:39:39.439]
JUDGE_SPEC =>  value is [17616], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 17616
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000617s) +++++++++++++++

[2016-04-05 17:39:39.439]
============ END TEST Muon_iMax_Current_Setting (TestResult : PASS ; Duration : 0.042403s) ============

[2016-04-05 17:39:39.439]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_iMax_Current_Setting,,,17616,NA,NA,,)

[2016-04-05 17:39:39.439]
Item Name:Muon_iMax_Current_Setting, {NA}

[2016-04-05 17:39:39.439]
================================ START TEST MUON_IMAX_MAXVALUE (Item90) ================================

[2016-04-05 17:39:39.439]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -c [*iMax*] 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:39.439]
Write to ---> MOBILE , command[bl -c 17616(STRING)]

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -c 17616,2,0;return value:0!

[2016-04-05 17:39:39.439]
PostTXToUI ===> 
{
Info ==> bl -c 17616 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:39.439 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:39.439]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006371s) +++++++++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -c 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -c 17616
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:39.439]
PostRXToUI ===> 
{
Info ==> bl -c 17616
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:39.439 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:39.439]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:39.439]
CATCH_VALUE => Catch OK : 17616OK

[2016-04-05 17:39:39.439]
READ_COMMAND => Catch string between bl -c and [001D38CC:3020213A] :-) == 17616OK

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 17616OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.009406s) ++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 750 
}

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 17616OK
+++++++++++++++++ [3] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.754717s) +++++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> read lcm light 00015 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:39.439]
Write to ---> FIXTURE , command[read lcm light 00015(STRING)]

[2016-04-05 17:39:39.439]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:read lcm light 00015,2,0;return value:0!

[2016-04-05 17:39:39.439]
PostTXToUI ===> 
{
Info ==> read lcm light 00015 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:39.439 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:39.439]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:39.439]
RETURN_VALUE ===> 17616OK
+++++++++++++++++++++ [4] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006512s) +++++++++++++++++++++

[2016-04-05 17:39:39.439]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> read lcm light 00015 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 30 
END ==> @_@ 
}

[2016-04-05 17:39:40.440]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:read lcm light 00015read lcm light 00015
CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426
Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-04-05 17:39:40.440]
PostRXToUI ===> 
{
Info ==> read lcm light 00015read lcm light 00015
CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426
Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:40.440 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:40.440]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:40.440]
CATCH_VALUE => Catch OK : read lcm light 00015
CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426
Pass

[2016-04-05 17:39:40.440]
READ_COMMAND => Catch string between read lcm light 00015 and @_@ == read lcm light 00015
CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426
Pass

[2016-04-05 17:39:40.440]
RETURN_VALUE ===> read lcm light 00015
CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426
Pass
++++++++++++++ [5] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.762491s) ++++++++++++++

[2016-04-05 17:39:40.440]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_iMax 
}

[2016-04-05 17:39:40.440]
RETURN_VALUE ===> read lcm light 00015
CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426

CH0_DATA:426
Pass
++++++++++ [6] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:40.440]
^=^ Begin subItem : CACULATE_MUON_VALUE:RETURN_VALUE: ===> parameters:
{
LENGTH ==> 15 
KEY ==> Muon_iMax 
TYPE ==> MAX 
}

[2016-04-05 17:39:40.440]
GET_OBD_VALUE => Get OK : 426.00

[2016-04-05 17:39:40.440]
RETURN_VALUE ===> 426.00
+++++++++++ [7] CACULATE_MUON_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001191s) +++++++++++

[2016-04-05 17:39:40.440]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_iMax_MaxCounts 
}

[2016-04-05 17:39:40.440]
RETURN_VALUE ===> 426.00
++++++++++ [8] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:40.440]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_iMax_MaxValue_spec*] 
 
}

[2016-04-05 17:39:40.440]
JUDGE_SPEC =>  value is [426.00], spec is [Item0=250 ; Item1=850 ; ], mode is [1]

[2016-04-05 17:39:40.440]
RETURN_VALUE ===> 426.00
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000882s) +++++++++++++++

[2016-04-05 17:39:40.440]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_iMax_MaxValue_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:40.440]
RETURN_VALUE ===> 426.00
+++++++++++ [10] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000025s) +++++++++++

[2016-04-05 17:39:40.440]
================ END TEST Muon_iMax_MaxValue (TestResult : PASS ; Duration : 1.557704s) ================

[2016-04-05 17:39:40.440]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_iMax_MaxValue,,,426.00,250,850,,)

[2016-04-05 17:39:40.440]
Item Name:Muon_iMax_MaxValue, [250,850]

[2016-04-05 17:39:40.440]
================================ START TEST MUON_20MA_MAXVALUE (Item91) ================================

[2016-04-05 17:39:40.440]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -c 20000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:40.440]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:40.440]
Write to ---> MOBILE , command[bl -c 20000(STRING)]

[2016-04-05 17:39:40.440]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -c 20000,2,0;return value:0!

[2016-04-05 17:39:40.440]
PostTXToUI ===> 
{
Info ==> bl -c 20000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:40.440 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:40.440]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:40.440]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007065s) +++++++++++++++++++++

[2016-04-05 17:39:40.440]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -c 20000 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:40.440]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -c 20000
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:40.440]
PostRXToUI ===> 
{
Info ==> bl -c 20000
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:40.440 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:40.440]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:40.440]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:40.440]
READ_COMMAND => Catch string between bl -c 20000 and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:40.440]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.015325s) ++++++++++++++

[2016-04-05 17:39:40.440]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 750 
}

[2016-04-05 17:39:41.441]
RETURN_VALUE ===> OK
+++++++++++++++++ [3] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.753787s) +++++++++++++++++

[2016-04-05 17:39:41.441]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> read lcm light 00015 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:41.441]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:41.441]
Write to ---> FIXTURE , command[read lcm light 00015(STRING)]

[2016-04-05 17:39:41.441]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:read lcm light 00015,2,0;return value:0!

[2016-04-05 17:39:41.441]
PostTXToUI ===> 
{
Info ==> read lcm light 00015 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:41.441 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:41.441]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:41.441]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [4] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007607s) +++++++++++++++++++++

[2016-04-05 17:39:41.441]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> read lcm light 00015 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 30 
END ==> @_@ 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:read lcm light 00015read lcm light 00015
CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:476
Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-04-05 17:39:42.442]
PostRXToUI ===> 
{
Info ==> read lcm light 00015read lcm light 00015
CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:476
Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:42.442]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:42.442]
CATCH_VALUE => Catch OK : read lcm light 00015
CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:476
Pass

[2016-04-05 17:39:42.442]
READ_COMMAND => Catch string between read lcm light 00015 and @_@ == read lcm light 00015
CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:476
Pass

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> read lcm light 00015
CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:476
Pass
++++++++++++++ [5] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.762029s) ++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_20mA 
}

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> read lcm light 00015
CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:473

CH0_DATA:476

CH0_DATA:476
Pass
++++++++++ [6] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : CACULATE_MUON_VALUE:RETURN_VALUE: ===> parameters:
{
LENGTH ==> 15 
KEY ==> Muon_20mA 
TYPE ==> MAX 
}

[2016-04-05 17:39:42.442]
GET_OBD_VALUE => Get OK : 476.00

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 476.00
+++++++++++ [7] CACULATE_MUON_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001094s) +++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_20mA_MaxCounts 
}

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 476.00
++++++++++ [8] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_20mA_MaxValue_spec*] 
 
}

[2016-04-05 17:39:42.442]
JUDGE_SPEC =>  value is [476.00], spec is [Item0=250 ; Item1=850 ; ], mode is [1]

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 476.00
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000690s) +++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_20mA_MaxValue_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 476.00
+++++++++++ [10] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++++

[2016-04-05 17:39:42.442]
================ END TEST Muon_20mA_MaxValue (TestResult : PASS ; Duration : 1.563281s) ================

[2016-04-05 17:39:42.442]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_20mA_MaxValue,,,476.00,250,850,,)

[2016-04-05 17:39:42.442]
Item Name:Muon_20mA_MaxValue, [250,850]

[2016-04-05 17:39:42.442]
============================= START TEST MUON_FLASHCURRENT_CHECK (Item92) =============================

[2016-04-05 17:39:42.442]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> strobe -c LM3539 --set FlashCurrent 80000 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:42.442]
Write to ---> MOBILE , command[strobe -c LM3539 --set FlashCurrent 80000(STRING)]

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:strobe -c LM3539 --set FlashCurrent 80000,2,0;return value:0!

[2016-04-05 17:39:42.442]
PostTXToUI ===> 
{
Info ==> strobe -c LM3539 --set FlashCurrent 80000 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:42.442]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006755s) +++++++++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:strobe -c LM3539 --set FlashCurrent 80000
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:42.442]
PostRXToUI ===> 
{
Info ==> strobe -c LM3539 --set FlashCurrent 80000
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:42.442]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:42.442]
CATCH_VALUE => Catch OK : strobe -c LM3539 --set FlashCurrent 80000

[2016-04-05 17:39:42.442]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == strobe -c LM3539 --set FlashCurrent 80000

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> strobe -c LM3539 --set FlashCurrent 80000
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020848s) ++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> strobe -c LM3539 --get FlashCurrent 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:42.442]
Write to ---> MOBILE , command[strobe -c LM3539 --get FlashCurrent(STRING)]

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:strobe -c LM3539 --get FlashCurrent,2,0;return value:0!

[2016-04-05 17:39:42.442]
PostTXToUI ===> 
{
Info ==> strobe -c LM3539 --get FlashCurrent 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:42.442]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> strobe -c LM3539 --set FlashCurrent 80000
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005897s) +++++++++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:strobe -c LM3539 --get FlashCurrent
FlashCurrent value = 79600
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:42.442]
PostRXToUI ===> 
{
Info ==> strobe -c LM3539 --get FlashCurrent
FlashCurrent value = 79600
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:42.442]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:42.442]
CATCH_VALUE => Catch OK : strobe -c LM3539 --get FlashCurrentFlashCurrent value = 79600

[2016-04-05 17:39:42.442]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == strobe -c LM3539 --get FlashCurrentFlashCurrent value = 79600

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> strobe -c LM3539 --get FlashCurrentFlashCurrent value = 79600
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022001s) ++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FlashCurrent 
}

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> strobe -c LM3539 --get FlashCurrentFlashCurrent value = 79600
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> FlashCurrent 
REGEX ==> FlashCurrent value =(.*?)$ 
}

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 79600
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000160s) +++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 79600
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_FlashCurrent_Check_spec*] 
 
}

[2016-04-05 17:39:42.442]
JUDGE_SPEC =>  value is [79600], spec is [Item0=79600 ; ], mode is [5]

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 79600
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000656s) +++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_FlashCurrent_Check_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 79600
+++++++++++ [9] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> strobe -c LM3539 -s panel --mode Flash on 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:42.442]
Write to ---> MOBILE , command[strobe -c LM3539 -s panel --mode Flash on(STRING)]

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:strobe -c LM3539 -s panel --mode Flash on,2,0;return value:0!

[2016-04-05 17:39:42.442]
PostTXToUI ===> 
{
Info ==> strobe -c LM3539 -s panel --mode Flash on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:42.442]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 79600
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005572s) ++++++++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:strobe -c LM3539 -s panel --mode Flash on
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:42.442]
PostRXToUI ===> 
{
Info ==> strobe -c LM3539 -s panel --mode Flash on
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:42.442]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:42.442]
CATCH_VALUE => Catch OK : strobe -c LM3539 -s panel --mode Flash on

[2016-04-05 17:39:42.442]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == strobe -c LM3539 -s panel --mode Flash on

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> strobe -c LM3539 -s panel --mode Flash on
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021989s) ++++++++++++++

[2016-04-05 17:39:42.442]
============= END TEST Muon_FlashCurrent_Check (TestResult : PASS ; Duration : 0.099665s) =============

[2016-04-05 17:39:42.442]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_FlashCurrent_Check,,,79600,79600,79600,,)

[2016-04-05 17:39:42.442]
Item Name:Muon_FlashCurrent_Check, <79600>

[2016-04-05 17:39:42.442]
============================== START TEST MUON_80MA_01_MAXCOUNTS (Item93) ==============================

[2016-04-05 17:39:42.442]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> read lcm light 00020 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:42.442]
Write to ---> FIXTURE , command[read lcm light 00020(STRING)]

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:read lcm light 00020,2,0;return value:0!

[2016-04-05 17:39:42.442]
PostTXToUI ===> 
{
Info ==> read lcm light 00020 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:42.442]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006444s) +++++++++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 250;strobe -c LM3539 -s panel --mode Flash on 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:42.442]
Write to ---> MOBILE , command[wait 250;strobe -c LM3539 -s panel --mode Flash on(STRING)]

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 250;strobe -c LM3539 -s panel --mode Flash on,2,0;return value:0!

[2016-04-05 17:39:42.442]
PostTXToUI ===> 
{
Info ==> wait 250;strobe -c LM3539 -s panel --mode Flash on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:42.442]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> 
+++++++++++++++++++++ [2] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007195s) +++++++++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:42.442]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 250;strobe -c LM3539 -s panel --mode Flash on
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:42.442]
PostRXToUI ===> 
{
Info ==> wait 250;strobe -c LM3539 -s panel --mode Flash on
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:42.442 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:42.442]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:42.442]
CATCH_VALUE => Catch OK : wait 250;strobe -c LM3539 -s panel --mode Flash on

[2016-04-05 17:39:42.442]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == wait 250;strobe -c LM3539 -s panel --mode Flash on

[2016-04-05 17:39:42.442]
RETURN_VALUE ===> wait 250;strobe -c LM3539 -s panel --mode Flash on
++++++++++++++ [3] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.268002s) ++++++++++++++

[2016-04-05 17:39:42.442]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> read lcm light 00020 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 30 
END ==> @_@ 
}

[2016-04-05 17:39:43.443]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:read lcm light 00020read lcm light 00020
CH0_DATA:1496

CH0_DATA:1486

CH0_DATA:1476

CH0_DATA:470

CH0_DATA:466

CH0_DATA:1493

CH0_DATA:1480

CH0_DATA:1470

CH0_DATA:1466

CH0_DATA:1106

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:473

CH0_DATA:470
Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-04-05 17:39:43.443]
PostRXToUI ===> 
{
Info ==> read lcm light 00020read lcm light 00020
CH0_DATA:1496

CH0_DATA:1486

CH0_DATA:1476

CH0_DATA:470

CH0_DATA:466

CH0_DATA:1493

CH0_DATA:1480

CH0_DATA:1470

CH0_DATA:1466

CH0_DATA:1106

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:473

CH0_DATA:470
Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:43.443 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:43.443]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:43.443]
CATCH_VALUE => Catch OK : read lcm light 00020
CH0_DATA:1496

CH0_DATA:1486

CH0_DATA:1476

CH0_DATA:470

CH0_DATA:466

CH0_DATA:1493

CH0_DATA:1480

CH0_DATA:1470

CH0_DATA:1466

CH0_DATA:1106

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:473

CH0_DATA:470
Pass

[2016-04-05 17:39:43.443]
READ_COMMAND => Catch string between read lcm light 00020 and @_@ == read lcm light 00020
CH0_DATA:1496

CH0_DATA:1486

CH0_DATA:1476

CH0_DATA:470

CH0_DATA:466

CH0_DATA:1493

CH0_DATA:1480

CH0_DATA:1470

CH0_DATA:1466

CH0_DATA:1106

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:473

CH0_DATA:470
Pass

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> read lcm light 00020
CH0_DATA:1496

CH0_DATA:1486

CH0_DATA:1476

CH0_DATA:470

CH0_DATA:466

CH0_DATA:1493

CH0_DATA:1480

CH0_DATA:1470

CH0_DATA:1466

CH0_DATA:1106

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:473

CH0_DATA:470
Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.715712s) ++++++++++++++

[2016-04-05 17:39:43.443]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_80mA_01 
}

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> read lcm light 00020
CH0_DATA:1496

CH0_DATA:1486

CH0_DATA:1476

CH0_DATA:470

CH0_DATA:466

CH0_DATA:1493

CH0_DATA:1480

CH0_DATA:1470

CH0_DATA:1466

CH0_DATA:1106

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:473

CH0_DATA:470
Pass
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:43.443]
^=^ Begin subItem : CACULATE_MUON_VALUE:RETURN_VALUE: ===> parameters:
{
LENGTH ==> 20 
KEY ==> Muon_80mA_01 
TYPE ==> MAX 
}

[2016-04-05 17:39:43.443]
GET_OBD_VALUE => Get OK : 1496.00

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> 1496.00
+++++++++++ [6] CACULATE_MUON_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001272s) +++++++++++

[2016-04-05 17:39:43.443]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_80mA_01_MaxCounts 
}

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> 1496.00
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:43.443]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_80mA_01_MaxCounts_spec*] 
 
}

[2016-04-05 17:39:43.443]
JUDGE_SPEC =>  value is [1496.00], spec is [Item0=1000 ; Item1=3000 ; ], mode is [1]

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> 1496.00
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000644s) +++++++++++++++

[2016-04-05 17:39:43.443]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_80mA_01_MaxCounts_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> 1496.00
+++++++++++ [9] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++++

[2016-04-05 17:39:43.443]
============== END TEST Muon_80mA_01_MaxCounts (TestResult : PASS ; Duration : 1.012353s) ==============

[2016-04-05 17:39:43.443]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_80mA_01_MaxCounts,,,1496.00,1000,3000,,)

[2016-04-05 17:39:43.443]
Item Name:Muon_80mA_01_MaxCounts, [1000,3000]

[2016-04-05 17:39:43.443]
============================== START TEST MUON_80MA_02_MAXCOUNTS (Item94) ==============================

[2016-04-05 17:39:43.443]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> read lcm light 00020 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:43.443]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:43.443]
Write to ---> FIXTURE , command[read lcm light 00020(STRING)]

[2016-04-05 17:39:43.443]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:read lcm light 00020,2,0;return value:0!

[2016-04-05 17:39:43.443]
PostTXToUI ===> 
{
Info ==> read lcm light 00020 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:43.443 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:43.443]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006483s) +++++++++++++++++++++

[2016-04-05 17:39:43.443]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 250;strobe -c LM3539 -s panel --mode Flash on 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:43.443]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:43.443]
Write to ---> MOBILE , command[wait 250;strobe -c LM3539 -s panel --mode Flash on(STRING)]

[2016-04-05 17:39:43.443]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 250;strobe -c LM3539 -s panel --mode Flash on,2,0;return value:0!

[2016-04-05 17:39:43.443]
PostTXToUI ===> 
{
Info ==> wait 250;strobe -c LM3539 -s panel --mode Flash on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:43.443 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:43.443]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> 
+++++++++++++++++++++ [2] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006792s) +++++++++++++++++++++

[2016-04-05 17:39:43.443]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:43.443]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 250;strobe -c LM3539 -s panel --mode Flash on
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:43.443]
PostRXToUI ===> 
{
Info ==> wait 250;strobe -c LM3539 -s panel --mode Flash on
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:43.443 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:43.443]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:43.443]
CATCH_VALUE => Catch OK : wait 250;strobe -c LM3539 -s panel --mode Flash on

[2016-04-05 17:39:43.443]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == wait 250;strobe -c LM3539 -s panel --mode Flash on

[2016-04-05 17:39:43.443]
RETURN_VALUE ===> wait 250;strobe -c LM3539 -s panel --mode Flash on
++++++++++++++ [3] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.271184s) ++++++++++++++

[2016-04-05 17:39:43.443]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> read lcm light 00020 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 30 
END ==> @_@ 
}

[2016-04-05 17:39:44.444]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:read lcm light 00020read lcm light 00020
CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:1500

CH0_DATA:1490

CH0_DATA:1476

CH0_DATA:1470

CH0_DATA:500

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470
Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-04-05 17:39:44.444]
PostRXToUI ===> 
{
Info ==> read lcm light 00020read lcm light 00020
CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:1500

CH0_DATA:1490

CH0_DATA:1476

CH0_DATA:1470

CH0_DATA:500

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470
Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:44.444 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:44.444]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:44.444]
CATCH_VALUE => Catch OK : read lcm light 00020
CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:1500

CH0_DATA:1490

CH0_DATA:1476

CH0_DATA:1470

CH0_DATA:500

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470
Pass

[2016-04-05 17:39:44.444]
READ_COMMAND => Catch string between read lcm light 00020 and @_@ == read lcm light 00020
CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:1500

CH0_DATA:1490

CH0_DATA:1476

CH0_DATA:1470

CH0_DATA:500

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470
Pass

[2016-04-05 17:39:44.444]
RETURN_VALUE ===> read lcm light 00020
CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:1500

CH0_DATA:1490

CH0_DATA:1476

CH0_DATA:1470

CH0_DATA:500

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470
Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.712818s) ++++++++++++++

[2016-04-05 17:39:44.444]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_80mA_02 
}

[2016-04-05 17:39:44.444]
RETURN_VALUE ===> read lcm light 00020
CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:473

CH0_DATA:1500

CH0_DATA:1490

CH0_DATA:1476

CH0_DATA:1470

CH0_DATA:500

CH0_DATA:463

CH0_DATA:466

CH0_DATA:466

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470

CH0_DATA:470
Pass
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:44.444]
^=^ Begin subItem : CACULATE_MUON_VALUE:RETURN_VALUE: ===> parameters:
{
LENGTH ==> 20 
KEY ==> Muon_80mA_02 
TYPE ==> MAX 
}

[2016-04-05 17:39:44.444]
GET_OBD_VALUE => Get OK : 1500.00

[2016-04-05 17:39:44.444]
RETURN_VALUE ===> 1500.00
+++++++++++ [6] CACULATE_MUON_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001246s) +++++++++++

[2016-04-05 17:39:44.444]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_80mA_02_MaxCounts 
}

[2016-04-05 17:39:44.444]
RETURN_VALUE ===> 1500.00
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:44.444]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_80mA_02_MaxCounts_spec*] 
 
}

[2016-04-05 17:39:44.444]
JUDGE_SPEC =>  value is [1500.00], spec is [Item0=1000 ; Item1=3000 ; ], mode is [1]

[2016-04-05 17:39:44.444]
RETURN_VALUE ===> 1500.00
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000613s) +++++++++++++++

[2016-04-05 17:39:44.444]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_80mA_02_MaxCounts_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:44.444]
RETURN_VALUE ===> 1500.00
+++++++++++ [9] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000019s) +++++++++++

[2016-04-05 17:39:44.444]
============== END TEST Muon_80mA_02_MaxCounts (TestResult : PASS ; Duration : 1.011115s) ==============

[2016-04-05 17:39:44.444]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_80mA_02_MaxCounts,,,1500.00,1000,3000,,)

[2016-04-05 17:39:44.444]
Item Name:Muon_80mA_02_MaxCounts, [1000,3000]

[2016-04-05 17:39:44.444]
================================ START TEST MUON_80MA_MAXVALUE (Item95) ================================

[2016-04-05 17:39:44.444]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -n 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:44.444]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:44.444]
Write to ---> MOBILE , command[bl -n(STRING)]

[2016-04-05 17:39:44.444]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -n,2,0;return value:0!

[2016-04-05 17:39:44.444]
PostTXToUI ===> 
{
Info ==> bl -n 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:44.444 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:44.444]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:44.444]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006308s) +++++++++++++++++++++

[2016-04-05 17:39:44.444]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -n 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -n
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> bl -n
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between bl -n and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.511322s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> (([*Muon_80mA_01_MaxCounts*])+([*Muon_80mA_02_MaxCounts*]))/2 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 1498.00
+++++++++++++++ [3] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000191s) +++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_80mA_AvgCounts 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 1498.00
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_80mA_MaxValue_spec*] 
 
}

[2016-04-05 17:39:46.446]
JUDGE_SPEC =>  value is [1498.00], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 1498.00
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000610s) +++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_80mA_MaxValue_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 1498.00
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000022s) +++++++++++

[2016-04-05 17:39:46.446]
================ END TEST Muon_80mA_MaxValue (TestResult : PASS ; Duration : 1.526845s) ================

[2016-04-05 17:39:46.446]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_80mA_MaxValue,,,1498.00,NA,NA,,)

[2016-04-05 17:39:46.446]
Item Name:Muon_80mA_MaxValue, {NA}

[2016-04-05 17:39:46.446]
================================ START TEST MUON_STROBE_RATIO (Item96) ================================

[2016-04-05 17:39:46.446]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*Muon_80mA_AvgCounts*])/([*Muon_20mA_MaxCounts*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 3.15
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000269s) +++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Muon_Strobe_Ratio 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 3.15
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_Strobe_Ratio_spec*] 
 
}

[2016-04-05 17:39:46.446]
JUDGE_SPEC =>  value is [3.15], spec is [Item0=2.8 ; Item1=3.6 ; ], mode is [1]

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 3.15
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001078s) +++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_Strobe_Ratio_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 3.15
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:39:46.446]
================ END TEST Muon_Strobe_Ratio (TestResult : PASS ; Duration : 0.008492s) ================

[2016-04-05 17:39:46.446]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_Strobe_Ratio,,,3.15,2.8,3.6,,)

[2016-04-05 17:39:46.446]
Item Name:Muon_Strobe_Ratio, [2.8,3.6]

[2016-04-05 17:39:46.446]
============================== START TEST MUON_IMAX_STROBE_RATIO (Item97) ==============================

[2016-04-05 17:39:46.446]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*Muon_80mA_AvgCounts*])/([*Muon_iMax_MaxCounts*]) 
DecimalPlaces ==> 2 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 3.52
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000248s) +++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon_iMax_Strobe_Ratio_spec*] 
 
}

[2016-04-05 17:39:46.446]
JUDGE_SPEC =>  value is [3.52], spec is [Item0=2.8 ; Item1=4.0 ; ], mode is [1]

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 3.52
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000776s) +++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon_iMax_Strobe_Ratio_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 3.52
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:46.446]
============== END TEST Muon_iMax_Strobe_Ratio (TestResult : PASS ; Duration : 0.005877s) ==============

[2016-04-05 17:39:46.446]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon_iMax_Strobe_Ratio,,,3.52,2.8,4.0,,)

[2016-04-05 17:39:46.446]
Item Name:Muon_iMax_Strobe_Ratio, [2.8,4.0]

[2016-04-05 17:39:46.446]
=============================== START TEST MUON FAULT REGISTER (Item98) ===============================

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -h 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[bl -h(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -h,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> bl -h 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006239s) +++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -h 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -h
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> bl -h
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between bl -h and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.016852s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -d 0 0x62 0x17 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[i2c -d 0 0x62 0x17 1(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -d 0 0x62 0x17 1,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> i2c -d 0 0x62 0x17 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006128s) +++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -d 0 0x62 0x17 1 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -d 0 0x62 0x17 1
Reading 1 bytes from register offset 0x17 into 0x79CC5618, buffer read:	
Data:  0x02 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> i2c -d 0 0x62 0x17 1
Reading 1 bytes from register offset 0x17 into 0x79CC5618, buffer read:	
Data:  0x02 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x17 into 0x79CC5618, buffer read:	Data:  0x02

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between i2c -d 0 0x62 0x17 1 and [001D38CC:3020213A] :-) == Reading 1 bytes from register offset 0x17 into 0x79CC5618, buffer read:	Data:  0x02

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x17 into 0x79CC5618, buffer read:	Data:  0x02
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026118s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Fault_Register 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x17 into 0x79CC5618, buffer read:	Data:  0x02
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -m 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[bl -m(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -m,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> bl -m 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x17 into 0x79CC5618, buffer read:	Data:  0x02
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005649s) +++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -m 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -m
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> bl -m
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between bl -m and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> OK
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.005024s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Fault_Register 
REGEX ==> Data: *?(0x.{2}) 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 0x02
+++++++++++++++ [8] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000201s) +++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon Fault Register_spec*] 
 
}

[2016-04-05 17:39:46.446]
JUDGE_SPEC =>  value is [0x02], spec is [Item0=0x02 ; ], mode is [5]

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 0x02
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000627s) +++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Muon Fault Register_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 0x02
+++++++++++ [10] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++++

[2016-04-05 17:39:46.446]
=============== END TEST Muon Fault Register (TestResult : PASS ; Duration : 0.081728s) ===============

[2016-04-05 17:39:46.446]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon Fault Register,,,0x02,0x02,0x02,,)

[2016-04-05 17:39:46.446]
Item Name:Muon Fault Register, <0x02>

[2016-04-05 17:39:46.446]
=========================== START TEST HAWKING TEST PEAK MAGNITUDE (Item99) ===========================

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open Hawking Led F500 D10 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> FIXTURE , command[Open Hawking Led F500 D10(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open Hawking Led F500 D10,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> Open Hawking Led F500 D10 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007224s) +++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Open Hawking Led F500 D10 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open Hawking Led F500 D10
Open Hawking Led F500 D10 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> Open Hawking Led F500 D10
Open Hawking Led F500 D10 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Open Hawking Led F500 D10 Pass

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between Open Hawking Led F500 D10 and @_@ == Open Hawking Led F500 D10 Pass

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Open Hawking Led F500 D10 Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021948s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio --freebufs all 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[processaudio --freebufs all(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio --freebufs all,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> processaudio --freebufs all 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Open Hawking Led F500 D10 Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005727s) +++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio --freebufs all 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> processaudio --freebufs all
Delete all buffers in the system...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Delete all buffers in the system...OK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between processaudio --freebufs all and [001D38CC:3020213A] :-) == Delete all buffers in the system...OK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Delete all buffers in the system...OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020902s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --reset 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[audio --reset(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --reset,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> audio --reset 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Delete all buffers in the system...OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005951s) +++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --reset 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between audio --reset and [001D38CC:3020213A] :-) == Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.155192s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --resetblock codec 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[audio --resetblock codec(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --resetblock codec,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> audio --resetblock codec 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Resetting arc...Speaker already powered off.Resetting audmux...Resetting baseband...Resetting bluetooth...Resetting botspeaker...Speaker already powered off.Resetting codec...Resetting fpga...Resetting mikeybus...Resetting socmca...Resetting topspeaker...OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005880s) +++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --resetblock codec 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --resetblock codec
Resetting codec...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> audio --resetblock codec
Resetting codec...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Resetting codec...OK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between audio --resetblock codec and [001D38CC:3020213A] :-) == Resetting codec...OK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Resetting codec...OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.054811s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> audio --resetblock socmca 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[audio --resetblock socmca(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:audio --resetblock socmca,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> audio --resetblock socmca 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Resetting codec...OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005558s) +++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> audio --resetblock socmca 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:audio --resetblock socmca
Resetting socmca...
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> audio --resetblock socmca
Resetting socmca...
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Resetting socmca...OK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between audio --resetblock socmca and [001D38CC:3020213A] :-) == Resetting socmca...OK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Resetting socmca...OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022492s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> routeaudio -b codec -i ain7 -o xsp[0] -r 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[routeaudio -b codec -i ain7 -o xsp[0] -r(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:routeaudio -b codec -i ain7 -o xsp[0] -r,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> routeaudio -b codec -i ain7 -o xsp[0] -r 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Resetting socmca...OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005635s) ++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> routeaudio -b codec -i ain7 -o xsp[0] -r 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:routeaudio -b codec -i ain7 -o xsp[0] -r
Routing from codec.ain7[l] --> codec.xsp[l]
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> routeaudio -b codec -i ain7 -o xsp[0] -r
Routing from codec.ain7[l] --> codec.xsp[l]
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Routing from codec.ain7[l] --> codec.xsp[l]OK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between routeaudio -b codec -i ain7 -o xsp[0] -r and [001D38CC:3020213A] :-) == Routing from codec.ain7[l] --> codec.xsp[l]OK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Routing from codec.ain7[l] --> codec.xsp[l]OK
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020867s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuset --ldo 9 --on 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[pmuset --ldo 9 --on(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuset --ldo 9 --on,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> pmuset --ldo 9 --on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Routing from codec.ain7[l] --> codec.xsp[l]OK
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005420s) ++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> pmuset --ldo 9 --on 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuset --ldo 9 --on
Turning LDO On
Done
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> pmuset --ldo 9 --on
Turning LDO On
Done
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Turning LDO OnDone

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between pmuset --ldo 9 --on and [001D38CC:3020213A] :-) == Turning LDO OnDone

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Turning LDO OnDone
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023237s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> setvol -b codec -n hs-adc-preamp -v 0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[setvol -b codec -n hs-adc-preamp -v 0(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:setvol -b codec -n hs-adc-preamp -v 0,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> setvol -b codec -n hs-adc-preamp -v 0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Turning LDO OnDone
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005718s) ++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> setvol -b codec -n hs-adc-preamp -v 0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:setvol -b codec -n hs-adc-preamp -v 0
Set 'hs-adc-preamp' volume to +0 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> setvol -b codec -n hs-adc-preamp -v 0
Set 'hs-adc-preamp' volume to +0 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Set 'hs-adc-preamp' volume to +0 dBOK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between setvol -b codec -n hs-adc-preamp -v 0 and [001D38CC:3020213A] :-) == Set 'hs-adc-preamp' volume to +0 dBOK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Set 'hs-adc-preamp' volume to +0 dBOK
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022894s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> setvol -b codec -n hs-adc-pga -v 0 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[setvol -b codec -n hs-adc-pga -v 0(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:setvol -b codec -n hs-adc-pga -v 0,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> setvol -b codec -n hs-adc-pga -v 0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Set 'hs-adc-preamp' volume to +0 dBOK
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006233s) ++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> setvol -b codec -n hs-adc-pga -v 0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:setvol -b codec -n hs-adc-pga -v 0
Set 'hs-adc-pga' volume to +0 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:46.446]
PostRXToUI ===> 
{
Info ==> setvol -b codec -n hs-adc-pga -v 0
Set 'hs-adc-pga' volume to +0 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:46.446]
CATCH_VALUE => Catch OK : Set 'hs-adc-pga' volume to +0 dBOK

[2016-04-05 17:39:46.446]
READ_COMMAND => Catch string between setvol -b codec -n hs-adc-pga -v 0 and [001D38CC:3020213A] :-) == Set 'hs-adc-pga' volume to +0 dBOK

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Set 'hs-adc-pga' volume to +0 dBOK
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021358s) ++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> recordaudio --block socmca --port ap-mca4 --len 1000 --channels 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:46.446]
Write to ---> MOBILE , command[recordaudio --block socmca --port ap-mca4 --len 1000 --channels 1(STRING)]

[2016-04-05 17:39:46.446]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:recordaudio --block socmca --port ap-mca4 --len 1000 --channels 1,2,0;return value:0!

[2016-04-05 17:39:46.446]
PostTXToUI ===> 
{
Info ==> recordaudio --block socmca --port ap-mca4 --len 1000 --channels 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:46.446 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:46.446]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:46.446]
RETURN_VALUE ===> Set 'hs-adc-pga' volume to +0 dBOK
++++++++++++++++++++ [19] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005676s) ++++++++++++++++++++

[2016-04-05 17:39:46.446]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> recordaudio --block socmca --port ap-mca4 --len 1000 --channels 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:recordaudio --block socmca --port ap-mca4 --len 1000 --channels 1
DataFormat = 00000002
Configuring 'socmca' to record 48Khz, 16-bit, 1 channels of audio data for 1000mS...
Requesting new buffer...
Using buffer 'record0'
Recording audio...
Done!
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:47.447]
PostRXToUI ===> 
{
Info ==> recordaudio --block socmca --port ap-mca4 --len 1000 --channels 1
DataFormat = 00000002
Configuring 'socmca' to record 48Khz, 16-bit, 1 channels of audio data for 1000mS...
Requesting new buffer...
Using buffer 'record0'
Recording audio...
Done!
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:47.447 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:47.447]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:47.447]
CATCH_VALUE => Catch OK : DataFormat = 00000002Configuring 'socmca' to record 48Khz, 16-bit, 1 channels of audio data for 1000mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK

[2016-04-05 17:39:47.447]
READ_COMMAND => Catch string between recordaudio --block socmca --port ap-mca4 --len 1000 --channels 1 and [001D38CC:3020213A] :-) == DataFormat = 00000002Configuring 'socmca' to record 48Khz, 16-bit, 1 channels of audio data for 1000mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> DataFormat = 00000002Configuring 'socmca' to record 48Khz, 16-bit, 1 channels of audio data for 1000mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK
++++++++++++++ [20] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.042923s) ++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> processaudio -p fft -i record0 -o "--skipSamples 10000 --minHz 10 --maxHz 990 --peakBinWidth 4 --windowNorm true" 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:47.447]
Write to ---> MOBILE , command[processaudio -p fft -i record0 -o "--skipSamples 10000 --minHz 10 --maxHz 990 --peakBinWidth 4 --windowNorm true"(STRING)]

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:processaudio -p fft -i record0 -o "--skipSamples 10000 --minHz 10 --maxHz 990 --peakBinWidth 4 --windowNorm true",2,0;return value:0!

[2016-04-05 17:39:47.447]
PostTXToUI ===> 
{
Info ==> processaudio -p fft -i record0 -o "--skipSamples 10000 --minHz 10 --maxHz 990 --peakBinWidth 4 --windowNorm true" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:47.447 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:47.447]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> DataFormat = 00000002Configuring 'socmca' to record 48Khz, 16-bit, 1 channels of audio data for 1000mS...Requesting new buffer...Using buffer 'record0'Recording audio...Done!OK
++++++++++++++++++++ [21] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006672s) ++++++++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> processaudio -p fft -i record0 -o "--skipSamples 10000 --minHz 10 --maxHz 990 --peakBinWidth 4 --windowNorm true" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:processaudio -p fft -i record0 -o "--skipSamples 10000 --minHz 10 --maxHz 990 --peakBinWidth 4 --windowNorm true"
Number of samples does not equal power of 2 - truncating to 32768 samples...
Channel 0:
Using 32768 bins, Peak Bin= 341; Peak Magnitude=0.074922 FS; Frequency:  499.511718 +/- 2.929687 Hz
DC Magnitude=0.000109 FS
Signal Bins=9
SINAD=61.296310 dBFS
Peak Power: -22.507727 dBFS
Signal Power: -22.086640 dBFS
Noise Power: -83.382951 dBFS
Average Noise PSD: -108.568090 dBFS
Noise Margin: 86.060363 dBFS
THD+N: -1.349218 dB
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:47.447]
PostRXToUI ===> 
{
Info ==> processaudio -p fft -i record0 -o "--skipSamples 10000 --minHz 10 --maxHz 990 --peakBinWidth 4 --windowNorm true"
Number of samples does not equal power of 2 - truncating to 32768 samples...
Channel 0:
Using 32768 bins, Peak Bin= 341; Peak Magnitude=0.074922 FS; Frequency:  499.511718 +/- 2.929687 Hz
DC Magnitude=0.000109 FS
Signal Bins=9
SINAD=61.296310 dBFS
Peak Power: -22.507727 dBFS
Signal Power: -22.086640 dBFS
Noise Power: -83.382951 dBFS
Average Noise PSD: -108.568090 dBFS
Noise Margin: 86.060363 dBFS
THD+N: -1.349218 dB
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:47.447 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:47.447]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:47.447]
CATCH_VALUE => Catch OK : Number of samples does not equal power of 2 - truncating to 32768 samples...
Channel 0:
Using 32768 bins, Peak Bin= 341; Peak Magnitude=0.074922 FS; Frequency:  499.511718 +/- 2.929687 Hz
DC Magnitude=0.000109 FS
Signal Bins=9
SINAD=61.296310 dBFS
Peak Power: -22.507727 dBFS
Signal Power: -22.086640 dBFS
Noise Power: -83.382951 dBFS
Average Noise PSD: -108.568090 dBFS
Noise Margin: 86.060363 dBFS
THD+N: -1.349218 dB
OK

[2016-04-05 17:39:47.447]
READ_COMMAND => Catch string between processaudio -p fft -i record0 -o "--skipSamples 10000 --minHz 10 --maxHz 990 --peakBinWidth 4 --windowNorm true" and [001D38CC:3020213A] :-) == Number of samples does not equal power of 2 - truncating to 32768 samples...
Channel 0:
Using 32768 bins, Peak Bin= 341; Peak Magnitude=0.074922 FS; Frequency:  499.511718 +/- 2.929687 Hz
DC Magnitude=0.000109 FS
Signal Bins=9
SINAD=61.296310 dBFS
Peak Power: -22.507727 dBFS
Signal Power: -22.086640 dBFS
Noise Power: -83.382951 dBFS
Average Noise PSD: -108.568090 dBFS
Noise Margin: 86.060363 dBFS
THD+N: -1.349218 dB
OK

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 32768 samples...
Channel 0:
Using 32768 bins, Peak Bin= 341; Peak Magnitude=0.074922 FS; Frequency:  499.511718 +/- 2.929687 Hz
DC Magnitude=0.000109 FS
Signal Bins=9
SINAD=61.296310 dBFS
Peak Power: -22.507727 dBFS
Signal Power: -22.086640 dBFS
Noise Power: -83.382951 dBFS
Average Noise PSD: -108.568090 dBFS
Noise Margin: 86.060363 dBFS
THD+N: -1.349218 dB
OK
++++++++++++++ [22] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.092315s) ++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 32768 samples...
Channel 0:
Using 32768 bins, Peak Bin= 341; Peak Magnitude=0.074922 FS; Frequency:  499.511718 +/- 2.929687 Hz
DC Magnitude=0.000109 FS
Signal Bins=9
SINAD=61.296310 dBFS
Peak Power: -22.507727 dBFS
Signal Power: -22.086640 dBFS
Noise Power: -83.382951 dBFS
Average Noise PSD: -108.568090 dBFS
Noise Margin: 86.060363 dBFS
THD+N: -1.349218 dB
OK
++++++++++ [23] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuset --ldo 9 --off 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:47.447]
Write to ---> MOBILE , command[pmuset --ldo 9 --off(STRING)]

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuset --ldo 9 --off,2,0;return value:0!

[2016-04-05 17:39:47.447]
PostTXToUI ===> 
{
Info ==> pmuset --ldo 9 --off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:47.447 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:47.447]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> Number of samples does not equal power of 2 - truncating to 32768 samples...
Channel 0:
Using 32768 bins, Peak Bin= 341; Peak Magnitude=0.074922 FS; Frequency:  499.511718 +/- 2.929687 Hz
DC Magnitude=0.000109 FS
Signal Bins=9
SINAD=61.296310 dBFS
Peak Power: -22.507727 dBFS
Signal Power: -22.086640 dBFS
Noise Power: -83.382951 dBFS
Average Noise PSD: -108.568090 dBFS
Noise Margin: 86.060363 dBFS
THD+N: -1.349218 dB
OK
++++++++++++++++++++ [24] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005406s) ++++++++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> pmuset --ldo 9 --off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuset --ldo 9 --off
Turning LDO Off
Done
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:39:47.447]
PostRXToUI ===> 
{
Info ==> pmuset --ldo 9 --off
Turning LDO Off
Done
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:47.447 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:47.447]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:47.447]
CATCH_VALUE => Catch OK : Turning LDO OffDone

[2016-04-05 17:39:47.447]
READ_COMMAND => Catch string between pmuset --ldo 9 --off and [001D38CC:3020213A] :-) == Turning LDO OffDone

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> Turning LDO OffDone
++++++++++++++ [25] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021329s) ++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close Hawking LED 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:47.447]
Write to ---> FIXTURE , command[Close Hawking LED(STRING)]

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close Hawking LED,2,0;return value:0!

[2016-04-05 17:39:47.447]
PostTXToUI ===> 
{
Info ==> Close Hawking LED 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:47.447 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:47.447]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> Turning LDO OffDone
++++++++++++++++++++ [26] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005628s) ++++++++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Close Hawking LED 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:47.447]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close Hawking LED
Close Hawking LED Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:47.447]
PostRXToUI ===> 
{
Info ==> Close Hawking LED
Close Hawking LED Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:47.447 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:47.447]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:47.447]
CATCH_VALUE => Catch OK : Close Hawking LED Pass

[2016-04-05 17:39:47.447]
READ_COMMAND => Catch string between Close Hawking LED and @_@ == Close Hawking LED Pass

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> Close Hawking LED Pass
++++++++++++++ [27] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026361s) ++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> Peak Magnitude=(.*?)FS 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 0.074922
++++++++++++++ [28] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000228s) ++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test Peak Magnitude_spec*] 
 
}

[2016-04-05 17:39:47.447]
JUDGE_SPEC =>  value is [0.074922], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 0.074922
+++++++++++++++ [29] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000600s) +++++++++++++++

[2016-04-05 17:39:47.447]
=========== END TEST Hawking Test Peak Magnitude (TestResult : PASS ; Duration : 1.664316s) ===========

[2016-04-05 17:39:47.447]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test Peak Magnitude,,,0.074922,NA,NA,,)

[2016-04-05 17:39:47.447]
Item Name:Hawking Test Peak Magnitude, {NA}

[2016-04-05 17:39:47.447]
============================= START TEST HAWKING TEST FREQUENCY (Item100) =============================

[2016-04-05 17:39:47.447]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> Frequency:(.*?) *?\+ 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 499.511718
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000294s) +++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test Frequency_spec*] 
 
}

[2016-04-05 17:39:47.447]
JUDGE_SPEC =>  value is [499.511718], spec is [Item0=485 ; Item1=515 ; ], mode is [1]

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 499.511718
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000773s) +++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test Frequency_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 499.511718
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:47.447]
============== END TEST Hawking Test Frequency (TestResult : PASS ; Duration : 0.005786s) ==============

[2016-04-05 17:39:47.447]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test Frequency,,,499.511718,485,515,Hz,)

[2016-04-05 17:39:47.447]
Item Name:Hawking Test Frequency, [485,515]

[2016-04-05 17:39:47.447]
============================ START TEST HAWKING TEST DC MAGNITUDE (Item101) ============================

[2016-04-05 17:39:47.447]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> DC Magnitude=(.*?)FS 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 0.000109
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000320s) +++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test DC Magnitude_spec*] 
 
}

[2016-04-05 17:39:47.447]
JUDGE_SPEC =>  value is [0.000109], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 0.000109
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000803s) +++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test DC Magnitude_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 0.000109
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000029s) +++++++++++

[2016-04-05 17:39:47.447]
============ END TEST Hawking Test DC Magnitude (TestResult : PASS ; Duration : 0.006261s) ============

[2016-04-05 17:39:47.447]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test DC Magnitude,,,0.000109,NA,NA,FS,)

[2016-04-05 17:39:47.447]
Item Name:Hawking Test DC Magnitude, {NA}

[2016-04-05 17:39:47.447]
=============================== START TEST HAWKING TEST SINAD (Item102) ===============================

[2016-04-05 17:39:47.447]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> SINAD=(.*?)dBFS 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 61.296310
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000283s) +++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test SINAD_spec*] 
 
}

[2016-04-05 17:39:47.447]
JUDGE_SPEC =>  value is [61.296310], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 61.296310
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000757s) +++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test SINAD_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> 61.296310
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:47.447]
================ END TEST Hawking Test SINAD (TestResult : PASS ; Duration : 0.005841s) ================

[2016-04-05 17:39:47.447]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test SINAD,,,61.296310,NA,NA,dBFS,)

[2016-04-05 17:39:47.447]
Item Name:Hawking Test SINAD, {NA}

[2016-04-05 17:39:47.447]
============================= START TEST HAWKING TEST PEAK POWER (Item103) =============================

[2016-04-05 17:39:47.447]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> Peak Power:(.*?)dBFS 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> -22.507727
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000288s) +++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test Peak Power_spec*] 
 
}

[2016-04-05 17:39:47.447]
JUDGE_SPEC =>  value is [-22.507727], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> -22.507727
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000783s) +++++++++++++++

[2016-04-05 17:39:47.447]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test Peak Power_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:47.447]
RETURN_VALUE ===> -22.507727
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:47.447]
============= END TEST Hawking Test Peak Power (TestResult : PASS ; Duration : 0.005938s) =============

[2016-04-05 17:39:47.447]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test Peak Power,,,-22.507727,NA,NA,dBFS,)

[2016-04-05 17:39:47.447]
Item Name:Hawking Test Peak Power, {NA}

[2016-04-05 17:39:48.448]
============================ START TEST HAWKING TEST SIGNAL POWER (Item104) ============================

[2016-04-05 17:39:48.448]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> Signal Power:(.*?)dBFS 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -22.086640
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000317s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test Signal Power_spec*] 
 
}

[2016-04-05 17:39:48.448]
JUDGE_SPEC =>  value is [-22.086640], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -22.086640
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000771s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test Signal Power_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -22.086640
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:48.448]
============ END TEST Hawking Test Signal Power (TestResult : PASS ; Duration : 0.005883s) ============

[2016-04-05 17:39:48.448]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test Signal Power,,,-22.086640,NA,NA,dBFS,)

[2016-04-05 17:39:48.448]
Item Name:Hawking Test Signal Power, {NA}

[2016-04-05 17:39:48.448]
============================ START TEST HAWKING TEST NOISE POWER (Item105) ============================

[2016-04-05 17:39:48.448]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> Noise Power:(.*?)dBFS 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -83.382951
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000286s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test Noise Power_spec*] 
 
}

[2016-04-05 17:39:48.448]
JUDGE_SPEC =>  value is [-83.382951], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -83.382951
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000782s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test Noise Power_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -83.382951
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:48.448]
============= END TEST Hawking Test Noise Power (TestResult : PASS ; Duration : 0.005898s) =============

[2016-04-05 17:39:48.448]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test Noise Power,,,-83.382951,NA,NA,dBFS,)

[2016-04-05 17:39:48.448]
Item Name:Hawking Test Noise Power, {NA}

[2016-04-05 17:39:48.448]
========================= START TEST HAWKING TEST AVERAGE NOISE PSD (Item106) =========================

[2016-04-05 17:39:48.448]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> Average Noise PSD:(.*?)dBFS 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -108.568090
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000358s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test Average Noise PSD_spec*] 
 
}

[2016-04-05 17:39:48.448]
JUDGE_SPEC =>  value is [-108.568090], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -108.568090
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000833s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test Average Noise PSD_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -108.568090
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:48.448]
========== END TEST Hawking Test Average Noise PSD (TestResult : PASS ; Duration : 0.006052s) ==========

[2016-04-05 17:39:48.448]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test Average Noise PSD,,,-108.568090,NA,NA,dBFS,)

[2016-04-05 17:39:48.448]
Item Name:Hawking Test Average Noise PSD, {NA}

[2016-04-05 17:39:48.448]
============================ START TEST HAWKING TEST NOISE MARGIN (Item107) ============================

[2016-04-05 17:39:48.448]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> Noise Margin:(.*?)dBFS 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> 86.060363
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000377s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test Noise Margin_spec*] 
 
}

[2016-04-05 17:39:48.448]
JUDGE_SPEC =>  value is [86.060363], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> 86.060363
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000748s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test Noise Margin_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> 86.060363
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:39:48.448]
============ END TEST Hawking Test Noise Margin (TestResult : PASS ; Duration : 0.005813s) ============

[2016-04-05 17:39:48.448]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test Noise Margin,,,86.060363,NA,NA,dBFS,)

[2016-04-05 17:39:48.448]
Item Name:Hawking Test Noise Margin, {NA}

[2016-04-05 17:39:48.448]
=============================== START TEST HAWKING TEST THD+N (Item108) ===============================

[2016-04-05 17:39:48.448]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Hawking 
REGEX ==> THD\+N:(.*?)dB 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -1.349218
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000285s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Hawking Test THD+N_spec*] 
 
}

[2016-04-05 17:39:48.448]
JUDGE_SPEC =>  value is [-1.349218], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -1.349218
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000796s) +++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Hawking Test THD+N_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> -1.349218
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:39:48.448]
================ END TEST Hawking Test THD+N (TestResult : PASS ; Duration : 0.005790s) ================

[2016-04-05 17:39:48.448]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Hawking Test THD+N,,,-1.349218,NA,NA,dB,)

[2016-04-05 17:39:48.448]
Item Name:Hawking Test THD+N, {NA}

[2016-04-05 17:39:48.448]
================================= START TEST NEON1 REVISION (Item109) =================================

[2016-04-05 17:39:48.448]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:48.448]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:48.448]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-04-05 17:39:48.448]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-04-05 17:39:48.448]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:48.448 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:48.448]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006380s) +++++++++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --exit 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:48.448]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:48.448]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:48.448 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:48.448]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:48.448]
CATCH_VALUE => Catch OK : RunExitPass

[2016-04-05 17:39:48.448]
READ_COMMAND => Catch string between camisp --exit and [001D38CC:3020213A] :-) == RunExitPass

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> RunExitPass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.122165s) ++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --find 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:48.448]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:48.448]
Write to ---> MOBILE , command[camisp --find(STRING)]

[2016-04-05 17:39:48.448]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --find,2,0;return value:0!

[2016-04-05 17:39:48.448]
PostTXToUI ===> 
{
Info ==> camisp --find 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:48.448 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:48.448]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:48.448]
RETURN_VALUE ===> RunExitPass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005528s) +++++++++++++++++++++

[2016-04-05 17:39:48.448]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --find 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --find
found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:49.449]
PostRXToUI ===> 
{
Info ==> camisp --find
found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:49.449 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:49.449]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:49.449]
CATCH_VALUE => Catch OK : found 2 sensors :  pick number 0, front  detected pick number 2, back  detected Pass

[2016-04-05 17:39:49.449]
READ_COMMAND => Catch string between camisp --find and [001D38CC:3020213A] :-) == found 2 sensors :  pick number 0, front  detected pick number 2, back  detected Pass

[2016-04-05 17:39:49.449]
RETURN_VALUE ===> found 2 sensors :  pick number 0, front  detected pick number 2, back  detected Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.997959s) ++++++++++++++

[2016-04-05 17:39:49.449]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --pick back 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:49.449]
Write to ---> MOBILE , command[camisp --pick back(STRING)]

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --pick back,2,0;return value:0!

[2016-04-05 17:39:49.449]
PostTXToUI ===> 
{
Info ==> camisp --pick back 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:49.449 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:49.449]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:49.449]
RETURN_VALUE ===> found 2 sensors :  pick number 0, front  detected pick number 2, back  detected Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005569s) +++++++++++++++++++++

[2016-04-05 17:39:49.449]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --pick back 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --pick back
picked : back 
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:49.449]
PostRXToUI ===> 
{
Info ==> camisp --pick back
picked : back 
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:49.449 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:49.449]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:49.449]
CATCH_VALUE => Catch OK : picked : back Pass

[2016-04-05 17:39:49.449]
READ_COMMAND => Catch string between camisp --pick back and [001D38CC:3020213A] :-) == picked : back Pass

[2016-04-05 17:39:49.449]
RETURN_VALUE ===> picked : back Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023380s) ++++++++++++++

[2016-04-05 17:39:49.449]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --on 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:49.449]
Write to ---> MOBILE , command[camisp --on(STRING)]

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --on,2,0;return value:0!

[2016-04-05 17:39:49.449]
PostTXToUI ===> 
{
Info ==> camisp --on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:49.449 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:49.449]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:49.449]
RETURN_VALUE ===> picked : back Pass
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005908s) +++++++++++++++++++++

[2016-04-05 17:39:49.449]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --on 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --on
RunOn 0 0 20
Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:49.449]
PostRXToUI ===> 
{
Info ==> camisp --on
RunOn 0 0 20
Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:49.449 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:49.449]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:49.449]
CATCH_VALUE => Catch OK : RunOn 0 0 20Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass

[2016-04-05 17:39:49.449]
READ_COMMAND => Catch string between camisp --on and [001D38CC:3020213A] :-) == RunOn 0 0 20Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass

[2016-04-05 17:39:49.449]
RETURN_VALUE ===> RunOn 0 0 20Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.162861s) ++++++++++++++

[2016-04-05 17:39:49.449]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --preview on 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:49.449]
Write to ---> MOBILE , command[camisp --preview on(STRING)]

[2016-04-05 17:39:49.449]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --preview on,2,0;return value:0!

[2016-04-05 17:39:49.449]
PostTXToUI ===> 
{
Info ==> camisp --preview on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:49.449 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:49.449]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:49.449]
RETURN_VALUE ===> RunOn 0 0 20Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005727s) +++++++++++++++++++++

[2016-04-05 17:39:49.449]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --preview on 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --preview on
RunDis on
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> camisp --preview on
RunDis on
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunDis onPass

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between camisp --preview on and [001D38CC:3020213A] :-) == RunDis onPass

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunDis onPass
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.695833s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 0 0x63 0x0C 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cread 0 0x63 0x0C 1 1(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 0 0x63 0x0C 1 1,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0C 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunDis onPass
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005781s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 0 0x63 0x0C 1 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 0 0x63 0x0C 1 1
RunI2cRead 0xC
0x3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0C 1 1
RunI2cRead 0xC
0x3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cRead 0xC0x3Passtime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cread 0 0x63 0x0C 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xC0x3Passtime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cRead 0xC0x3Passtime: 3 ms
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.019369s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1_Version 
}

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cRead 0xC0x3Passtime: 3 ms
++++++++++ [13] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1_Version 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 0x3
++++++++++++++ [14] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000145s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 3
+++++++++ [15] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 3
++++++++++ [16] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1 Revision_spec*] 
 
}

[2016-04-05 17:39:50.450]
JUDGE_SPEC =>  value is [3], spec is [Item0=3 ; Item1=3 ; ], mode is [1]

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 3
+++++++++++++++ [17] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000617s) +++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 1 0x63 0x0C 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cread 1 0x63 0x0C 1 1(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 1 0x63 0x0C 1 1,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0C 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 3
++++++++++++++++++++ [18] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005733s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 1 0x63 0x0C 1 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 1 0x63 0x0C 1 1
RunI2cRead 0xC
0x3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0C 1 1
RunI2cRead 0xC
0x3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cRead 0xC0x3Passtime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cread 1 0x63 0x0C 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xC0x3Passtime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cRead 0xC0x3Passtime: 3 ms
++++++++++++++ [19] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022676s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2_Version 
}

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cRead 0xC0x3Passtime: 3 ms
++++++++++ [20] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:50.450]
================== END TEST Neon1 Revision (TestResult : PASS ; Duration : 2.112505s) ==================

[2016-04-05 17:39:50.450]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1 Revision,,,3,3,3,,)

[2016-04-05 17:39:50.450]
Item Name:Neon1 Revision, [3,3]

[2016-04-05 17:39:50.450]
================================= START TEST NEON2 REVISION (Item110) =================================

[2016-04-05 17:39:50.450]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2_Version 
}

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cRead 0xC0x3Passtime: 3 ms
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2_Version 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 0x3
+++++++++++++++ [2] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000191s) +++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 3
+++++++++ [3] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000039s) +++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2 Revision_spec*] 
 
}

[2016-04-05 17:39:50.450]
JUDGE_SPEC =>  value is [3], spec is [Item0=3 ; Item1=3 ; ], mode is [1]

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 3
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001146s) +++++++++++++++

[2016-04-05 17:39:50.450]
================== END TEST Neon2 Revision (TestResult : PASS ; Duration : 0.008701s) ==================

[2016-04-05 17:39:50.450]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2 Revision,,,3,3,3,,)

[2016-04-05 17:39:50.450]
Item Name:Neon2 Revision, [3,3]

[2016-04-05 17:39:50.450]
========================= START TEST 4XLED MEASURE STROBE_FLASH MODE (Item111) =========================

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006799s) +++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B
RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B
RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x2 0x5BPasstime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B and [001D38CC:3020213A] :-) == RunI2cWrite 0x2 0x5BPasstime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x2 0x5BPasstime: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021088s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x2 0x5BPasstime: 3 ms
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005483s) +++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B
RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B
RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x2 0x5BPasstime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B and [001D38CC:3020213A] :-) == RunI2cWrite 0x2 0x5BPasstime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x2 0x5BPasstime: 3 ms
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021745s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x08 1 1 0x14 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x08 1 1 0x14(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x08 1 1 0x14,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x08 1 1 0x14 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x2 0x5BPasstime: 3 ms
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006063s) +++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x08 1 1 0x14 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x08 1 1 0x14
RunI2cWrite 0x8 0x14
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x08 1 1 0x14
RunI2cWrite 0x8 0x14
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x8 0x14Passtime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x08 1 1 0x14 and [001D38CC:3020213A] :-) == RunI2cWrite 0x8 0x14Passtime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x8 0x14Passtime: 3 ms
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021755s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x08 1 1 0x14 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x08 1 1 0x14(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x08 1 1 0x14,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x08 1 1 0x14 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x8 0x14Passtime: 3 ms
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005882s) +++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x08 1 1 0x14 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x08 1 1 0x14
RunI2cWrite 0x8 0x14
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x08 1 1 0x14
RunI2cWrite 0x8 0x14
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x8 0x14Passtime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x08 1 1 0x14 and [001D38CC:3020213A] :-) == RunI2cWrite 0x8 0x14Passtime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x8 0x14Passtime: 3 ms
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021236s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x09 1 1 0x1B 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x09 1 1 0x1B(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x09 1 1 0x1B,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x09 1 1 0x1B 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x8 0x14Passtime: 3 ms
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005548s) +++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x09 1 1 0x1B 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x09 1 1 0x1B
RunI2cWrite 0x9 0x1B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x09 1 1 0x1B
RunI2cWrite 0x9 0x1B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x9 0x1BPasstime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x09 1 1 0x1B and [001D38CC:3020213A] :-) == RunI2cWrite 0x9 0x1BPasstime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x9 0x1BPasstime: 3 ms
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023693s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x09 1 1 0x1B 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x09 1 1 0x1B(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x09 1 1 0x1B,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x09 1 1 0x1B 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x9 0x1BPasstime: 3 ms
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006001s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x09 1 1 0x1B 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x09 1 1 0x1B
RunI2cWrite 0x9 0x1B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x09 1 1 0x1B
RunI2cWrite 0x9 0x1B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x9 0x1BPasstime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x09 1 1 0x1B and [001D38CC:3020213A] :-) == RunI2cWrite 0x9 0x1BPasstime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x9 0x1BPasstime: 3 ms
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023112s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x03 1 1 0x2A 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x03 1 1 0x2A(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x03 1 1 0x2A,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x03 1 1 0x2A 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x9 0x1BPasstime: 3 ms
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005676s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x03 1 1 0x2A 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x03 1 1 0x2A
RunI2cWrite 0x3 0x2A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x03 1 1 0x2A
RunI2cWrite 0x3 0x2A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x3 0x2APasstime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x03 1 1 0x2A and [001D38CC:3020213A] :-) == RunI2cWrite 0x3 0x2APasstime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x3 0x2APasstime: 3 ms
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021046s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x04 1 1 0x2A 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x04 1 1 0x2A(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x04 1 1 0x2A,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x04 1 1 0x2A 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x3 0x2APasstime: 3 ms
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005656s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x04 1 1 0x2A 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x04 1 1 0x2A
RunI2cWrite 0x4 0x2A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x04 1 1 0x2A
RunI2cWrite 0x4 0x2A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x4 0x2APasstime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x04 1 1 0x2A and [001D38CC:3020213A] :-) == RunI2cWrite 0x4 0x2APasstime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x4 0x2APasstime: 3 ms
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021267s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x03 1 1 0x2A 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x03 1 1 0x2A(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x03 1 1 0x2A,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x03 1 1 0x2A 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x4 0x2APasstime: 3 ms
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005953s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x03 1 1 0x2A 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x03 1 1 0x2A
RunI2cWrite 0x3 0x2A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x03 1 1 0x2A
RunI2cWrite 0x3 0x2A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x3 0x2APasstime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x03 1 1 0x2A and [001D38CC:3020213A] :-) == RunI2cWrite 0x3 0x2APasstime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x3 0x2APasstime: 3 ms
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021413s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x04 1 1 0x2A 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x04 1 1 0x2A(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x04 1 1 0x2A,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x04 1 1 0x2A 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x3 0x2APasstime: 3 ms
++++++++++++++++++++ [19] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005361s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x04 1 1 0x2A 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x04 1 1 0x2A
RunI2cWrite 0x4 0x2A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x04 1 1 0x2A
RunI2cWrite 0x4 0x2A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x4 0x2APasstime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x04 1 1 0x2A and [001D38CC:3020213A] :-) == RunI2cWrite 0x4 0x2APasstime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x4 0x2APasstime: 3 ms
++++++++++++++ [20] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020559s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0xB3 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x01 1 1 0xB3(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x01 1 1 0xB3,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0xB3 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x4 0x2APasstime: 3 ms
++++++++++++++++++++ [21] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005526s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0xB3 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x01 1 1 0xB3
RunI2cWrite 0x1 0xB3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0xB3
RunI2cWrite 0x1 0xB3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0xB3Passtime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x01 1 1 0xB3 and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0xB3Passtime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x1 0xB3Passtime: 3 ms
++++++++++++++ [22] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020876s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0xB3 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x01 1 1 0xB3(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x01 1 1 0xB3,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0xB3 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x1 0xB3Passtime: 3 ms
++++++++++++++++++++ [23] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005582s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0xB3 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x01 1 1 0xB3
RunI2cWrite 0x1 0xB3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0xB3
RunI2cWrite 0x1 0xB3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0xB3Passtime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x01 1 1 0xB3 and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0xB3Passtime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x1 0xB3Passtime: 3 ms
++++++++++++++ [24] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020774s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x10 0x012f 2 1 0x01 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x10 0x012f 2 1 0x01(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x10 0x012f 2 1 0x01,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x012f 2 1 0x01 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x1 0xB3Passtime: 3 ms
++++++++++++++++++++ [25] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005575s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x10 0x012f 2 1 0x01 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x10 0x012f 2 1 0x01
RunI2cWrite 0x12F 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x012f 2 1 0x01
RunI2cWrite 0x12F 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x12F 0x1
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x10 0x012f 2 1 0x01 and [001D38CC:3020213A] :-) == RunI2cWrite 0x12F 0x1
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x12F 0x1
Pass
time: 3 ms
++++++++++++++ [26] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020801s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x10 0x0347 2 1 0x04 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x10 0x0347 2 1 0x04(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x10 0x0347 2 1 0x04,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0347 2 1 0x04 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x12F 0x1
Pass
time: 3 ms
++++++++++++++++++++ [27] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005509s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x10 0x0347 2 1 0x04 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x10 0x0347 2 1 0x04
RunI2cWrite 0x347 0x4
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0347 2 1 0x04
RunI2cWrite 0x347 0x4
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x347 0x4
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x10 0x0347 2 1 0x04 and [001D38CC:3020213A] :-) == RunI2cWrite 0x347 0x4
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x347 0x4
Pass
time: 3 ms
++++++++++++++ [28] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021235s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x10 0x0348 2 1 0x01 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x10 0x0348 2 1 0x01(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x10 0x0348 2 1 0x01,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0348 2 1 0x01 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x347 0x4
Pass
time: 3 ms
++++++++++++++++++++ [29] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005504s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x10 0x0348 2 1 0x01 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x10 0x0348 2 1 0x01
RunI2cWrite 0x348 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0348 2 1 0x01
RunI2cWrite 0x348 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x348 0x1
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x10 0x0348 2 1 0x01 and [001D38CC:3020213A] :-) == RunI2cWrite 0x348 0x1
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x348 0x1
Pass
time: 3 ms
++++++++++++++ [30] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022855s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x10 0x035a 2 1 0xFF 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x10 0x035a 2 1 0xFF(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x10 0x035a 2 1 0xFF,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x035a 2 1 0xFF 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x348 0x1
Pass
time: 3 ms
++++++++++++++++++++ [31] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005646s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x10 0x035a 2 1 0xFF 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x10 0x035a 2 1 0xFF
RunI2cWrite 0x35A 0xFF
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x035a 2 1 0xFF
RunI2cWrite 0x35A 0xFF
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x35A 0xFF
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x10 0x035a 2 1 0xFF and [001D38CC:3020213A] :-) == RunI2cWrite 0x35A 0xFF
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x35A 0xFF
Pass
time: 3 ms
++++++++++++++ [32] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021363s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x10 0x035b 2 1 0xFF 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x10 0x035b 2 1 0xFF(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x10 0x035b 2 1 0xFF,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x035b 2 1 0xFF 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x35A 0xFF
Pass
time: 3 ms
++++++++++++++++++++ [33] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005714s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x10 0x035b 2 1 0xFF 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x10 0x035b 2 1 0xFF
RunI2cWrite 0x35B 0xFF
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x035b 2 1 0xFF
RunI2cWrite 0x35B 0xFF
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x35B 0xFF
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x10 0x035b 2 1 0xFF and [001D38CC:3020213A] :-) == RunI2cWrite 0x35B 0xFF
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x35B 0xFF
Pass
time: 3 ms
++++++++++++++ [34] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020494s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x10 0x0361 2 1 0x01 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x10 0x0361 2 1 0x01(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x10 0x0361 2 1 0x01,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0361 2 1 0x01 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x35B 0xFF
Pass
time: 3 ms
++++++++++++++++++++ [35] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005522s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x10 0x0361 2 1 0x01 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x10 0x0361 2 1 0x01
RunI2cWrite 0x361 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0361 2 1 0x01
RunI2cWrite 0x361 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x361 0x1
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x10 0x0361 2 1 0x01 and [001D38CC:3020213A] :-) == RunI2cWrite 0x361 0x1
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x361 0x1
Pass
time: 3 ms
++++++++++++++ [36] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022554s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x10 0x0360 2 1 0x01 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x10 0x0360 2 1 0x01(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x10 0x0360 2 1 0x01,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0360 2 1 0x01 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x361 0x1
Pass
time: 3 ms
++++++++++++++++++++ [37] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005957s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x10 0x0360 2 1 0x01 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x10 0x0360 2 1 0x01
RunI2cWrite 0x360 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0360 2 1 0x01
RunI2cWrite 0x360 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x360 0x1
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x10 0x0360 2 1 0x01 and [001D38CC:3020213A] :-) == RunI2cWrite 0x360 0x1
Pass
time: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x360 0x1
Pass
time: 3 ms
++++++++++++++ [38] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022277s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x360 0x1
Pass
time: 3 ms
++++++++++++++++++++ [39] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005769s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x10 0x0340 2 1 0x01 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:50.450]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x10 0x0340 2 1 0x01(STRING)]

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x10 0x0340 2 1 0x01,2,0;return value:0!

[2016-04-05 17:39:50.450]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0340 2 1 0x01 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x360 0x1
Pass
time: 3 ms
++++++++++++++++++++ [40] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005636s) ++++++++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x10 0x0340 2 1 0x01 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:50.450]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x10 0x0340 2 1 0x01
RunI2cWrite 0x340 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:50.450]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x10 0x0340 2 1 0x01
RunI2cWrite 0x340 0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:50.450 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:50.450]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:50.450]
CATCH_VALUE => Catch OK : RunI2cWrite 0x340 0x1Passtime: 3 ms

[2016-04-05 17:39:50.450]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x10 0x0340 2 1 0x01 and [001D38CC:3020213A] :-) == RunI2cWrite 0x340 0x1Passtime: 3 ms

[2016-04-05 17:39:50.450]
RETURN_VALUE ===> RunI2cWrite 0x340 0x1Passtime: 3 ms
++++++++++++++ [41] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020976s) ++++++++++++++

[2016-04-05 17:39:50.450]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED On ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
0
0
58364
65535
65535
45020
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:51.451]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
0
0
58364
65535
65535
45020
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:51.451]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:51.451]
CATCH_VALUE => Catch OK : 0
0
0
58364
65535
65535
45020
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass

[2016-04-05 17:39:51.451]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
0
0
58364
65535
65535
45020
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0
0
0
58364
65535
65535
45020
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass
++++++++++++++ [42] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.308615s) ++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 500 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:51.451]
Write to ---> MOBILE , command[wait 500(STRING)]

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 500,2,0;return value:0!

[2016-04-05 17:39:51.451]
PostTXToUI ===> 
{
Info ==> wait 500 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0
0
0
58364
65535
65535
45020
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass
++++++++++++++++++++ [43] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005659s) ++++++++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 500
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:51.451]
PostRXToUI ===> 
{
Info ==> wait 500
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:51.451]
CATCH_VALUE => Catch OK : wait 500

[2016-04-05 17:39:51.451]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == wait 500

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> wait 500
++++++++++++++ [44] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.513066s) ++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> PASS
++++ [45] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) ++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*4xLED Measure Strobe_Flash Mode_spec*] 
 
}

[2016-04-05 17:39:51.451]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> PASS
+++++++++++++++ [46] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000616s) +++++++++++++++

[2016-04-05 17:39:51.451]
========= END TEST 4xLED Measure Strobe_Flash Mode (TestResult : PASS ; Duration : 1.441000s) =========

[2016-04-05 17:39:51.451]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(4xLED Measure Strobe_Flash Mode,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:51.451]
Item Name:4xLED Measure Strobe_Flash Mode, <PASS>

[2016-04-05 17:39:51.451]
========================= START TEST NEON1 4XLED REGISTER 0XA CHECK (Item112) =========================

[2016-04-05 17:39:51.451]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 0 0x63 0x0A 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:51.451]
Write to ---> MOBILE , command[time camisp --i2cread 0 0x63 0x0A 1 1(STRING)]

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 0 0x63 0x0A 1 1,2,0;return value:0!

[2016-04-05 17:39:51.451]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0A 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006761s) +++++++++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 0 0x63 0x0A 1 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 0 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:51.451]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:51.451]
CATCH_VALUE => Catch OK : RunI2cRead 0xA0x1Passtime: 3 ms

[2016-04-05 17:39:51.451]
READ_COMMAND => Catch string between time camisp --i2cread 0 0x63 0x0A 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xA0x1Passtime: 3 ms

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> RunI2cRead 0xA0x1Passtime: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020755s) ++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1_RegisterA 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> RunI2cRead 0xA0x1Passtime: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) ++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1_RegisterA 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0x1
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000155s) +++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 1
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1 4xLED Register 0xA Check_spec*] 
 
}

[2016-04-05 17:39:51.451]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; ], mode is [5]

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000642s) +++++++++++++++

[2016-04-05 17:39:51.451]
========== END TEST Neon1 4xLED Register 0xA Check (TestResult : PASS ; Duration : 0.036957s) ==========

[2016-04-05 17:39:51.451]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1 4xLED Register 0xA Check,,,1,1,1,,)

[2016-04-05 17:39:51.451]
Item Name:Neon1 4xLED Register 0xA Check, <1>

[2016-04-05 17:39:51.451]
========================= START TEST NEON1 4XLED REGISTER 0XB CHECK (Item113) =========================

[2016-04-05 17:39:51.451]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 0 0x63 0x0B 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:51.451]
Write to ---> MOBILE , command[time camisp --i2cread 0 0x63 0x0B 1 1(STRING)]

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 0 0x63 0x0B 1 1,2,0;return value:0!

[2016-04-05 17:39:51.451]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0B 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007318s) +++++++++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 0 0x63 0x0B 1 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 0 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:51.451]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:51.451]
CATCH_VALUE => Catch OK : RunI2cRead 0xB0x0Passtime: 3 ms

[2016-04-05 17:39:51.451]
READ_COMMAND => Catch string between time camisp --i2cread 0 0x63 0x0B 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xB0x0Passtime: 3 ms

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> RunI2cRead 0xB0x0Passtime: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023198s) ++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1_RegisterB 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> RunI2cRead 0xB0x0Passtime: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1_RegisterB 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0x0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000173s) +++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000033s) +++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1 4xLED Register 0xB Check_spec*] 
 
}

[2016-04-05 17:39:51.451]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; ], mode is [5]

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000616s) +++++++++++++++

[2016-04-05 17:39:51.451]
========== END TEST Neon1 4xLED Register 0xB Check (TestResult : PASS ; Duration : 0.039608s) ==========

[2016-04-05 17:39:51.451]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1 4xLED Register 0xB Check,,,0,0,0,,)

[2016-04-05 17:39:51.451]
Item Name:Neon1 4xLED Register 0xB Check, <0>

[2016-04-05 17:39:51.451]
========================= START TEST NEON2 4XLED REGISTER 0XA CHECK (Item114) =========================

[2016-04-05 17:39:51.451]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 1 0x63 0x0A 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:51.451]
Write to ---> MOBILE , command[time camisp --i2cread 1 0x63 0x0A 1 1(STRING)]

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 1 0x63 0x0A 1 1,2,0;return value:0!

[2016-04-05 17:39:51.451]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0A 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006422s) +++++++++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 1 0x63 0x0A 1 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 1 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:51.451]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:51.451]
CATCH_VALUE => Catch OK : RunI2cRead 0xA0x1Passtime: 3 ms

[2016-04-05 17:39:51.451]
READ_COMMAND => Catch string between time camisp --i2cread 1 0x63 0x0A 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xA0x1Passtime: 3 ms

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> RunI2cRead 0xA0x1Passtime: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021234s) ++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2_RegisterA 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> RunI2cRead 0xA0x1Passtime: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) ++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2_RegisterA 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0x1
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000148s) +++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 1
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2 4xLED Register 0xA Check_spec*] 
 
}

[2016-04-05 17:39:51.451]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; ], mode is [5]

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000647s) +++++++++++++++

[2016-04-05 17:39:51.451]
========== END TEST Neon2 4xLED Register 0xA Check (TestResult : PASS ; Duration : 0.037056s) ==========

[2016-04-05 17:39:51.451]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2 4xLED Register 0xA Check,,,1,1,1,,)

[2016-04-05 17:39:51.451]
Item Name:Neon2 4xLED Register 0xA Check, <1>

[2016-04-05 17:39:51.451]
========================= START TEST NEON2 4XLED REGISTER 0XB CHECK (Item115) =========================

[2016-04-05 17:39:51.451]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 1 0x63 0x0B 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:51.451]
Write to ---> MOBILE , command[time camisp --i2cread 1 0x63 0x0B 1 1(STRING)]

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 1 0x63 0x0B 1 1,2,0;return value:0!

[2016-04-05 17:39:51.451]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0B 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006863s) +++++++++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 1 0x63 0x0B 1 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 1 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:51.451]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:51.451]
CATCH_VALUE => Catch OK : RunI2cRead 0xB0x0Passtime: 3 ms

[2016-04-05 17:39:51.451]
READ_COMMAND => Catch string between time camisp --i2cread 1 0x63 0x0B 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xB0x0Passtime: 3 ms

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> RunI2cRead 0xB0x0Passtime: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024759s) ++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2_RegisterB 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> RunI2cRead 0xB0x0Passtime: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2_RegisterB 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0x0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000178s) +++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000031s) +++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2 4xLED Register 0xB Check_spec*] 
 
}

[2016-04-05 17:39:51.451]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; ], mode is [5]

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 0
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000728s) +++++++++++++++

[2016-04-05 17:39:51.451]
========== END TEST Neon2 4xLED Register 0xB Check (TestResult : PASS ; Duration : 0.040576s) ==========

[2016-04-05 17:39:51.451]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2 4xLED Register 0xB Check,,,0,0,0,,)

[2016-04-05 17:39:51.451]
Item Name:Neon2 4xLED Register 0xB Check, <0>

[2016-04-05 17:39:51.451]
============================ START TEST 4XLED MEASURE STROBE OFF (Item116) ============================

[2016-04-05 17:39:51.451]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --preview off 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:51.451]
Write to ---> MOBILE , command[camisp --preview off(STRING)]

[2016-04-05 17:39:51.451]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --preview off,2,0;return value:0!

[2016-04-05 17:39:51.451]
PostTXToUI ===> 
{
Info ==> camisp --preview off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:51.451 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:51.451]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:51.451]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006580s) +++++++++++++++++++++

[2016-04-05 17:39:51.451]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --preview off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:52.452]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --preview off
RunDis off
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:52.452]
PostRXToUI ===> 
{
Info ==> camisp --preview off
RunDis off
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:52.452 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:52.452]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:52.452]
CATCH_VALUE => Catch OK : RunDis offPass

[2016-04-05 17:39:52.452]
READ_COMMAND => Catch string between camisp --preview off and [001D38CC:3020213A] :-) == RunDis offPass

[2016-04-05 17:39:52.452]
RETURN_VALUE ===> RunDis offPass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.518800s) ++++++++++++++

[2016-04-05 17:39:52.452]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:52.452]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:52.452]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:52.452]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:52.452]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:52.452 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:52.452]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:52.452]
RETURN_VALUE ===> RunDis offPass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005627s) +++++++++++++++++++++

[2016-04-05 17:39:52.452]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED Off ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:52.452]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:52.452]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:52.452 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:52.452]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:52.452]
CATCH_VALUE => Catch OK : 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:52.452]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:52.452]
RETURN_VALUE ===> 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.339477s) ++++++++++++++

[2016-04-05 17:39:52.452]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:52.452]
RETURN_VALUE ===> PASS
+++++ [5] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000019s) +++++

[2016-04-05 17:39:52.452]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*4xLED Measure Strobe Off_spec*] 
 
}

[2016-04-05 17:39:52.452]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:52.452]
RETURN_VALUE ===> PASS
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000611s) +++++++++++++++

[2016-04-05 17:39:52.452]
============= END TEST 4xLED Measure Strobe Off (TestResult : PASS ; Duration : 0.879262s) =============

[2016-04-05 17:39:52.452]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(4xLED Measure Strobe Off,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:52.452]
Item Name:4xLED Measure Strobe Off, <PASS>

[2016-04-05 17:39:52.452]
==================== START TEST NEON1LED1 MEASURE COOL STROBE_FLASH MODE (Item117) ====================

[2016-04-05 17:39:52.452]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:52.452]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:52.452]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-04-05 17:39:52.452]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-04-05 17:39:52.452]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:52.452 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:52.452]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:52.452]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006553s) +++++++++++++++++++++

[2016-04-05 17:39:52.452]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --exit 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:53.453]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:53.453]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:53.453 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:53.453]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:53.453]
CATCH_VALUE => Catch OK : RunExit
Pass

[2016-04-05 17:39:53.453]
READ_COMMAND => Catch string between camisp --exit and [001D38CC:3020213A] :-) == RunExit
Pass

[2016-04-05 17:39:53.453]
RETURN_VALUE ===> RunExit
Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.303981s) ++++++++++++++

[2016-04-05 17:39:53.453]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --find 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:53.453]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:53.453]
Write to ---> MOBILE , command[camisp --find(STRING)]

[2016-04-05 17:39:53.453]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --find,2,0;return value:0!

[2016-04-05 17:39:53.453]
PostTXToUI ===> 
{
Info ==> camisp --find 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:53.453 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:53.453]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:53.453]
RETURN_VALUE ===> RunExit
Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005720s) +++++++++++++++++++++

[2016-04-05 17:39:53.453]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --find 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --find
found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> camisp --find
found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between camisp --find and [001D38CC:3020213A] :-) == found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.002497s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> camispFind 
}

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 0 0x63 0x0C 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cread 0 0x63 0x0C 1 1(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 0 0x63 0x0C 1 1,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0C 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005537s) +++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 0 0x63 0x0C 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 0 0x63 0x0C 1 1
RunI2cRead 0xC
0x3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0C 1 1
RunI2cRead 0xC
0x3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cRead 0xC
0x3
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cread 0 0x63 0x0C 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xC
0x3
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cRead 0xC
0x3
Pass
time: 3 ms
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020377s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 1 0x63 0x0C 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cread 1 0x63 0x0C 1 1(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 1 0x63 0x0C 1 1,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0C 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cRead 0xC
0x3
Pass
time: 3 ms
+++++++++++++++++++++ [8] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005528s) +++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 1 0x63 0x0C 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 1 0x63 0x0C 1 1
RunI2cRead 0xC
0x3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0C 1 1
RunI2cRead 0xC
0x3
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cRead 0xC
0x3
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cread 1 0x63 0x0C 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xC
0x3
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cRead 0xC
0x3
Pass
time: 3 ms
++++++++++++++ [9] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021792s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cRead 0xC
0x3
Pass
time: 3 ms
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005517s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B
RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B
RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cWrite 0x2 0x5B
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x02 1 1 0x5B and [001D38CC:3020213A] :-) == RunI2cWrite 0x2 0x5B
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020863s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
++++++++++++++++++++ [12] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005515s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B
RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B
RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cWrite 0x2 0x5B
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x02 1 1 0x5B and [001D38CC:3020213A] :-) == RunI2cWrite 0x2 0x5B
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
++++++++++++++ [13] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024318s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x08 1 1 0x1A 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x08 1 1 0x1A(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x08 1 1 0x1A,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x08 1 1 0x1A 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x2 0x5B
Pass
time: 3 ms
++++++++++++++++++++ [14] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006761s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x08 1 1 0x1A 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x08 1 1 0x1A
RunI2cWrite 0x8 0x1A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x08 1 1 0x1A
RunI2cWrite 0x8 0x1A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cWrite 0x8 0x1A
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x08 1 1 0x1A and [001D38CC:3020213A] :-) == RunI2cWrite 0x8 0x1A
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x8 0x1A
Pass
time: 3 ms
++++++++++++++ [15] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026998s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x08 1 1 0x1A 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x08 1 1 0x1A(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x08 1 1 0x1A,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x08 1 1 0x1A 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x8 0x1A
Pass
time: 3 ms
++++++++++++++++++++ [16] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005868s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x08 1 1 0x1A 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x08 1 1 0x1A
RunI2cWrite 0x8 0x1A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x08 1 1 0x1A
RunI2cWrite 0x8 0x1A
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cWrite 0x8 0x1A
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x08 1 1 0x1A and [001D38CC:3020213A] :-) == RunI2cWrite 0x8 0x1A
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x8 0x1A
Pass
time: 3 ms
++++++++++++++ [17] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023443s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x09 1 1 0x3B 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x09 1 1 0x3B(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x09 1 1 0x3B,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x09 1 1 0x3B 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x8 0x1A
Pass
time: 3 ms
++++++++++++++++++++ [18] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005964s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x09 1 1 0x3B 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x09 1 1 0x3B
RunI2cWrite 0x9 0x3B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x09 1 1 0x3B
RunI2cWrite 0x9 0x3B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cWrite 0x9 0x3B
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x09 1 1 0x3B and [001D38CC:3020213A] :-) == RunI2cWrite 0x9 0x3B
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x9 0x3B
Pass
time: 3 ms
++++++++++++++ [19] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020949s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x09 1 1 0x3B 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x09 1 1 0x3B(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x09 1 1 0x3B,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x09 1 1 0x3B 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x9 0x3B
Pass
time: 3 ms
++++++++++++++++++++ [20] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005539s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x09 1 1 0x3B 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x09 1 1 0x3B
RunI2cWrite 0x9 0x3B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x09 1 1 0x3B
RunI2cWrite 0x9 0x3B
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cWrite 0x9 0x3B
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x09 1 1 0x3B and [001D38CC:3020213A] :-) == RunI2cWrite 0x9 0x3B
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x9 0x3B
Pass
time: 3 ms
++++++++++++++ [21] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020707s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x03 1 1 0x54 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x03 1 1 0x54(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x03 1 1 0x54,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x03 1 1 0x54 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x9 0x3B
Pass
time: 3 ms
++++++++++++++++++++ [22] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005434s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x03 1 1 0x54 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x03 1 1 0x54
RunI2cWrite 0x3 0x54
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x03 1 1 0x54
RunI2cWrite 0x3 0x54
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cWrite 0x3 0x54
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x03 1 1 0x54 and [001D38CC:3020213A] :-) == RunI2cWrite 0x3 0x54
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x3 0x54
Pass
time: 3 ms
++++++++++++++ [23] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020868s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x3 0x54
Pass
time: 3 ms
++++++++++++++++++++ [24] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005624s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x0D 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x01 1 1 0x0D(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x01 1 1 0x0D,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x0D 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x3 0x54
Pass
time: 3 ms
++++++++++++++++++++ [25] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005737s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x0D 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x01 1 1 0x0D
RunI2cWrite 0x1 0xD
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x0D
RunI2cWrite 0x1 0xD
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0xD
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x01 1 1 0x0D and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0xD
Pass
time: 3 ms

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> RunI2cWrite 0x1 0xD
Pass
time: 3 ms
++++++++++++++ [26] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022584s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED On ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
11724
36732
36160
35808
35520
35284
35044
34836
34624
25812
0
0
0
0
0
0
0
0
0
0

Strobe LED On 36732 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:54.454]
PostRXToUI ===> 
{
Info ==> Strobe Led State
11724
36732
36160
35808
35520
35284
35044
34836
34624
25812
0
0
0
0
0
0
0
0
0
0

Strobe LED On 36732 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:54.454]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:54.454]
CATCH_VALUE => Catch OK : 11724
36732
36160
35808
35520
35284
35044
34836
34624
25812
0
0
0
0
0
0
0
0
0
0

Strobe LED On 36732 Pass

[2016-04-05 17:39:54.454]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 11724
36732
36160
35808
35520
35284
35044
34836
34624
25812
0
0
0
0
0
0
0
0
0
0

Strobe LED On 36732 Pass

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> 11724
36732
36160
35808
35520
35284
35044
34836
34624
25812
0
0
0
0
0
0
0
0
0
0

Strobe LED On 36732 Pass
++++++++++++++ [27] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.325190s) ++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 200 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:54.454]
Write to ---> MOBILE , command[wait 200(STRING)]

[2016-04-05 17:39:54.454]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 200,2,0;return value:0!

[2016-04-05 17:39:54.454]
PostTXToUI ===> 
{
Info ==> wait 200 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:54.454 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:54.454]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:54.454]
RETURN_VALUE ===> 11724
36732
36160
35808
35520
35284
35044
34836
34624
25812
0
0
0
0
0
0
0
0
0
0

Strobe LED On 36732 Pass
++++++++++++++++++++ [28] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005409s) ++++++++++++++++++++

[2016-04-05 17:39:54.454]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> wait 200 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 200
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:55.455]
PostRXToUI ===> 
{
Info ==> wait 200
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:55.455]
CATCH_VALUE => Catch OK : 

[2016-04-05 17:39:55.455]
READ_COMMAND => Catch string between wait 200 and [001D38CC:3020213A] :-) == 

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 
++++++++++++++ [29] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.208336s) ++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> PASS
++++ [30] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000020s) ++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1LED1 Measure Cool Strobe_Flash Mode_spec*] 
 
}

[2016-04-05 17:39:55.455]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> PASS
+++++++++++++++ [31] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000638s) +++++++++++++++

[2016-04-05 17:39:55.455]
===== END TEST Neon1LED1 Measure Cool Strobe_Flash Mode (TestResult : PASS ; Duration : 2.187159s) =====

[2016-04-05 17:39:55.455]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1LED1 Measure Cool Strobe_Flash Mode,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:55.455]
Item Name:Neon1LED1 Measure Cool Strobe_Flash Mode, <PASS>

[2016-04-05 17:39:55.455]
========================== START TEST NEON1LED1 REGISTER 0XA CHECK (Item118) ==========================

[2016-04-05 17:39:55.455]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 0 0x63 0x0A 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:55.455]
Write to ---> MOBILE , command[time camisp --i2cread 0 0x63 0x0A 1 1(STRING)]

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 0 0x63 0x0A 1 1,2,0;return value:0!

[2016-04-05 17:39:55.455]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0A 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007312s) +++++++++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 0 0x63 0x0A 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 0 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:55.455]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:55.455]
CATCH_VALUE => Catch OK : RunI2cRead 0xA
0x1
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
READ_COMMAND => Catch string between time camisp --i2cread 0 0x63 0x0A 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xA
0x1
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cRead 0xA
0x1
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022100s) ++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1LED1_RegisterA 
}

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cRead 0xA
0x1
Pass
time: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1LED1_RegisterA 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 0x1
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000145s) +++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 1
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1LED1 Register 0xA Check_spec*] 
 
}

[2016-04-05 17:39:55.455]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; ], mode is [5]

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000643s) +++++++++++++++

[2016-04-05 17:39:55.455]
=========== END TEST Neon1LED1 Register 0xA Check (TestResult : PASS ; Duration : 0.038573s) ===========

[2016-04-05 17:39:55.455]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1LED1 Register 0xA Check,,,1,1,1,,)

[2016-04-05 17:39:55.455]
Item Name:Neon1LED1 Register 0xA Check, <1>

[2016-04-05 17:39:55.455]
========================== START TEST NEON1LED1 REGISTER 0XB CHECK (Item119) ==========================

[2016-04-05 17:39:55.455]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 0 0x63 0x0B 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:55.455]
Write to ---> MOBILE , command[time camisp --i2cread 0 0x63 0x0B 1 1(STRING)]

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 0 0x63 0x0B 1 1,2,0;return value:0!

[2016-04-05 17:39:55.455]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0B 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006705s) +++++++++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 0 0x63 0x0B 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 0 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:55.455]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:55.455]
CATCH_VALUE => Catch OK : RunI2cRead 0xB
0x0
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
READ_COMMAND => Catch string between time camisp --i2cread 0 0x63 0x0B 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xB
0x0
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cRead 0xB
0x0
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020325s) ++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1LED1_RegisterB 
}

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cRead 0xB
0x0
Pass
time: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1LED1_RegisterB 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 0x0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000178s) +++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 0
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1LED1 Register 0xB Check_spec*] 
 
}

[2016-04-05 17:39:55.455]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; ], mode is [5]

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 0
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000646s) +++++++++++++++

[2016-04-05 17:39:55.455]
=========== END TEST Neon1LED1 Register 0xB Check (TestResult : PASS ; Duration : 0.036526s) ===========

[2016-04-05 17:39:55.455]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1LED1 Register 0xB Check,,,0,0,0,,)

[2016-04-05 17:39:55.455]
Item Name:Neon1LED1 Register 0xB Check, <0>

[2016-04-05 17:39:55.455]
======================== START TEST NEON1LED1 MEASURE COOL STROBE OFF (Item120) ========================

[2016-04-05 17:39:55.455]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x00 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:55.455]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x01 1 1 0x00(STRING)]

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x01 1 1 0x00,2,0;return value:0!

[2016-04-05 17:39:55.455]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x00 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007544s) +++++++++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x00 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x01 1 1 0x00
RunI2cWrite 0x1 0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:55.455]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x00
RunI2cWrite 0x1 0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:55.455]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0x0
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x01 1 1 0x00 and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0x0
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cWrite 0x1 0x0
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022930s) ++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:55.455]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:55.455]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:55.455]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cWrite 0x1 0x0
Pass
time: 3 ms
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005587s) +++++++++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED Off ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:55.455]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:55.455]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:55.455]
CATCH_VALUE => Catch OK : 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:55.455]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.337375s) ++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> PASS
+++++ [5] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1LED1 Measure Cool Strobe Off_spec*] 
 
}

[2016-04-05 17:39:55.455]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> PASS
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000611s) +++++++++++++++

[2016-04-05 17:39:55.455]
======== END TEST Neon1LED1 Measure Cool Strobe Off (TestResult : PASS ; Duration : 0.382712s) ========

[2016-04-05 17:39:55.455]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1LED1 Measure Cool Strobe Off,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:55.455]
Item Name:Neon1LED1 Measure Cool Strobe Off, <PASS>

[2016-04-05 17:39:55.455]
==================== START TEST NEON1LED2 MEASURE AMBER STROBE_FLASH MODE (Item121) ====================

[2016-04-05 17:39:55.455]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x04 1 1 0x54 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:55.455]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x04 1 1 0x54(STRING)]

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x04 1 1 0x54,2,0;return value:0!

[2016-04-05 17:39:55.455]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x04 1 1 0x54 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007539s) +++++++++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x04 1 1 0x54 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x04 1 1 0x54
RunI2cWrite 0x4 0x54
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:55.455]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x04 1 1 0x54
RunI2cWrite 0x4 0x54
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:55.455]
CATCH_VALUE => Catch OK : RunI2cWrite 0x4 0x54
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x04 1 1 0x54 and [001D38CC:3020213A] :-) == RunI2cWrite 0x4 0x54
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cWrite 0x4 0x54
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020251s) ++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:55.455]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:55.455]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:55.455]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cWrite 0x4 0x54
Pass
time: 3 ms
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005960s) +++++++++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x0E 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:55.455]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x01 1 1 0x0E(STRING)]

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x01 1 1 0x0E,2,0;return value:0!

[2016-04-05 17:39:55.455]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x0E 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cWrite 0x4 0x54
Pass
time: 3 ms
+++++++++++++++++++++ [4] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005423s) +++++++++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x0E 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x01 1 1 0x0E
RunI2cWrite 0x1 0xE
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:55.455]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x0E
RunI2cWrite 0x1 0xE
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:55.455]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0xE
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x01 1 1 0x0E and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0xE
Pass
time: 3 ms

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> RunI2cWrite 0x1 0xE
Pass
time: 3 ms
++++++++++++++ [5] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021988s) ++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED On ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
10012
22896
22100
21624
21256
20928
20632
20384
20132
16908
0
0
0
0
0
0
0
0
0

Strobe LED On 22896 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:55.455]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
10012
22896
22100
21624
21256
20928
20632
20384
20132
16908
0
0
0
0
0
0
0
0
0

Strobe LED On 22896 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:55.455]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:55.455]
CATCH_VALUE => Catch OK : 0
10012
22896
22100
21624
21256
20928
20632
20384
20132
16908
0
0
0
0
0
0
0
0
0

Strobe LED On 22896 Pass

[2016-04-05 17:39:55.455]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
10012
22896
22100
21624
21256
20928
20632
20384
20132
16908
0
0
0
0
0
0
0
0
0

Strobe LED On 22896 Pass

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 0
10012
22896
22100
21624
21256
20928
20632
20384
20132
16908
0
0
0
0
0
0
0
0
0

Strobe LED On 22896 Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.307756s) ++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 200 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:55.455]
Write to ---> MOBILE , command[wait 200(STRING)]

[2016-04-05 17:39:55.455]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 200,2,0;return value:0!

[2016-04-05 17:39:55.455]
PostTXToUI ===> 
{
Info ==> wait 200 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:55.455 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:55.455]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:55.455]
RETURN_VALUE ===> 0
10012
22896
22100
21624
21256
20928
20632
20384
20132
16908
0
0
0
0
0
0
0
0
0

Strobe LED On 22896 Pass
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005668s) +++++++++++++++++++++

[2016-04-05 17:39:55.455]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> wait 200 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 200
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:56.456]
PostRXToUI ===> 
{
Info ==> wait 200
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:56.456]
CATCH_VALUE => Catch OK : 

[2016-04-05 17:39:56.456]
READ_COMMAND => Catch string between wait 200 and [001D38CC:3020213A] :-) == 

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.208970s) ++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> PASS
+++++ [9] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) +++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1LED2 Measure Amber Strobe_Flash Mode_spec*] 
 
}

[2016-04-05 17:39:56.456]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> PASS
+++++++++++++++ [10] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000607s) +++++++++++++++

[2016-04-05 17:39:56.456]
==== END TEST Neon1LED2 Measure Amber Strobe_Flash Mode (TestResult : PASS ; Duration : 0.598440s) ====

[2016-04-05 17:39:56.456]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1LED2 Measure Amber Strobe_Flash Mode,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:56.456]
Item Name:Neon1LED2 Measure Amber Strobe_Flash Mode, <PASS>

[2016-04-05 17:39:56.456]
========================== START TEST NEON1LED2 REGISTER 0XA CHECK (Item122) ==========================

[2016-04-05 17:39:56.456]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 0 0x63 0x0A 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:56.456]
Write to ---> MOBILE , command[time camisp --i2cread 0 0x63 0x0A 1 1(STRING)]

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 0 0x63 0x0A 1 1,2,0;return value:0!

[2016-04-05 17:39:56.456]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0A 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007620s) +++++++++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 0 0x63 0x0A 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 0 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:56.456]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:56.456]
CATCH_VALUE => Catch OK : RunI2cRead 0xA
0x1
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
READ_COMMAND => Catch string between time camisp --i2cread 0 0x63 0x0A 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xA
0x1
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cRead 0xA
0x1
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021580s) ++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1LED2_RegisterA 
}

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cRead 0xA
0x1
Pass
time: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1LED2_RegisterA 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 0x1
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000145s) +++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 1
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1LED2 Register 0xA Check_spec*] 
 
}

[2016-04-05 17:39:56.456]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; ], mode is [5]

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000638s) +++++++++++++++

[2016-04-05 17:39:56.456]
=========== END TEST Neon1LED2 Register 0xA Check (TestResult : PASS ; Duration : 0.038612s) ===========

[2016-04-05 17:39:56.456]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1LED2 Register 0xA Check,,,1,1,1,,)

[2016-04-05 17:39:56.456]
Item Name:Neon1LED2 Register 0xA Check, <1>

[2016-04-05 17:39:56.456]
========================== START TEST NEON1LED2 REGISTER 0XB CHECK (Item123) ==========================

[2016-04-05 17:39:56.456]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 0 0x63 0x0B 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:56.456]
Write to ---> MOBILE , command[time camisp --i2cread 0 0x63 0x0B 1 1(STRING)]

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 0 0x63 0x0B 1 1,2,0;return value:0!

[2016-04-05 17:39:56.456]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0B 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006604s) +++++++++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 0 0x63 0x0B 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 0 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:56.456]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 0 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:56.456]
CATCH_VALUE => Catch OK : RunI2cRead 0xB
0x0
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
READ_COMMAND => Catch string between time camisp --i2cread 0 0x63 0x0B 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xB
0x0
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cRead 0xB
0x0
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.019952s) ++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1LED2_RegisterB 
}

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cRead 0xB
0x0
Pass
time: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000037s) ++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon1LED2_RegisterB 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 0x0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000148s) +++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 0
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1LED2 Register 0xB Check_spec*] 
 
}

[2016-04-05 17:39:56.456]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; ], mode is [5]

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 0
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000631s) +++++++++++++++

[2016-04-05 17:39:56.456]
=========== END TEST Neon1LED2 Register 0xB Check (TestResult : PASS ; Duration : 0.036189s) ===========

[2016-04-05 17:39:56.456]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1LED2 Register 0xB Check,,,0,0,0,,)

[2016-04-05 17:39:56.456]
Item Name:Neon1LED2 Register 0xB Check, <0>

[2016-04-05 17:39:56.456]
======================= START TEST NEON1LED2 MEASURE AMBER STROBE OFF (Item124) =======================

[2016-04-05 17:39:56.456]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x00 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:56.456]
Write to ---> MOBILE , command[time camisp --i2cwrite 0 0x63 0x01 1 1 0x00(STRING)]

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 0 0x63 0x01 1 1 0x00,2,0;return value:0!

[2016-04-05 17:39:56.456]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x00 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007583s) +++++++++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x00 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 0 0x63 0x01 1 1 0x00
RunI2cWrite 0x1 0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:56.456]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 0 0x63 0x01 1 1 0x00
RunI2cWrite 0x1 0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:56.456]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0x0
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
READ_COMMAND => Catch string between time camisp --i2cwrite 0 0x63 0x01 1 1 0x00 and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0x0
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cWrite 0x1 0x0
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022726s) ++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:56.456]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:56.456]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:56.456]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cWrite 0x1 0x0
Pass
time: 3 ms
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005540s) +++++++++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED Off ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:56.456]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:56.456]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:56.456]
CATCH_VALUE => Catch OK : 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:56.456]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.334008s) ++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> PASS
+++++ [5] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) +++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon1LED2 Measure Amber Strobe Off_spec*] 
 
}

[2016-04-05 17:39:56.456]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> PASS
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000657s) +++++++++++++++

[2016-04-05 17:39:56.456]
======== END TEST Neon1LED2 Measure Amber Strobe Off (TestResult : PASS ; Duration : 0.379084s) ========

[2016-04-05 17:39:56.456]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon1LED2 Measure Amber Strobe Off,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:56.456]
Item Name:Neon1LED2 Measure Amber Strobe Off, <PASS>

[2016-04-05 17:39:56.456]
==================== START TEST NEON2LED1 MEASURE COOL STROBE_FLASH MODE (Item125) ====================

[2016-04-05 17:39:56.456]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x03 1 1 0x54 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:56.456]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x03 1 1 0x54(STRING)]

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x03 1 1 0x54,2,0;return value:0!

[2016-04-05 17:39:56.456]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x03 1 1 0x54 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007239s) +++++++++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x03 1 1 0x54 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x03 1 1 0x54
RunI2cWrite 0x3 0x54
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:56.456]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x03 1 1 0x54
RunI2cWrite 0x3 0x54
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:56.456]
CATCH_VALUE => Catch OK : RunI2cWrite 0x3 0x54
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x03 1 1 0x54 and [001D38CC:3020213A] :-) == RunI2cWrite 0x3 0x54
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cWrite 0x3 0x54
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020470s) ++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:56.456]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:56.456]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:56.456]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cWrite 0x3 0x54
Pass
time: 3 ms
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005524s) +++++++++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x0D 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:56.456]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x01 1 1 0x0D(STRING)]

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x01 1 1 0x0D,2,0;return value:0!

[2016-04-05 17:39:56.456]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x0D 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cWrite 0x3 0x54
Pass
time: 3 ms
+++++++++++++++++++++ [4] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005905s) +++++++++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x0D 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:56.456]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x01 1 1 0x0D
RunI2cWrite 0x1 0xD
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:56.456]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x0D
RunI2cWrite 0x1 0xD
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:56.456 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:56.456]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:56.456]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0xD
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x01 1 1 0x0D and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0xD
Pass
time: 3 ms

[2016-04-05 17:39:56.456]
RETURN_VALUE ===> RunI2cWrite 0x1 0xD
Pass
time: 3 ms
++++++++++++++ [5] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022497s) ++++++++++++++

[2016-04-05 17:39:56.456]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED On ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
31196
65535
65535
65535
65160
64692
64244
63832
63444
46572
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:57.457]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
31196
65535
65535
65535
65160
64692
64244
63832
63444
46572
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:57.457]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:57.457]
CATCH_VALUE => Catch OK : 0
31196
65535
65535
65535
65160
64692
64244
63832
63444
46572
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass

[2016-04-05 17:39:57.457]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
31196
65535
65535
65535
65160
64692
64244
63832
63444
46572
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 0
31196
65535
65535
65535
65160
64692
64244
63832
63444
46572
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.318286s) ++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 200 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:57.457]
Write to ---> MOBILE , command[wait 200(STRING)]

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 200,2,0;return value:0!

[2016-04-05 17:39:57.457]
PostTXToUI ===> 
{
Info ==> wait 200 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 0
31196
65535
65535
65535
65160
64692
64244
63832
63444
46572
0
0
0
0
0
0
0
0
0

Strobe LED On 65535 Pass
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005230s) +++++++++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> wait 200 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 200
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:57.457]
PostRXToUI ===> 
{
Info ==> wait 200
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:57.457]
CATCH_VALUE => Catch OK : 

[2016-04-05 17:39:57.457]
READ_COMMAND => Catch string between wait 200 and [001D38CC:3020213A] :-) == 

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.213559s) ++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> PASS
+++++ [9] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) +++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2LED1 Measure Cool Strobe_Flash Mode_spec*] 
 
}

[2016-04-05 17:39:57.457]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> PASS
+++++++++++++++ [10] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000600s) +++++++++++++++

[2016-04-05 17:39:57.457]
===== END TEST Neon2LED1 Measure Cool Strobe_Flash Mode (TestResult : PASS ; Duration : 0.613620s) =====

[2016-04-05 17:39:57.457]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2LED1 Measure Cool Strobe_Flash Mode,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:57.457]
Item Name:Neon2LED1 Measure Cool Strobe_Flash Mode, <PASS>

[2016-04-05 17:39:57.457]
========================== START TEST NEON2LED1 REGISTER 0XA CHECK (Item126) ==========================

[2016-04-05 17:39:57.457]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 1 0x63 0x0A 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:57.457]
Write to ---> MOBILE , command[time camisp --i2cread 1 0x63 0x0A 1 1(STRING)]

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 1 0x63 0x0A 1 1,2,0;return value:0!

[2016-04-05 17:39:57.457]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0A 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007506s) +++++++++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 1 0x63 0x0A 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 1 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:57.457]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:57.457]
CATCH_VALUE => Catch OK : RunI2cRead 0xA
0x1
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
READ_COMMAND => Catch string between time camisp --i2cread 1 0x63 0x0A 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xA
0x1
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cRead 0xA
0x1
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022694s) ++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2LED1_RegisterA 
}

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cRead 0xA
0x1
Pass
time: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2LED1_RegisterA 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 0x1
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000171s) +++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 1
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2LED1 Register 0xA Check_spec*] 
 
}

[2016-04-05 17:39:57.457]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; ], mode is [5]

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000620s) +++++++++++++++

[2016-04-05 17:39:57.457]
=========== END TEST Neon2LED1 Register 0xA Check (TestResult : PASS ; Duration : 0.039290s) ===========

[2016-04-05 17:39:57.457]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2LED1 Register 0xA Check,,,1,1,1,,)

[2016-04-05 17:39:57.457]
Item Name:Neon2LED1 Register 0xA Check, <1>

[2016-04-05 17:39:57.457]
========================== START TEST NEON2LED1 REGISTER 0XB CHECK (Item127) ==========================

[2016-04-05 17:39:57.457]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 1 0x63 0x0B 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:57.457]
Write to ---> MOBILE , command[time camisp --i2cread 1 0x63 0x0B 1 1(STRING)]

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 1 0x63 0x0B 1 1,2,0;return value:0!

[2016-04-05 17:39:57.457]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0B 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007748s) +++++++++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 1 0x63 0x0B 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 1 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:57.457]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:57.457]
CATCH_VALUE => Catch OK : RunI2cRead 0xB
0x0
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
READ_COMMAND => Catch string between time camisp --i2cread 1 0x63 0x0B 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xB
0x0
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cRead 0xB
0x0
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020925s) ++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2LED1_RegisterB 
}

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cRead 0xB
0x0
Pass
time: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2LED1_RegisterB 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 0x0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000147s) +++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 0
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2LED1 Register 0xB Check_spec*] 
 
}

[2016-04-05 17:39:57.457]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; ], mode is [5]

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 0
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000631s) +++++++++++++++

[2016-04-05 17:39:57.457]
=========== END TEST Neon2LED1 Register 0xB Check (TestResult : PASS ; Duration : 0.037511s) ===========

[2016-04-05 17:39:57.457]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2LED1 Register 0xB Check,,,0,0,0,,)

[2016-04-05 17:39:57.457]
Item Name:Neon2LED1 Register 0xB Check, <0>

[2016-04-05 17:39:57.457]
======================== START TEST NEON2LED1 MEASURE COOL STROBE OFF (Item128) ========================

[2016-04-05 17:39:57.457]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x00 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:57.457]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x01 1 1 0x00(STRING)]

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x01 1 1 0x00,2,0;return value:0!

[2016-04-05 17:39:57.457]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x00 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006645s) +++++++++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x00 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x01 1 1 0x00
RunI2cWrite 0x1 0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:57.457]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x00
RunI2cWrite 0x1 0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:57.457]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0x0
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x01 1 1 0x00 and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0x0
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cWrite 0x1 0x0
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021065s) ++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:57.457]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:57.457]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:57.457]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cWrite 0x1 0x0
Pass
time: 3 ms
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005590s) +++++++++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED Off ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:57.457]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:57.457]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:57.457]
CATCH_VALUE => Catch OK : 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:57.457]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.350344s) ++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> PASS
+++++ [5] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2LED1 Measure Cool Strobe Off_spec*] 
 
}

[2016-04-05 17:39:57.457]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> PASS
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000618s) +++++++++++++++

[2016-04-05 17:39:57.457]
======== END TEST Neon2LED1 Measure Cool Strobe Off (TestResult : PASS ; Duration : 0.392566s) ========

[2016-04-05 17:39:57.457]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2LED1 Measure Cool Strobe Off,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:57.457]
Item Name:Neon2LED1 Measure Cool Strobe Off, <PASS>

[2016-04-05 17:39:57.457]
==================== START TEST NEON2LED2 MEASURE AMBER STROBE_FLASH MODE (Item129) ====================

[2016-04-05 17:39:57.457]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x04 1 1 0x54 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:57.457]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x04 1 1 0x54(STRING)]

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x04 1 1 0x54,2,0;return value:0!

[2016-04-05 17:39:57.457]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x04 1 1 0x54 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007579s) +++++++++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x04 1 1 0x54 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x04 1 1 0x54
RunI2cWrite 0x4 0x54
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:57.457]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x04 1 1 0x54
RunI2cWrite 0x4 0x54
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:57.457]
CATCH_VALUE => Catch OK : RunI2cWrite 0x4 0x54
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x04 1 1 0x54 and [001D38CC:3020213A] :-) == RunI2cWrite 0x4 0x54
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cWrite 0x4 0x54
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024275s) ++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:57.457]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:57.457]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:57.457]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cWrite 0x4 0x54
Pass
time: 3 ms
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005460s) +++++++++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x0E 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:57.457]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x01 1 1 0x0E(STRING)]

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x01 1 1 0x0E,2,0;return value:0!

[2016-04-05 17:39:57.457]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x0E 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cWrite 0x4 0x54
Pass
time: 3 ms
+++++++++++++++++++++ [4] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005898s) +++++++++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x0E 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:57.457]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x01 1 1 0x0E
RunI2cWrite 0x1 0xE
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:57.457]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x0E
RunI2cWrite 0x1 0xE
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:57.457 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:57.457]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:57.457]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0xE
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x01 1 1 0x0E and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0xE
Pass
time: 3 ms

[2016-04-05 17:39:57.457]
RETURN_VALUE ===> RunI2cWrite 0x1 0xE
Pass
time: 3 ms
++++++++++++++ [5] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021146s) ++++++++++++++

[2016-04-05 17:39:57.457]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED On ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
16616
43836
42168
41224
40492
39908
39360
38872
38400
33148
0
0
0
0
0
0
0
0
0

Strobe LED On 43836 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:58.458]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
16616
43836
42168
41224
40492
39908
39360
38872
38400
33148
0
0
0
0
0
0
0
0
0

Strobe LED On 43836 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:58.458]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:58.458]
CATCH_VALUE => Catch OK : 0
16616
43836
42168
41224
40492
39908
39360
38872
38400
33148
0
0
0
0
0
0
0
0
0

Strobe LED On 43836 Pass

[2016-04-05 17:39:58.458]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
16616
43836
42168
41224
40492
39908
39360
38872
38400
33148
0
0
0
0
0
0
0
0
0

Strobe LED On 43836 Pass

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 0
16616
43836
42168
41224
40492
39908
39360
38872
38400
33148
0
0
0
0
0
0
0
0
0

Strobe LED On 43836 Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.315104s) ++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 200 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:58.458]
Write to ---> MOBILE , command[wait 200(STRING)]

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 200,2,0;return value:0!

[2016-04-05 17:39:58.458]
PostTXToUI ===> 
{
Info ==> wait 200 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 0
16616
43836
42168
41224
40492
39908
39360
38872
38400
33148
0
0
0
0
0
0
0
0
0

Strobe LED On 43836 Pass
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005664s) +++++++++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> wait 200 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 200
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:58.458]
PostRXToUI ===> 
{
Info ==> wait 200
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:58.458]
CATCH_VALUE => Catch OK : 

[2016-04-05 17:39:58.458]
READ_COMMAND => Catch string between wait 200 and [001D38CC:3020213A] :-) == 

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.219800s) ++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> PASS
+++++ [9] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2LED2 Measure Amber Strobe_Flash Mode_spec*] 
 
}

[2016-04-05 17:39:58.458]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> PASS
+++++++++++++++ [10] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000628s) +++++++++++++++

[2016-04-05 17:39:58.458]
==== END TEST Neon2LED2 Measure Amber Strobe_Flash Mode (TestResult : PASS ; Duration : 0.619830s) ====

[2016-04-05 17:39:58.458]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2LED2 Measure Amber Strobe_Flash Mode,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:58.458]
Item Name:Neon2LED2 Measure Amber Strobe_Flash Mode, <PASS>

[2016-04-05 17:39:58.458]
========================== START TEST NEON2LED2 REGISTER 0XA CHECK (Item130) ==========================

[2016-04-05 17:39:58.458]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 1 0x63 0x0A 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:58.458]
Write to ---> MOBILE , command[time camisp --i2cread 1 0x63 0x0A 1 1(STRING)]

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 1 0x63 0x0A 1 1,2,0;return value:0!

[2016-04-05 17:39:58.458]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0A 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006738s) +++++++++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 1 0x63 0x0A 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 1 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:58.458]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0A 1 1
RunI2cRead 0xA
0x1
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:58.458]
CATCH_VALUE => Catch OK : RunI2cRead 0xA
0x1
Pass
time: 3 ms

[2016-04-05 17:39:58.458]
READ_COMMAND => Catch string between time camisp --i2cread 1 0x63 0x0A 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xA
0x1
Pass
time: 3 ms

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> RunI2cRead 0xA
0x1
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024864s) ++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2LED2_RegisterA 
}

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> RunI2cRead 0xA
0x1
Pass
time: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2LED2_RegisterA 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 0x1
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000147s) +++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 1
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2LED2 Register 0xA Check_spec*] 
 
}

[2016-04-05 17:39:58.458]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; ], mode is [5]

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000647s) +++++++++++++++

[2016-04-05 17:39:58.458]
=========== END TEST Neon2LED2 Register 0xA Check (TestResult : PASS ; Duration : 0.040447s) ===========

[2016-04-05 17:39:58.458]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2LED2 Register 0xA Check,,,1,1,1,,)

[2016-04-05 17:39:58.458]
Item Name:Neon2LED2 Register 0xA Check, <1>

[2016-04-05 17:39:58.458]
========================== START TEST NEON2LED2 REGISTER 0XB CHECK (Item131) ==========================

[2016-04-05 17:39:58.458]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cread 1 0x63 0x0B 1 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:58.458]
Write to ---> MOBILE , command[time camisp --i2cread 1 0x63 0x0B 1 1(STRING)]

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cread 1 0x63 0x0B 1 1,2,0;return value:0!

[2016-04-05 17:39:58.458]
PostTXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0B 1 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006734s) +++++++++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cread 1 0x63 0x0B 1 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cread 1 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:58.458]
PostRXToUI ===> 
{
Info ==> time camisp --i2cread 1 0x63 0x0B 1 1
RunI2cRead 0xB
0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:58.458]
CATCH_VALUE => Catch OK : RunI2cRead 0xB
0x0
Pass
time: 3 ms

[2016-04-05 17:39:58.458]
READ_COMMAND => Catch string between time camisp --i2cread 1 0x63 0x0B 1 1 and [001D38CC:3020213A] :-) == RunI2cRead 0xB
0x0
Pass
time: 3 ms

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> RunI2cRead 0xB
0x0
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021906s) ++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2LED2_RegisterB 
}

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> RunI2cRead 0xB
0x0
Pass
time: 3 ms
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Neon2LED2_RegisterB 
REGEX ==> (0x\d+) 
}

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 0x0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000148s) +++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 2 
}

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 0
+++++++++ [5] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2LED2 Register 0xB Check_spec*] 
 
}

[2016-04-05 17:39:58.458]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; ], mode is [5]

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 0
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000650s) +++++++++++++++

[2016-04-05 17:39:58.458]
=========== END TEST Neon2LED2 Register 0xB Check (TestResult : PASS ; Duration : 0.038212s) ===========

[2016-04-05 17:39:58.458]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2LED2 Register 0xB Check,,,0,0,0,,)

[2016-04-05 17:39:58.458]
Item Name:Neon2LED2 Register 0xB Check, <0>

[2016-04-05 17:39:58.458]
======================= START TEST NEON2LED2 MEASURE AMBER STROBE OFF (Item132) =======================

[2016-04-05 17:39:58.458]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x00 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:58.458]
Write to ---> MOBILE , command[time camisp --i2cwrite 1 0x63 0x01 1 1 0x00(STRING)]

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:time camisp --i2cwrite 1 0x63 0x01 1 1 0x00,2,0;return value:0!

[2016-04-05 17:39:58.458]
PostTXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x00 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007944s) +++++++++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x00 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:time camisp --i2cwrite 1 0x63 0x01 1 1 0x00
RunI2cWrite 0x1 0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:58.458]
PostRXToUI ===> 
{
Info ==> time camisp --i2cwrite 1 0x63 0x01 1 1 0x00
RunI2cWrite 0x1 0x0
Pass
time: 3 ms
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:58.458]
CATCH_VALUE => Catch OK : RunI2cWrite 0x1 0x0
Pass
time: 3 ms

[2016-04-05 17:39:58.458]
READ_COMMAND => Catch string between time camisp --i2cwrite 1 0x63 0x01 1 1 0x00 and [001D38CC:3020213A] :-) == RunI2cWrite 0x1 0x0
Pass
time: 3 ms

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> RunI2cWrite 0x1 0x0
Pass
time: 3 ms
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023336s) ++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Strobe Led State 
TARGET ==> FIXTURE 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:58.458]
Write to ---> FIXTURE , command[Strobe Led State(STRING)]

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Strobe Led State,2,0;return value:0!

[2016-04-05 17:39:58.458]
PostTXToUI ===> 
{
Info ==> Strobe Led State 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:39:58.458]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> RunI2cWrite 0x1 0x0
Pass
time: 3 ms
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005597s) +++++++++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Strobe Led State 
PASS_RECEIVE ==> Item0=Strobe LED Off ; Item1=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:58.458]
PostRXToUI ===> 
{
Info ==> Strobe Led State
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:39:58.458]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:39:58.458]
CATCH_VALUE => Catch OK : 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:58.458]
READ_COMMAND => Catch string between Strobe Led State and @_@ == 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.343172s) ++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:58.458]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-04-05 17:39:58.458]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-04-05 17:39:58.458]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:58.458 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:58.458]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:58.458]
RETURN_VALUE ===> 0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0

Strobe LED Off 0 Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005581s) +++++++++++++++++++++

[2016-04-05 17:39:58.458]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --exit 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:59.459]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:59.459]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:59.459 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:59.459]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:59.459]
CATCH_VALUE => Catch OK : RunExit
Pass

[2016-04-05 17:39:59.459]
READ_COMMAND => Catch string between camisp --exit and [001D38CC:3020213A] :-) == RunExit
Pass

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> RunExit
Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.168447s) ++++++++++++++

[2016-04-05 17:39:59.459]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> PASS
+++++ [7] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++

[2016-04-05 17:39:59.459]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Neon2LED2 Measure Amber Strobe Off_spec*] 
 
}

[2016-04-05 17:39:59.459]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=PASS ; ], mode is [5]

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> PASS
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000622s) +++++++++++++++

[2016-04-05 17:39:59.459]
======== END TEST Neon2LED2 Measure Amber Strobe Off (TestResult : PASS ; Duration : 0.566156s) ========

[2016-04-05 17:39:59.459]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Neon2LED2 Measure Amber Strobe Off,,,PASS,PASS,PASS,,)

[2016-04-05 17:39:59.459]
Item Name:Neon2LED2 Measure Amber Strobe Off, <PASS>

[2016-04-05 17:39:59.459]
================================ START TEST FIND CAMERA_BACK (Item133) ================================

[2016-04-05 17:39:59.459]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> camispFind 
}

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) ++++++++

[2016-04-05 17:39:59.459]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> camispFind 
REGEX ==> (back  detected) 
}

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> back  detected
+++++++++++++++ [2] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000234s) +++++++++++++++

[2016-04-05 17:39:59.459]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Find Camera_Back_spec*] 
 
}

[2016-04-05 17:39:59.459]
JUDGE_SPEC =>  value is [back  detected], spec is [Item0=back  detected ; ], mode is [5]

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> back  detected
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000802s) +++++++++++++++

[2016-04-05 17:39:59.459]
================= END TEST Find Camera_Back (TestResult : PASS ; Duration : 0.006735s) =================

[2016-04-05 17:39:59.459]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Find Camera_Back,,,back  detected,back  detected,back  detected,,)

[2016-04-05 17:39:59.459]
Item Name:Find Camera_Back, <back  detected>

[2016-04-05 17:39:59.459]
================================= START TEST CAMERA DLI_BACK (Item134) =================================

[2016-04-05 17:39:59.459]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:59.459]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:59.459]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-04-05 17:39:59.459]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-04-05 17:39:59.459]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:59.459 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:59.459]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006788s) +++++++++++++++++++++

[2016-04-05 17:39:59.459]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --exit 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:39:59.459]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:39:59.459]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:59.459 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:39:59.459]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:39:59.459]
CATCH_VALUE => Catch OK : RunExitPass

[2016-04-05 17:39:59.459]
READ_COMMAND => Catch string between camisp --exit and [001D38CC:3020213A] :-) == RunExitPass

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> RunExitPass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.122724s) ++++++++++++++

[2016-04-05 17:39:59.459]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --pick back 
TARGET ==> MOBILE 
}

[2016-04-05 17:39:59.459]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:39:59.459]
Write to ---> MOBILE , command[camisp --pick back(STRING)]

[2016-04-05 17:39:59.459]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --pick back,2,0;return value:0!

[2016-04-05 17:39:59.459]
PostTXToUI ===> 
{
Info ==> camisp --pick back 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:39:59.459 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:39:59.459]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:39:59.459]
RETURN_VALUE ===> RunExitPass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005766s) +++++++++++++++++++++

[2016-04-05 17:39:59.459]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --pick back 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --pick back
picked : back 
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:00.40]
PostRXToUI ===> 
{
Info ==> camisp --pick back
picked : back 
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:00.40 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:00.40]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:00.40]
CATCH_VALUE => Catch OK : picked : back Pass

[2016-04-05 17:40:00.40]
READ_COMMAND => Catch string between camisp --pick back and [001D38CC:3020213A] :-) == picked : back Pass

[2016-04-05 17:40:00.40]
RETURN_VALUE ===> picked : back Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.092912s) ++++++++++++++

[2016-04-05 17:40:00.40]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --dli 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:00.40]
Write to ---> MOBILE , command[camisp --dli(STRING)]

[2016-04-05 17:40:00.40]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --dli,2,0;return value:0!

[2016-04-05 17:40:00.40]
PostTXToUI ===> 
{
Info ==> camisp --dli 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:00.40 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:00.40]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:00.40]
RETURN_VALUE ===> picked : back Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005364s) +++++++++++++++++++++

[2016-04-05 17:40:00.40]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --dli 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 120 
END ==> :-) 
}

[2016-04-05 17:40:02.42]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --dli
RunExit
Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480
Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX303_colorbar_vga_420_141000.bin
RunExit
Pass
[001D38CC:3020213A] :-) TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:120.000000);return value:0!

[2016-04-05 17:40:02.42]
PostRXToUI ===> 
{
Info ==> camisp --dli
RunExit
Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480
Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX303_colorbar_vga_420_141000.bin
RunExit
Pass
[001D38CC:3020213A] :-) 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:02.42 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:02.42]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:02.42]
CATCH_VALUE => Catch OK : RunExitCapture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX303_colorbar_vga_420_141000.binRunExitPass

[2016-04-05 17:40:02.42]
READ_COMMAND => Catch string between camisp --dli and [001D38CC:3020213A] :-) == RunExitCapture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX303_colorbar_vga_420_141000.binRunExitPass

[2016-04-05 17:40:02.42]
RETURN_VALUE ===> RunExitCapture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX303_colorbar_vga_420_141000.binRunExitPass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.488059s) ++++++++++++++

[2016-04-05 17:40:02.42]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Back_Dli 
}

[2016-04-05 17:40:02.42]
RETURN_VALUE ===> RunExitCapture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX303_colorbar_vga_420_141000.binRunExitPass
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:40:02.42]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Back_Dli 
REGEX ==> (Pass) 
}

[2016-04-05 17:40:02.42]
RETURN_VALUE ===> Pass
+++++++++++++++ [8] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000246s) +++++++++++++++

[2016-04-05 17:40:02.42]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Camera Dli_Back_spec*] 
 
}

[2016-04-05 17:40:02.42]
JUDGE_SPEC =>  value is [Pass], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:02.42]
RETURN_VALUE ===> Pass
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000684s) +++++++++++++++

[2016-04-05 17:40:02.42]
================= END TEST Camera Dli_Back (TestResult : PASS ; Duration : 3.735378s) =================

[2016-04-05 17:40:02.42]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Camera Dli_Back,,,Pass,NA,NA,,)

[2016-04-05 17:40:02.42]
Item Name:Camera Dli_Back, {NA}

[2016-04-05 17:40:02.42]
================================= START TEST BACK CAMERA RGB (Item135) =================================

[2016-04-05 17:40:02.42]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --preview on 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:03.43]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:03.43]
Write to ---> MOBILE , command[camisp --preview on(STRING)]

[2016-04-05 17:40:03.43]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --preview on,2,0;return value:0!

[2016-04-05 17:40:03.43]
PostTXToUI ===> 
{
Info ==> camisp --preview on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:03.43 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:03.43]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:03.43]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.263648s) +++++++++++++++++++++

[2016-04-05 17:40:03.43]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --preview on 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:04.44]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --preview on
RunDis on
Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:05.45]
PostRXToUI ===> 
{
Info ==> camisp --preview on
RunDis on
Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:05.45 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:05.45]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:05.45]
CATCH_VALUE => Catch OK : RunDis onCapture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass

[2016-04-05 17:40:05.45]
READ_COMMAND => Catch string between camisp --preview on and [001D38CC:3020213A] :-) == RunDis onCapture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass

[2016-04-05 17:40:05.45]
RETURN_VALUE ===> RunDis onCapture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.800662s) ++++++++++++++

[2016-04-05 17:40:05.45]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Back R Led On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:05.45]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:05.45]
Write to ---> FIXTURE , command[Back R Led On(STRING)]

[2016-04-05 17:40:05.45]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Back R Led On,2,0;return value:0!

[2016-04-05 17:40:05.45]
PostTXToUI ===> 
{
Info ==> Back R Led On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:05.45 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:05.45]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:05.45]
RETURN_VALUE ===> RunDis onCapture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005837s) +++++++++++++++++++++

[2016-04-05 17:40:05.45]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Back R Led On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:05.45]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Back R Led On
Back R Led On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:05.45]
PostRXToUI ===> 
{
Info ==> Back R Led On
Back R Led On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:05.45 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:05.45]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:05.45]
CATCH_VALUE => Catch OK : Back R Led On Pass

[2016-04-05 17:40:05.45]
READ_COMMAND => Catch string between Back R Led On and @_@ == Back R Led On Pass

[2016-04-05 17:40:05.45]
RETURN_VALUE ===> Back R Led On Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.331767s) ++++++++++++++

[2016-04-05 17:40:05.45]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 600 
}

[2016-04-05 17:40:05.45]
RETURN_VALUE ===> Back R Led On Pass
+++++++++++++++++ [5] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.601016s) +++++++++++++++++

[2016-04-05 17:40:05.45]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --rgb 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:05.45]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:05.45]
Write to ---> MOBILE , command[camisp --rgb(STRING)]

[2016-04-05 17:40:05.45]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --rgb,2,0;return value:0!

[2016-04-05 17:40:05.45]
PostTXToUI ===> 
{
Info ==> camisp --rgb 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:05.45 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:05.45]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:05.45]
RETURN_VALUE ===> Back R Led On Pass
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006728s) +++++++++++++++++++++

[2016-04-05 17:40:05.45]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --rgb 
PASS_RECEIVE ==> Item0=Red ; Item1=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:05.45]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --rgb
RunRGB begin
RunRGB R 0xFF G 0x0 B 0x1E
Red
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:05.45]
PostRXToUI ===> 
{
Info ==> camisp --rgb
RunRGB begin
RunRGB R 0xFF G 0x0 B 0x1E
Red
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:05.45 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:05.45]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:05.45]
CATCH_VALUE => Catch OK : RunRGB beginRunRGB R 0xFF G 0x0 B 0x1ERedPass

[2016-04-05 17:40:05.45]
READ_COMMAND => Catch string between camisp --rgb and [001D38CC:3020213A] :-) == RunRGB beginRunRGB R 0xFF G 0x0 B 0x1ERedPass

[2016-04-05 17:40:05.45]
RETURN_VALUE ===> RunRGB beginRunRGB R 0xFF G 0x0 B 0x1ERedPass
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.018637s) ++++++++++++++

[2016-04-05 17:40:05.45]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Back R Led Off 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:05.45]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:05.45]
Write to ---> FIXTURE , command[Back R Led Off(STRING)]

[2016-04-05 17:40:05.45]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Back R Led Off,2,0;return value:0!

[2016-04-05 17:40:05.45]
PostTXToUI ===> 
{
Info ==> Back R Led Off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:05.45 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:05.45]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:05.45]
RETURN_VALUE ===> RunRGB beginRunRGB R 0xFF G 0x0 B 0x1ERedPass
+++++++++++++++++++++ [8] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005663s) +++++++++++++++++++++

[2016-04-05 17:40:05.45]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Back R Led Off 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:06.46]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Back R Led Off
Back R Led Off Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:06.46]
PostRXToUI ===> 
{
Info ==> Back R Led Off
Back R Led Off Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:06.46 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:06.46]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:06.46]
CATCH_VALUE => Catch OK : Back R Led Off Pass

[2016-04-05 17:40:06.46]
READ_COMMAND => Catch string between Back R Led Off and @_@ == Back R Led Off Pass

[2016-04-05 17:40:06.46]
RETURN_VALUE ===> Back R Led Off Pass
++++++++++++++ [9] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.030779s) ++++++++++++++

[2016-04-05 17:40:06.46]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Back G Led On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:06.46]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:06.46]
Write to ---> FIXTURE , command[Back G Led On(STRING)]

[2016-04-05 17:40:06.46]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Back G Led On,2,0;return value:0!

[2016-04-05 17:40:06.46]
PostTXToUI ===> 
{
Info ==> Back G Led On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:06.46 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:06.46]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:06.46]
RETURN_VALUE ===> Back R Led Off Pass
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005620s) ++++++++++++++++++++

[2016-04-05 17:40:06.46]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Back G Led On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:06.46]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Back G Led On
Back G Led On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:06.46]
PostRXToUI ===> 
{
Info ==> Back G Led On
Back G Led On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:06.46 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:06.46]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:06.46]
CATCH_VALUE => Catch OK : Back G Led On Pass

[2016-04-05 17:40:06.46]
READ_COMMAND => Catch string between Back G Led On and @_@ == Back G Led On Pass

[2016-04-05 17:40:06.46]
RETURN_VALUE ===> Back G Led On Pass
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.327473s) ++++++++++++++

[2016-04-05 17:40:06.46]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 1000 
}

[2016-04-05 17:40:07.47]
RETURN_VALUE ===> Back G Led On Pass
++++++++++++++++ [12] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 1.000352s) ++++++++++++++++

[2016-04-05 17:40:07.47]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --rgb 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:07.47]
Write to ---> MOBILE , command[camisp --rgb(STRING)]

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --rgb,2,0;return value:0!

[2016-04-05 17:40:07.47]
PostTXToUI ===> 
{
Info ==> camisp --rgb 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:07.47]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:07.47]
RETURN_VALUE ===> Back G Led On Pass
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006547s) ++++++++++++++++++++

[2016-04-05 17:40:07.47]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --rgb 
PASS_RECEIVE ==> Item0=Green ; Item1=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --rgb
RunRGB begin
RunRGB R 0x0 G 0x90 B 0x15
Green
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:07.47]
PostRXToUI ===> 
{
Info ==> camisp --rgb
RunRGB begin
RunRGB R 0x0 G 0x90 B 0x15
Green
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:07.47]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:07.47]
CATCH_VALUE => Catch OK : RunRGB beginRunRGB R 0x0 G 0x90 B 0x15GreenPass

[2016-04-05 17:40:07.47]
READ_COMMAND => Catch string between camisp --rgb and [001D38CC:3020213A] :-) == RunRGB beginRunRGB R 0x0 G 0x90 B 0x15GreenPass

[2016-04-05 17:40:07.47]
RETURN_VALUE ===> RunRGB beginRunRGB R 0x0 G 0x90 B 0x15GreenPass
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.019287s) ++++++++++++++

[2016-04-05 17:40:07.47]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Back G Led Off 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:07.47]
Write to ---> FIXTURE , command[Back G Led Off(STRING)]

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Back G Led Off,2,0;return value:0!

[2016-04-05 17:40:07.47]
PostTXToUI ===> 
{
Info ==> Back G Led Off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:07.47]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:07.47]
RETURN_VALUE ===> RunRGB beginRunRGB R 0x0 G 0x90 B 0x15GreenPass
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005544s) ++++++++++++++++++++

[2016-04-05 17:40:07.47]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Back G Led Off 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Back G Led Off
Back G Led Off Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:07.47]
PostRXToUI ===> 
{
Info ==> Back G Led Off
Back G Led Off Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:07.47]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:07.47]
CATCH_VALUE => Catch OK : Back G Led Off Pass

[2016-04-05 17:40:07.47]
READ_COMMAND => Catch string between Back G Led Off and @_@ == Back G Led Off Pass

[2016-04-05 17:40:07.47]
RETURN_VALUE ===> Back G Led Off Pass
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.032631s) ++++++++++++++

[2016-04-05 17:40:07.47]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Back B Led On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:07.47]
Write to ---> FIXTURE , command[Back B Led On(STRING)]

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Back B Led On,2,0;return value:0!

[2016-04-05 17:40:07.47]
PostTXToUI ===> 
{
Info ==> Back B Led On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:07.47 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:07.47]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:07.47]
RETURN_VALUE ===> Back G Led Off Pass
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006717s) ++++++++++++++++++++

[2016-04-05 17:40:07.47]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Back B Led On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:07.47]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Back B Led On
Back B Led On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:07.47]
PostRXToUI ===> 
{
Info ==> Back B Led On
Back B Led On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:07.47 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:07.47]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:07.47]
CATCH_VALUE => Catch OK : Back B Led On Pass

[2016-04-05 17:40:07.47]
READ_COMMAND => Catch string between Back B Led On and @_@ == Back B Led On Pass

[2016-04-05 17:40:07.47]
RETURN_VALUE ===> Back B Led On Pass
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.323995s) ++++++++++++++

[2016-04-05 17:40:07.47]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 600 
}

[2016-04-05 17:40:08.48]
RETURN_VALUE ===> Back B Led On Pass
++++++++++++++++ [19] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.600933s) ++++++++++++++++

[2016-04-05 17:40:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --rgb 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:08.48]
Write to ---> MOBILE , command[camisp --rgb(STRING)]

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --rgb,2,0;return value:0!

[2016-04-05 17:40:08.48]
PostTXToUI ===> 
{
Info ==> camisp --rgb 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:08.48]
RETURN_VALUE ===> Back B Led On Pass
++++++++++++++++++++ [20] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006575s) ++++++++++++++++++++

[2016-04-05 17:40:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --rgb 
PASS_RECEIVE ==> Item0=Blue ; Item1=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --rgb
RunRGB begin
RunRGB R 0x0 G 0x3E B 0xFF
Blue
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:08.48]
PostRXToUI ===> 
{
Info ==> camisp --rgb
RunRGB begin
RunRGB R 0x0 G 0x3E B 0xFF
Blue
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:08.48]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:08.48]
CATCH_VALUE => Catch OK : RunRGB beginRunRGB R 0x0 G 0x3E B 0xFFBluePass

[2016-04-05 17:40:08.48]
READ_COMMAND => Catch string between camisp --rgb and [001D38CC:3020213A] :-) == RunRGB beginRunRGB R 0x0 G 0x3E B 0xFFBluePass

[2016-04-05 17:40:08.48]
RETURN_VALUE ===> RunRGB beginRunRGB R 0x0 G 0x3E B 0xFFBluePass
++++++++++++++ [21] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.018881s) ++++++++++++++

[2016-04-05 17:40:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Back B Led Off 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:08.48]
Write to ---> FIXTURE , command[Back B Led Off(STRING)]

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Back B Led Off,2,0;return value:0!

[2016-04-05 17:40:08.48]
PostTXToUI ===> 
{
Info ==> Back B Led Off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:08.48]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:08.48]
RETURN_VALUE ===> RunRGB beginRunRGB R 0x0 G 0x3E B 0xFFBluePass
++++++++++++++++++++ [22] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005437s) ++++++++++++++++++++

[2016-04-05 17:40:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Back B Led Off 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Back B Led Off
Back B Led Off Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:08.48]
PostRXToUI ===> 
{
Info ==> Back B Led Off
Back B Led Off Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:08.48]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:08.48]
CATCH_VALUE => Catch OK : Back B Led Off Pass

[2016-04-05 17:40:08.48]
READ_COMMAND => Catch string between Back B Led Off and @_@ == Back B Led Off Pass

[2016-04-05 17:40:08.48]
RETURN_VALUE ===> Back B Led Off Pass
++++++++++++++ [23] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.030297s) ++++++++++++++

[2016-04-05 17:40:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --preview off 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:08.48]
Write to ---> MOBILE , command[camisp --preview off(STRING)]

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --preview off,2,0;return value:0!

[2016-04-05 17:40:08.48]
PostTXToUI ===> 
{
Info ==> camisp --preview off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:08.48]
RETURN_VALUE ===> Back B Led Off Pass
++++++++++++++++++++ [24] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007057s) ++++++++++++++++++++

[2016-04-05 17:40:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --preview off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --preview off
RunDis off
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:08.48]
PostRXToUI ===> 
{
Info ==> camisp --preview off
RunDis off
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:08.48 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:08.48]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:08.48]
CATCH_VALUE => Catch OK : RunDis offPass

[2016-04-05 17:40:08.48]
READ_COMMAND => Catch string between camisp --preview off and [001D38CC:3020213A] :-) == RunDis offPass

[2016-04-05 17:40:08.48]
RETURN_VALUE ===> RunDis offPass
++++++++++++++ [25] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.512464s) ++++++++++++++

[2016-04-05 17:40:08.48]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:08.48]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-04-05 17:40:08.48]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-04-05 17:40:08.48]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:08.48 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:08.48]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:08.48]
RETURN_VALUE ===> RunDis offPass
++++++++++++++++++++ [26] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005706s) ++++++++++++++++++++

[2016-04-05 17:40:08.48]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --exit 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:40:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:40:09.49]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:09.49 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:09.49]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:09.49]
CATCH_VALUE => Catch OK : RunExitPass

[2016-04-05 17:40:09.49]
READ_COMMAND => Catch string between camisp --exit and [001D38CC:3020213A] :-) == RunExitPass

[2016-04-05 17:40:09.49]
RETURN_VALUE ===> RunExitPass
++++++++++++++ [27] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.261130s) ++++++++++++++

[2016-04-05 17:40:09.49]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:40:09.49]
RETURN_VALUE ===> PASS
++++ [28] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000025s) ++++

[2016-04-05 17:40:09.49]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera RGB_spec*] 
 
}

[2016-04-05 17:40:09.49]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:09.49]
RETURN_VALUE ===> PASS
+++++++++++++++ [29] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000648s) +++++++++++++++

[2016-04-05 17:40:09.49]
================= END TEST Back Camera RGB (TestResult : PASS ; Duration : 6.287946s) =================

[2016-04-05 17:40:09.49]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera RGB,,,PASS,NA,NA,,)

[2016-04-05 17:40:09.49]
Item Name:Back Camera RGB, {NA}

[2016-04-05 17:40:09.49]
================================= START TEST SPHERESELFTEST (Item136) =================================

[2016-04-05 17:40:09.49]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --on 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:09.49]
Write to ---> MOBILE , command[camisp --on(STRING)]

[2016-04-05 17:40:09.49]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --on,2,0;return value:0!

[2016-04-05 17:40:09.49]
PostTXToUI ===> 
{
Info ==> camisp --on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:09.49 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:09.49]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:09.49]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007127s) +++++++++++++++++++++

[2016-04-05 17:40:09.49]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --on 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 20 
END ==> :-) 
}

[2016-04-05 17:40:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --on
RunOn 0 0 20
Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:20.000000);return value:0!

[2016-04-05 17:40:10.410]
PostRXToUI ===> 
{
Info ==> camisp --on
RunOn 0 0 20
Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:10.410 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:10.410]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:10.410]
CATCH_VALUE => Catch OK : RunOn 0 0 20Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass

[2016-04-05 17:40:10.410]
READ_COMMAND => Catch string between camisp --on and [001D38CC:3020213A] :-) == RunOn 0 0 20Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass

[2016-04-05 17:40:10.410]
RETURN_VALUE ===> RunOn 0 0 20Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.135924s) ++++++++++++++

[2016-04-05 17:40:10.410]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --setoismode position 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:10.410]
Write to ---> MOBILE , command[camisp --setoismode position(STRING)]

[2016-04-05 17:40:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --setoismode position,2,0;return value:0!

[2016-04-05 17:40:10.410]
PostTXToUI ===> 
{
Info ==> camisp --setoismode position 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:10.410 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:10.410]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:10.410]
RETURN_VALUE ===> RunOn 0 0 20Capture buffer allocated at: 0xC6961EB80, 0xC6968F380 of 460800 bytes each with default value of 0x0 width 640 height 480Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005904s) +++++++++++++++++++++

[2016-04-05 17:40:10.410]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --setoismode position 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 20 
END ==> :-) 
}

[2016-04-05 17:40:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --setoismode position
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:20.000000);return value:0!

[2016-04-05 17:40:10.410]
PostRXToUI ===> 
{
Info ==> camisp --setoismode position
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:10.410 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:10.410]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:10.410]
CATCH_VALUE => Catch OK : Pass

[2016-04-05 17:40:10.410]
READ_COMMAND => Catch string between camisp --setoismode position and [001D38CC:3020213A] :-) == Pass

[2016-04-05 17:40:10.410]
RETURN_VALUE ===> Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.516155s) ++++++++++++++

[2016-04-05 17:40:10.410]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --preview on 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:10.410]
Write to ---> MOBILE , command[camisp --preview on(STRING)]

[2016-04-05 17:40:10.410]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --preview on,2,0;return value:0!

[2016-04-05 17:40:10.410]
PostTXToUI ===> 
{
Info ==> camisp --preview on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:10.410 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:10.410]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:10.410]
RETURN_VALUE ===> Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006688s) +++++++++++++++++++++

[2016-04-05 17:40:10.410]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --preview on 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 20 
END ==> :-) 
}

[2016-04-05 17:40:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --preview on
RunDis on
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:20.000000);return value:0!

[2016-04-05 17:40:11.411]
PostRXToUI ===> 
{
Info ==> camisp --preview on
RunDis on
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:11.411 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:11.411]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:11.411]
CATCH_VALUE => Catch OK : RunDis onPass

[2016-04-05 17:40:11.411]
READ_COMMAND => Catch string between camisp --preview on and [001D38CC:3020213A] :-) == RunDis onPass

[2016-04-05 17:40:11.411]
RETURN_VALUE ===> RunDis onPass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.693280s) ++++++++++++++

[2016-04-05 17:40:11.411]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --oisselftest 75 150 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:11.411]
Write to ---> MOBILE , command[camisp --oisselftest 75 150(STRING)]

[2016-04-05 17:40:11.411]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --oisselftest 75 150,2,0;return value:0!

[2016-04-05 17:40:11.411]
PostTXToUI ===> 
{
Info ==> camisp --oisselftest 75 150 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:11.411 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:11.411]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:11.411]
RETURN_VALUE ===> RunDis onPass
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005287s) +++++++++++++++++++++

[2016-04-05 17:40:11.411]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --oisselftest 75 150 
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 20 
END ==> :-) 
}

[2016-04-05 17:40:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --oisselftest 75 150
AverageDisplacementLimit = 75 tenths of microns
StdDevLimit = 150 tenths of microns
Setting focus to 0
Setting mode

Setting [-850,0]  			MeasuredAvgDisplacement [3.392201]
MeasuredStdDev [1.854994]		MeasuredMaxDisplacement [8.062257]
MeasuredMinDisplacement [0.000000]	PASS

Setting [-600,600]  			MeasuredAvgDisplacement [3.816480]
MeasuredStdDev [1.791110]		MeasuredMaxDisplacement [7.615773]
MeasuredMinDisplacement [1.000000]	PASS

Setting [0,850]  			MeasuredAvgDisplacement [3.190236]
MeasuredStdDev [1.282127]		MeasuredMaxDisplacement [5.656854]
MeasuredMinDisplacement [1.000000]	PASS

Setting [600,600]  			MeasuredAvgDisplacement [3.588767]
MeasuredStdDev [1.421781]		MeasuredMaxDisplacement [7.000000]
MeasuredMinDisplacement [2.236068]	PASS

Setting [850,0]  			MeasuredAvgDisplacement [3.597260]
MeasuredStdDev [2.066077]		MeasuredMaxDisplacement [7.280109]
MeasuredMinDisplacement [0.000000]	PASS

Setting [600,-600]  			MeasuredAvgDisplacement [3.926105]
MeasuredStdDev [2.178032]		MeasuredMaxDisplacement [9.848857]
MeasuredMinDisplacement [0.000000]	PASS

Setting [0,-850]  			MeasuredAvgDisplacement [3.248831]
MeasuredStdDev [1.489650]		MeasuredMaxDisplacement [6.000000]
MeasuredMinDisplacement [1.000000]	PASS

Setting [-600,-600]  			MeasuredAvgDisplacement [3.275000]
MeasuredStdDev [1.567241]		MeasuredMaxDisplacement [6.082762]
MeasuredMinDisplacement [0.000000]	PASS

Self-test passed
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:20.000000);return value:0!

[2016-04-05 17:40:16.416]
PostRXToUI ===> 
{
Info ==> camisp --oisselftest 75 150
AverageDisplacementLimit = 75 tenths of microns
StdDevLimit = 150 tenths of microns
Setting focus to 0
Setting mode

Setting [-850,0]  			MeasuredAvgDisplacement [3.392201]
MeasuredStdDev [1.854994]		MeasuredMaxDisplacement [8.062257]
MeasuredMinDisplacement [0.000000]	PASS

Setting [-600,600]  			MeasuredAvgDisplacement [3.816480]
MeasuredStdDev [1.791110]		MeasuredMaxDisplacement [7.615773]
MeasuredMinDisplacement [1.000000]	PASS

Setting [0,850]  			MeasuredAvgDisplacement [3.190236]
MeasuredStdDev [1.282127]		MeasuredMaxDisplacement [5.656854]
MeasuredMinDisplacement [1.000000]	PASS

Setting [600,600]  			MeasuredAvgDisplacement [3.588767]
MeasuredStdDev [1.421781]		MeasuredMaxDisplacement [7.000000]
MeasuredMinDisplacement [2.236068]	PASS

Setting [850,0]  			MeasuredAvgDisplacement [3.597260]
MeasuredStdDev [2.066077]		MeasuredMaxDisplacement [7.280109]
MeasuredMinDisplacement [0.000000]	PASS

Setting [600,-600]  			MeasuredAvgDisplacement [3.926105]
MeasuredStdDev [2.178032]		MeasuredMaxDisplacement [9.848857]
MeasuredMinDisplacement [0.000000]	PASS

Setting [0,-850]  			MeasuredAvgDisplacement [3.248831]
MeasuredStdDev [1.489650]		MeasuredMaxDisplacement [6.000000]
MeasuredMinDisplacement [1.000000]	PASS

Setting [-600,-600]  			MeasuredAvgDisplacement [3.275000]
MeasuredStdDev [1.567241]		MeasuredMaxDisplacement [6.082762]
MeasuredMinDisplacement [0.000000]	PASS

Self-test passed
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:16.416]
CATCH_VALUE => Catch OK : AverageDisplacementLimit = 75 tenths of micronsStdDevLimit = 150 tenths of micronsSetting focus to 0Setting modeSetting [-850,0]  			MeasuredAvgDisplacement [3.392201]MeasuredStdDev [1.854994]		MeasuredMaxDisplacement [8.062257]MeasuredMinDisplacement [0.000000]	PASSSetting [-600,600]  			MeasuredAvgDisplacement [3.816480]MeasuredStdDev [1.791110]		MeasuredMaxDisplacement [7.615773]MeasuredMinDisplacement [1.000000]	PASSSetting [0,850]  			MeasuredAvgDisplacement [3.190236]MeasuredStdDev [1.282127]		MeasuredMaxDisplacement [5.656854]MeasuredMinDisplacement [1.000000]	PASSSetting [600,600]  			MeasuredAvgDisplacement [3.588767]MeasuredStdDev [1.421781]		MeasuredMaxDisplacement [7.000000]MeasuredMinDisplacement [2.236068]	PASSSetting [850,0]  			MeasuredAvgDisplacement [3.597260]MeasuredStdDev [2.066077]		MeasuredMaxDisplacement [7.280109]MeasuredMinDisplacement [0.000000]	PASSSetting [600,-600]  			MeasuredAvgDisplacement [3.926105]MeasuredStdDev [2.178032]		MeasuredMaxDisplacement [9.848857]MeasuredMinDisplacement [0.000000]	PASSSetting [0,-850]  			MeasuredAvgDisplacement [3.248831]MeasuredStdDev [1.489650]		MeasuredMaxDisplacement [6.000000]MeasuredMinDisplacement [1.000000]	PASSSetting [-600,-600]  			MeasuredAvgDisplacement [3.275000]MeasuredStdDev [1.567241]		MeasuredMaxDisplacement [6.082762]MeasuredMinDisplacement [0.000000]	PASSSelf-test passedPass

[2016-04-05 17:40:16.416]
READ_COMMAND => Catch string between camisp --oisselftest 75 150 and [001D38CC:3020213A] :-) == AverageDisplacementLimit = 75 tenths of micronsStdDevLimit = 150 tenths of micronsSetting focus to 0Setting modeSetting [-850,0]  			MeasuredAvgDisplacement [3.392201]MeasuredStdDev [1.854994]		MeasuredMaxDisplacement [8.062257]MeasuredMinDisplacement [0.000000]	PASSSetting [-600,600]  			MeasuredAvgDisplacement [3.816480]MeasuredStdDev [1.791110]		MeasuredMaxDisplacement [7.615773]MeasuredMinDisplacement [1.000000]	PASSSetting [0,850]  			MeasuredAvgDisplacement [3.190236]MeasuredStdDev [1.282127]		MeasuredMaxDisplacement [5.656854]MeasuredMinDisplacement [1.000000]	PASSSetting [600,600]  			MeasuredAvgDisplacement [3.588767]MeasuredStdDev [1.421781]		MeasuredMaxDisplacement [7.000000]MeasuredMinDisplacement [2.236068]	PASSSetting [850,0]  			MeasuredAvgDisplacement [3.597260]MeasuredStdDev [2.066077]		MeasuredMaxDisplacement [7.280109]MeasuredMinDisplacement [0.000000]	PASSSetting [600,-600]  			MeasuredAvgDisplacement [3.926105]MeasuredStdDev [2.178032]		MeasuredMaxDisplacement [9.848857]MeasuredMinDisplacement [0.000000]	PASSSetting [0,-850]  			MeasuredAvgDisplacement [3.248831]MeasuredStdDev [1.489650]		MeasuredMaxDisplacement [6.000000]MeasuredMinDisplacement [1.000000]	PASSSetting [-600,-600]  			MeasuredAvgDisplacement [3.275000]MeasuredStdDev [1.567241]		MeasuredMaxDisplacement [6.082762]MeasuredMinDisplacement [0.000000]	PASSSelf-test passedPass

[2016-04-05 17:40:16.416]
RETURN_VALUE ===> AverageDisplacementLimit = 75 tenths of micronsStdDevLimit = 150 tenths of micronsSetting focus to 0Setting modeSetting [-850,0]  			MeasuredAvgDisplacement [3.392201]MeasuredStdDev [1.854994]		MeasuredMaxDisplacement [8.062257]MeasuredMinDisplacement [0.000000]	PASSSetting [-600,600]  			MeasuredAvgDisplacement [3.816480]MeasuredStdDev [1.791110]		MeasuredMaxDisplacement [7.615773]MeasuredMinDisplacement [1.000000]	PASSSetting [0,850]  			MeasuredAvgDisplacement [3.190236]MeasuredStdDev [1.282127]		MeasuredMaxDisplacement [5.656854]MeasuredMinDisplacement [1.000000]	PASSSetting [600,600]  			MeasuredAvgDisplacement [3.588767]MeasuredStdDev [1.421781]		MeasuredMaxDisplacement [7.000000]MeasuredMinDisplacement [2.236068]	PASSSetting [850,0]  			MeasuredAvgDisplacement [3.597260]MeasuredStdDev [2.066077]		MeasuredMaxDisplacement [7.280109]MeasuredMinDisplacement [0.000000]	PASSSetting [600,-600]  			MeasuredAvgDisplacement [3.926105]MeasuredStdDev [2.178032]		MeasuredMaxDisplacement [9.848857]MeasuredMinDisplacement [0.000000]	PASSSetting [0,-850]  			MeasuredAvgDisplacement [3.248831]MeasuredStdDev [1.489650]		MeasuredMaxDisplacement [6.000000]MeasuredMinDisplacement [1.000000]	PASSSetting [-600,-600]  			MeasuredAvgDisplacement [3.275000]MeasuredStdDev [1.567241]		MeasuredMaxDisplacement [6.082762]MeasuredMinDisplacement [0.000000]	PASSSelf-test passedPass
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 4.647655s) ++++++++++++++

[2016-04-05 17:40:16.416]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Back_Displacement 
}

[2016-04-05 17:40:16.416]
RETURN_VALUE ===> AverageDisplacementLimit = 75 tenths of micronsStdDevLimit = 150 tenths of micronsSetting focus to 0Setting modeSetting [-850,0]  			MeasuredAvgDisplacement [3.392201]MeasuredStdDev [1.854994]		MeasuredMaxDisplacement [8.062257]MeasuredMinDisplacement [0.000000]	PASSSetting [-600,600]  			MeasuredAvgDisplacement [3.816480]MeasuredStdDev [1.791110]		MeasuredMaxDisplacement [7.615773]MeasuredMinDisplacement [1.000000]	PASSSetting [0,850]  			MeasuredAvgDisplacement [3.190236]MeasuredStdDev [1.282127]		MeasuredMaxDisplacement [5.656854]MeasuredMinDisplacement [1.000000]	PASSSetting [600,600]  			MeasuredAvgDisplacement [3.588767]MeasuredStdDev [1.421781]		MeasuredMaxDisplacement [7.000000]MeasuredMinDisplacement [2.236068]	PASSSetting [850,0]  			MeasuredAvgDisplacement [3.597260]MeasuredStdDev [2.066077]		MeasuredMaxDisplacement [7.280109]MeasuredMinDisplacement [0.000000]	PASSSetting [600,-600]  			MeasuredAvgDisplacement [3.926105]MeasuredStdDev [2.178032]		MeasuredMaxDisplacement [9.848857]MeasuredMinDisplacement [0.000000]	PASSSetting [0,-850]  			MeasuredAvgDisplacement [3.248831]MeasuredStdDev [1.489650]		MeasuredMaxDisplacement [6.000000]MeasuredMinDisplacement [1.000000]	PASSSetting [-600,-600]  			MeasuredAvgDisplacement [3.275000]MeasuredStdDev [1.567241]		MeasuredMaxDisplacement [6.082762]MeasuredMinDisplacement [0.000000]	PASSSelf-test passedPass
++++++++++ [9] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:40:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --preview off 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:16.416]
Write to ---> MOBILE , command[camisp --preview off(STRING)]

[2016-04-05 17:40:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --preview off,2,0;return value:0!

[2016-04-05 17:40:16.416]
PostTXToUI ===> 
{
Info ==> camisp --preview off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:16.416]
RETURN_VALUE ===> AverageDisplacementLimit = 75 tenths of micronsStdDevLimit = 150 tenths of micronsSetting focus to 0Setting modeSetting [-850,0]  			MeasuredAvgDisplacement [3.392201]MeasuredStdDev [1.854994]		MeasuredMaxDisplacement [8.062257]MeasuredMinDisplacement [0.000000]	PASSSetting [-600,600]  			MeasuredAvgDisplacement [3.816480]MeasuredStdDev [1.791110]		MeasuredMaxDisplacement [7.615773]MeasuredMinDisplacement [1.000000]	PASSSetting [0,850]  			MeasuredAvgDisplacement [3.190236]MeasuredStdDev [1.282127]		MeasuredMaxDisplacement [5.656854]MeasuredMinDisplacement [1.000000]	PASSSetting [600,600]  			MeasuredAvgDisplacement [3.588767]MeasuredStdDev [1.421781]		MeasuredMaxDisplacement [7.000000]MeasuredMinDisplacement [2.236068]	PASSSetting [850,0]  			MeasuredAvgDisplacement [3.597260]MeasuredStdDev [2.066077]		MeasuredMaxDisplacement [7.280109]MeasuredMinDisplacement [0.000000]	PASSSetting [600,-600]  			MeasuredAvgDisplacement [3.926105]MeasuredStdDev [2.178032]		MeasuredMaxDisplacement [9.848857]MeasuredMinDisplacement [0.000000]	PASSSetting [0,-850]  			MeasuredAvgDisplacement [3.248831]MeasuredStdDev [1.489650]		MeasuredMaxDisplacement [6.000000]MeasuredMinDisplacement [1.000000]	PASSSetting [-600,-600]  			MeasuredAvgDisplacement [3.275000]MeasuredStdDev [1.567241]		MeasuredMaxDisplacement [6.082762]MeasuredMinDisplacement [0.000000]	PASSSelf-test passedPass
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005692s) ++++++++++++++++++++

[2016-04-05 17:40:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --preview off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 20 
END ==> :-) 
}

[2016-04-05 17:40:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --preview off
RunDis off
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:20.000000);return value:0!

[2016-04-05 17:40:16.416]
PostRXToUI ===> 
{
Info ==> camisp --preview off
RunDis off
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:16.416 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:16.416]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:16.416]
CATCH_VALUE => Catch OK : RunDis offPass

[2016-04-05 17:40:16.416]
READ_COMMAND => Catch string between camisp --preview off and [001D38CC:3020213A] :-) == RunDis offPass

[2016-04-05 17:40:16.416]
RETURN_VALUE ===> RunDis offPass
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.511594s) ++++++++++++++

[2016-04-05 17:40:16.416]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:16.416]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-04-05 17:40:16.416]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-04-05 17:40:16.416]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:16.416 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:16.416]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:16.416]
RETURN_VALUE ===> RunDis offPass
++++++++++++++++++++ [12] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005244s) ++++++++++++++++++++

[2016-04-05 17:40:16.416]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --exit 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 20 
END ==> :-) 
}

[2016-04-05 17:40:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:20.000000);return value:0!

[2016-04-05 17:40:17.417]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:17.417 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:17.417]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:17.417]
CATCH_VALUE => Catch OK : RunExitPass

[2016-04-05 17:40:17.417]
READ_COMMAND => Catch string between camisp --exit and [001D38CC:3020213A] :-) == RunExitPass

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> RunExitPass
++++++++++++++ [13] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.281922s) ++++++++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Back_Displacement 
REGEX ==> Self-test.*?(Pass|Fail) 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> Pass
++++++++++++++ [14] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000460s) ++++++++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*SphereSelfTest_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [Pass], spec is [Item0=Pass ; ], mode is [5]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> Pass
+++++++++++++++ [15] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000628s) +++++++++++++++

[2016-04-05 17:40:17.417]
================== END TEST SphereSelfTest (TestResult : PASS ; Duration : 7.845476s) ==================

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(SphereSelfTest,,,Pass,Pass,Pass,,)

[2016-04-05 17:40:17.417]
Item Name:SphereSelfTest, <Pass>

[2016-04-05 17:40:17.417]
====================== START TEST BACK CAMERA DISPLACEMENT_AVG[-850 0] (Item137) ======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : Camera_Displacement_Data:RETURN_VALUE: ===> parameters:
{
SAVE_KEY ==> Displacement_Avg 
CATCH_REGEX ==> MeasuredAvgDisplacement \[(.*?)\] 
SEPERATE ==> Setting 
INPUT_KEY ==> Back_Displacement 
}

[2016-04-05 17:40:17.417]
(
    "AverageDisplacementLimit = 75 tenths of micronsStdDevLimit = 150 tenths of microns",
    " focus to 0",
    " mode",
    " [-850,0]  \t\t\tMeasuredAvgDisplacement [3.392201]MeasuredStdDev [1.854994]\t\tMeasuredMaxDisplacement [8.062257]MeasuredMinDisplacement [0.000000]\tPASS",
    " [-600,600]  \t\t\tMeasuredAvgDisplacement [3.816480]MeasuredStdDev [1.791110]\t\tMeasuredMaxDisplacement [7.615773]MeasuredMinDisplacement [1.000000]\tPASS",
    " [0,850]  \t\t\tMeasuredAvgDisplacement [3.190236]MeasuredStdDev [1.282127]\t\tMeasuredMaxDisplacement [5.656854]MeasuredMinDisplacement [1.000000]\tPASS",
    " [600,600]  \t\t\tMeasuredAvgDisplacement [3.588767]MeasuredStdDev [1.421781]\t\tMeasuredMaxDisplacement [7.000000]MeasuredMinDisplacement [2.236068]\tPASS",
    " [850,0]  \t\t\tMeasuredAvgDisplacement [3.597260]MeasuredStdDev [2.066077]\t\tMeasuredMaxDisplacement [7.280109]MeasuredMinDisplacement [0.000000]\tPASS",
    " [600,-600]  \t\t\tMeasuredAvgDisplacement [3.926105]MeasuredStdDev [2.178032]\t\tMeasuredMaxDisplacement [9.848857]MeasuredMinDisplacement [0.000000]\tPASS",
    " [0,-850]  \t\t\tMeasuredAvgDisplacement [3.248831]MeasuredStdDev [1.489650]\t\tMeasuredMaxDisplacement [6.000000]MeasuredMinDisplacement [1.000000]\tPASS",
    " [-600,-600]  \t\t\tMeasuredAvgDisplacement [3.275000]MeasuredStdDev [1.567241]\t\tMeasuredMaxDisplacement [6.082762]MeasuredMinDisplacement [0.000000]\tPASSSelf-test passedPass"
)

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 
++++++++ [1] Camera_Displacement_Data:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001743s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Avg_1 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.392201
++++++++ [2] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Avg[-850 0]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [3.392201], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.392201
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000905s) +++++++++++++++

[2016-04-05 17:40:17.417]
======= END TEST Back Camera Displacement_Avg[-850 0] (TestResult : PASS ; Duration : 0.007894s) =======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Avg[-850 0],,,3.392201,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Avg[-850 0], {NA}

[2016-04-05 17:40:17.417]
====================== START TEST BACK CAMERA DISPLACEMENT_STD[-850 0] (Item138) ======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : Camera_Displacement_Data:RETURN_VALUE: ===> parameters:
{
SAVE_KEY ==> Displacement_Std 
CATCH_REGEX ==> MeasuredStdDev \[(.*?)\] 
SEPERATE ==> Setting 
INPUT_KEY ==> Back_Displacement 
}

[2016-04-05 17:40:17.417]
(
    "AverageDisplacementLimit = 75 tenths of micronsStdDevLimit = 150 tenths of microns",
    " focus to 0",
    " mode",
    " [-850,0]  \t\t\tMeasuredAvgDisplacement [3.392201]MeasuredStdDev [1.854994]\t\tMeasuredMaxDisplacement [8.062257]MeasuredMinDisplacement [0.000000]\tPASS",
    " [-600,600]  \t\t\tMeasuredAvgDisplacement [3.816480]MeasuredStdDev [1.791110]\t\tMeasuredMaxDisplacement [7.615773]MeasuredMinDisplacement [1.000000]\tPASS",
    " [0,850]  \t\t\tMeasuredAvgDisplacement [3.190236]MeasuredStdDev [1.282127]\t\tMeasuredMaxDisplacement [5.656854]MeasuredMinDisplacement [1.000000]\tPASS",
    " [600,600]  \t\t\tMeasuredAvgDisplacement [3.588767]MeasuredStdDev [1.421781]\t\tMeasuredMaxDisplacement [7.000000]MeasuredMinDisplacement [2.236068]\tPASS",
    " [850,0]  \t\t\tMeasuredAvgDisplacement [3.597260]MeasuredStdDev [2.066077]\t\tMeasuredMaxDisplacement [7.280109]MeasuredMinDisplacement [0.000000]\tPASS",
    " [600,-600]  \t\t\tMeasuredAvgDisplacement [3.926105]MeasuredStdDev [2.178032]\t\tMeasuredMaxDisplacement [9.848857]MeasuredMinDisplacement [0.000000]\tPASS",
    " [0,-850]  \t\t\tMeasuredAvgDisplacement [3.248831]MeasuredStdDev [1.489650]\t\tMeasuredMaxDisplacement [6.000000]MeasuredMinDisplacement [1.000000]\tPASS",
    " [-600,-600]  \t\t\tMeasuredAvgDisplacement [3.275000]MeasuredStdDev [1.567241]\t\tMeasuredMaxDisplacement [6.082762]MeasuredMinDisplacement [0.000000]\tPASSSelf-test passedPass"
)

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 
++++++++ [1] Camera_Displacement_Data:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001455s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Std_1 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.854994
++++++++ [2] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Std[-850 0]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [1.854994], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.854994
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000811s) +++++++++++++++

[2016-04-05 17:40:17.417]
======= END TEST Back Camera Displacement_Std[-850 0] (TestResult : PASS ; Duration : 0.007017s) =======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Std[-850 0],,,1.854994,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Std[-850 0], {NA}

[2016-04-05 17:40:17.417]
===================== START TEST BACK CAMERA DISPLACEMENT_AVG[-600 600] (Item139) =====================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Avg_2 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.816480
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Avg[-600 600]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [3.816480], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.816480
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000764s) +++++++++++++++

[2016-04-05 17:40:17.417]
====== END TEST Back Camera Displacement_Avg[-600 600] (TestResult : PASS ; Duration : 0.003997s) ======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Avg[-600 600],,,3.816480,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Avg[-600 600], {NA}

[2016-04-05 17:40:17.417]
===================== START TEST BACK CAMERA DISPLACEMENT_STD[-600 600] (Item140) =====================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Std_2 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.791110
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Std[-600 600]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [1.791110], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.791110
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000758s) +++++++++++++++

[2016-04-05 17:40:17.417]
====== END TEST Back Camera Displacement_Std[-600 600] (TestResult : PASS ; Duration : 0.003908s) ======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Std[-600 600],,,1.791110,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Std[-600 600], {NA}

[2016-04-05 17:40:17.417]
======================= START TEST BACK CAMERA DISPLACEMENT_AVG[0 850] (Item141) =======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Avg_3 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.190236
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Avg[0 850]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [3.190236], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.190236
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000772s) +++++++++++++++

[2016-04-05 17:40:17.417]
======= END TEST Back Camera Displacement_Avg[0 850] (TestResult : PASS ; Duration : 0.004010s) =======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Avg[0 850],,,3.190236,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Avg[0 850], {NA}

[2016-04-05 17:40:17.417]
======================= START TEST BACK CAMERA DISPLACEMENT_STD[0 850] (Item142) =======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Std_3 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.282127
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Std[0 850]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [1.282127], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.282127
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000775s) +++++++++++++++

[2016-04-05 17:40:17.417]
======= END TEST Back Camera Displacement_Std[0 850] (TestResult : PASS ; Duration : 0.003920s) =======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Std[0 850],,,1.282127,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Std[0 850], {NA}

[2016-04-05 17:40:17.417]
====================== START TEST BACK CAMERA DISPLACEMENT_AVG[600 600] (Item143) ======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Avg_4 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.588767
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Avg[600 600]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [3.588767], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.588767
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000767s) +++++++++++++++

[2016-04-05 17:40:17.417]
====== END TEST Back Camera Displacement_Avg[600 600] (TestResult : PASS ; Duration : 0.003975s) ======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Avg[600 600],,,3.588767,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Avg[600 600], {NA}

[2016-04-05 17:40:17.417]
====================== START TEST BACK CAMERA DISPLACEMENT_STD[600 600] (Item144) ======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Std_4 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.421781
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Std[600 600]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [1.421781], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.421781
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000766s) +++++++++++++++

[2016-04-05 17:40:17.417]
====== END TEST Back Camera Displacement_Std[600 600] (TestResult : PASS ; Duration : 0.004051s) ======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Std[600 600],,,1.421781,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Std[600 600], {NA}

[2016-04-05 17:40:17.417]
======================= START TEST BACK CAMERA DISPLACEMENT_AVG[850 0] (Item145) =======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Avg_5 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.597260
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Avg[850 0]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [3.597260], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.597260
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000780s) +++++++++++++++

[2016-04-05 17:40:17.417]
======= END TEST Back Camera Displacement_Avg[850 0] (TestResult : PASS ; Duration : 0.003976s) =======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Avg[850 0],,,3.597260,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Avg[850 0], {NA}

[2016-04-05 17:40:17.417]
======================= START TEST BACK CAMERA DISPLACEMENT_STD[850 0] (Item146) =======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Std_5 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 2.066077
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Std[850 0]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [2.066077], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 2.066077
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000770s) +++++++++++++++

[2016-04-05 17:40:17.417]
======= END TEST Back Camera Displacement_Std[850 0] (TestResult : PASS ; Duration : 0.003959s) =======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Std[850 0],,,2.066077,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Std[850 0], {NA}

[2016-04-05 17:40:17.417]
===================== START TEST BACK CAMERA DISPLACEMENT_AVG[600 -600] (Item147) =====================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Avg_6 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.926105
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Avg[600 -600]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [3.926105], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.926105
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000786s) +++++++++++++++

[2016-04-05 17:40:17.417]
====== END TEST Back Camera Displacement_Avg[600 -600] (TestResult : PASS ; Duration : 0.004045s) ======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Avg[600 -600],,,3.926105,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Avg[600 -600], {NA}

[2016-04-05 17:40:17.417]
===================== START TEST BACK CAMERA DISPLACEMENT_STD[600 -600] (Item148) =====================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Std_6 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 2.178032
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Std[600 -600]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [2.178032], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 2.178032
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000807s) +++++++++++++++

[2016-04-05 17:40:17.417]
====== END TEST Back Camera Displacement_Std[600 -600] (TestResult : PASS ; Duration : 0.004035s) ======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Std[600 -600],,,2.178032,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Std[600 -600], {NA}

[2016-04-05 17:40:17.417]
====================== START TEST BACK CAMERA DISPLACEMENT_AVG[0 -850] (Item149) ======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Avg_7 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.248831
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Avg[0 -850]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [3.248831], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.248831
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000773s) +++++++++++++++

[2016-04-05 17:40:17.417]
======= END TEST Back Camera Displacement_Avg[0 -850] (TestResult : PASS ; Duration : 0.003951s) =======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Avg[0 -850],,,3.248831,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Avg[0 -850], {NA}

[2016-04-05 17:40:17.417]
====================== START TEST BACK CAMERA DISPLACEMENT_STD[0 -850] (Item150) ======================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Std_7 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.489650
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Std[0 -850]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [1.489650], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.489650
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000879s) +++++++++++++++

[2016-04-05 17:40:17.417]
======= END TEST Back Camera Displacement_Std[0 -850] (TestResult : PASS ; Duration : 0.004551s) =======

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Std[0 -850],,,1.489650,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Std[0 -850], {NA}

[2016-04-05 17:40:17.417]
===================== START TEST BACK CAMERA DISPLACEMENT_AVG[-600 -600] (Item151) =====================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Avg_8 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.275000
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Avg[-600 -600]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [3.275000], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 3.275000
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000741s) +++++++++++++++

[2016-04-05 17:40:17.417]
===== END TEST Back Camera Displacement_Avg[-600 -600] (TestResult : PASS ; Duration : 0.003899s) =====

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Avg[-600 -600],,,3.275000,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Avg[-600 -600], {NA}

[2016-04-05 17:40:17.417]
===================== START TEST BACK CAMERA DISPLACEMENT_STD[-600 -600] (Item152) =====================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Displacement_Std_8 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.567241
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Back Camera Displacement_Std[-600 -600]_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [1.567241], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 1.567241
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000828s) +++++++++++++++

[2016-04-05 17:40:17.417]
===== END TEST Back Camera Displacement_Std[-600 -600] (TestResult : PASS ; Duration : 0.004037s) =====

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Back Camera Displacement_Std[-600 -600],,,1.567241,NA,NA,,)

[2016-04-05 17:40:17.417]
Item Name:Back Camera Displacement_Std[-600 -600], {NA}

[2016-04-05 17:40:17.417]
================================ START TEST FIND CAMERA_FRONT (Item153) ================================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> camispFind 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> found 2 sensors :  
pick number 0, front  detected 
pick number 2, back  detected 
Pass
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) ++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> camispFind 
REGEX ==> (front  detected) 
}

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> front  detected
+++++++++++++++ [2] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000205s) +++++++++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Find Camera_Front_spec*] 
 
}

[2016-04-05 17:40:17.417]
JUDGE_SPEC =>  value is [front  detected], spec is [Item0=front  detected ; ], mode is [5]

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> front  detected
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000829s) +++++++++++++++

[2016-04-05 17:40:17.417]
================ END TEST Find Camera_Front (TestResult : PASS ; Duration : 0.006001s) ================

[2016-04-05 17:40:17.417]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Find Camera_Front,,,front  detected,front  detected,front  detected,,)

[2016-04-05 17:40:17.417]
Item Name:Find Camera_Front, <front  detected>

[2016-04-05 17:40:17.417]
================================ START TEST CAMERA DLI_FRONT (Item154) ================================

[2016-04-05 17:40:17.417]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --pick front 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:17.417]
Write to ---> MOBILE , command[camisp --pick front(STRING)]

[2016-04-05 17:40:17.417]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --pick front,2,0;return value:0!

[2016-04-05 17:40:17.417]
PostTXToUI ===> 
{
Info ==> camisp --pick front 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:17.417 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:17.417]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:17.417]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006683s) +++++++++++++++++++++

[2016-04-05 17:40:17.417]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --pick front 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --pick front
picked : front 
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:18.418]
PostRXToUI ===> 
{
Info ==> camisp --pick front
picked : front 
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:18.418 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:18.418]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:18.418]
CATCH_VALUE => Catch OK : picked : front Pass

[2016-04-05 17:40:18.418]
READ_COMMAND => Catch string between camisp --pick front and [001D38CC:3020213A] :-) == picked : front Pass

[2016-04-05 17:40:18.418]
RETURN_VALUE ===> picked : front Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.092690s) ++++++++++++++

[2016-04-05 17:40:18.418]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --dli 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:18.418]
Write to ---> MOBILE , command[camisp --dli(STRING)]

[2016-04-05 17:40:18.418]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --dli,2,0;return value:0!

[2016-04-05 17:40:18.418]
PostTXToUI ===> 
{
Info ==> camisp --dli 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:18.418 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:18.418]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:18.418]
RETURN_VALUE ===> picked : front Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005667s) +++++++++++++++++++++

[2016-04-05 17:40:18.418]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --dli 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 120 
END ==> :-) 
}

[2016-04-05 17:40:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --dli
RunExit
Capture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480
Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX314_colorbar_vga_420_141000.bin
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:120.000000);return value:0!

[2016-04-05 17:40:21.421]
PostRXToUI ===> 
{
Info ==> camisp --dli
RunExit
Capture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480
Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX314_colorbar_vga_420_141000.bin
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:21.421 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:21.421]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:21.421]
CATCH_VALUE => Catch OK : RunExitCapture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX314_colorbar_vga_420_141000.binRunExitPass

[2016-04-05 17:40:21.421]
READ_COMMAND => Catch string between camisp --dli and [001D38CC:3020213A] :-) == RunExitCapture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX314_colorbar_vga_420_141000.binRunExitPass

[2016-04-05 17:40:21.421]
RETURN_VALUE ===> RunExitCapture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX314_colorbar_vga_420_141000.binRunExitPass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.413120s) ++++++++++++++

[2016-04-05 17:40:21.421]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Front_Dli 
}

[2016-04-05 17:40:21.421]
RETURN_VALUE ===> RunExitCapture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480Using DLI File: nandfs:\AppleInternal\Diags\ISP\D10D11\MX314_colorbar_vga_420_141000.binRunExitPass
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:40:21.421]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Front_Dli 
REGEX ==> (Pass) 
}

[2016-04-05 17:40:21.421]
RETURN_VALUE ===> Pass
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000187s) +++++++++++++++

[2016-04-05 17:40:21.421]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Camera Dli_Front_spec*] 
 
}

[2016-04-05 17:40:21.421]
JUDGE_SPEC =>  value is [Pass], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:21.421]
RETURN_VALUE ===> Pass
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000634s) +++++++++++++++

[2016-04-05 17:40:21.421]
================= END TEST Camera Dli_Front (TestResult : PASS ; Duration : 3.528615s) =================

[2016-04-05 17:40:21.421]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Camera Dli_Front,,,Pass,NA,NA,,)

[2016-04-05 17:40:21.421]
Item Name:Camera Dli_Front, {NA}

[2016-04-05 17:40:21.421]
================================ START TEST FRONT CAMERA RGB (Item155) ================================

[2016-04-05 17:40:21.421]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --preview on 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:21.421]
Write to ---> MOBILE , command[camisp --preview on(STRING)]

[2016-04-05 17:40:21.421]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --preview on,2,0;return value:0!

[2016-04-05 17:40:21.421]
PostTXToUI ===> 
{
Info ==> camisp --preview on 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:21.421 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:21.421]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:21.421]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007426s) +++++++++++++++++++++

[2016-04-05 17:40:21.421]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --preview on 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --preview on
RunDis on
Capture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:23.423]
PostRXToUI ===> 
{
Info ==> camisp --preview on
RunDis on
Capture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:23.423 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:23.423]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:23.423]
CATCH_VALUE => Catch OK : RunDis onCapture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480Pass

[2016-04-05 17:40:23.423]
READ_COMMAND => Catch string between camisp --preview on and [001D38CC:3020213A] :-) == RunDis onCapture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480Pass

[2016-04-05 17:40:23.423]
RETURN_VALUE ===> RunDis onCapture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.777422s) ++++++++++++++

[2016-04-05 17:40:23.423]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Front R Led On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:23.423]
Write to ---> FIXTURE , command[Front R Led On(STRING)]

[2016-04-05 17:40:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Front R Led On,2,0;return value:0!

[2016-04-05 17:40:23.423]
PostTXToUI ===> 
{
Info ==> Front R Led On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:23.423 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:23.423]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:23.423]
RETURN_VALUE ===> RunDis onCapture buffer allocated at: 0xC688AED80, 0xC6891F580 of 460800 bytes each with default value of 0x0 width 640 height 480Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005988s) +++++++++++++++++++++

[2016-04-05 17:40:23.423]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Front R Led On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=Fail ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Front R Led On
Front R Led On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:23.423]
PostRXToUI ===> 
{
Info ==> Front R Led On
Front R Led On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:23.423 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:23.423]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:23.423]
CATCH_VALUE => Catch OK : Front R Led On Pass

[2016-04-05 17:40:23.423]
READ_COMMAND => Catch string between Front R Led On and @_@ == Front R Led On Pass

[2016-04-05 17:40:23.423]
RETURN_VALUE ===> Front R Led On Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.137678s) ++++++++++++++

[2016-04-05 17:40:23.423]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 600 
}

[2016-04-05 17:40:23.423]
RETURN_VALUE ===> Front R Led On Pass
+++++++++++++++++ [5] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.602133s) +++++++++++++++++

[2016-04-05 17:40:23.423]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --rgb 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:23.423]
Write to ---> MOBILE , command[camisp --rgb(STRING)]

[2016-04-05 17:40:23.423]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --rgb,2,0;return value:0!

[2016-04-05 17:40:23.423]
PostTXToUI ===> 
{
Info ==> camisp --rgb 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:23.423 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:23.423]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:23.423]
RETURN_VALUE ===> Front R Led On Pass
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007573s) +++++++++++++++++++++

[2016-04-05 17:40:23.423]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --rgb 
PASS_RECEIVE ==> Item0=Red ; Item1=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --rgb
RunRGB begin
RunRGB R 0xE9 G 0x0 B 0x22
Red
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:24.424]
PostRXToUI ===> 
{
Info ==> camisp --rgb
RunRGB begin
RunRGB R 0xE9 G 0x0 B 0x22
Red
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:24.424 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:24.424]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:24.424]
CATCH_VALUE => Catch OK : RunRGB beginRunRGB R 0xE9 G 0x0 B 0x22RedPass

[2016-04-05 17:40:24.424]
READ_COMMAND => Catch string between camisp --rgb and [001D38CC:3020213A] :-) == RunRGB beginRunRGB R 0xE9 G 0x0 B 0x22RedPass

[2016-04-05 17:40:24.424]
RETURN_VALUE ===> RunRGB beginRunRGB R 0xE9 G 0x0 B 0x22RedPass
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.995965s) ++++++++++++++

[2016-04-05 17:40:24.424]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Front R Led Off 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:24.424]
Write to ---> FIXTURE , command[Front R Led Off(STRING)]

[2016-04-05 17:40:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Front R Led Off,2,0;return value:0!

[2016-04-05 17:40:24.424]
PostTXToUI ===> 
{
Info ==> Front R Led Off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:24.424 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:24.424]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:24.424]
RETURN_VALUE ===> RunRGB beginRunRGB R 0xE9 G 0x0 B 0x22RedPass
+++++++++++++++++++++ [8] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005658s) +++++++++++++++++++++

[2016-04-05 17:40:24.424]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Front R Led Off 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=Fail ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Front R Led Off
Front R Led Off Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:24.424]
PostRXToUI ===> 
{
Info ==> Front R Led Off
Front R Led Off Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:24.424 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:24.424]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:24.424]
CATCH_VALUE => Catch OK : Front R Led Off Pass

[2016-04-05 17:40:24.424]
READ_COMMAND => Catch string between Front R Led Off and @_@ == Front R Led Off Pass

[2016-04-05 17:40:24.424]
RETURN_VALUE ===> Front R Led Off Pass
++++++++++++++ [9] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022538s) ++++++++++++++

[2016-04-05 17:40:24.424]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Front G Led On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:24.424]
Write to ---> FIXTURE , command[Front G Led On(STRING)]

[2016-04-05 17:40:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Front G Led On,2,0;return value:0!

[2016-04-05 17:40:24.424]
PostTXToUI ===> 
{
Info ==> Front G Led On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:24.424 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:24.424]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:24.424]
RETURN_VALUE ===> Front R Led Off Pass
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005325s) ++++++++++++++++++++

[2016-04-05 17:40:24.424]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Front G Led On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:24.424]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Front G Led On
Front G Led On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:24.424]
PostRXToUI ===> 
{
Info ==> Front G Led On
Front G Led On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:24.424 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:24.424]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:24.424]
CATCH_VALUE => Catch OK : Front G Led On Pass

[2016-04-05 17:40:24.424]
READ_COMMAND => Catch string between Front G Led On and @_@ == Front G Led On Pass

[2016-04-05 17:40:24.424]
RETURN_VALUE ===> Front G Led On Pass
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.120075s) ++++++++++++++

[2016-04-05 17:40:24.424]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 800 
}

[2016-04-05 17:40:25.425]
RETURN_VALUE ===> Front G Led On Pass
++++++++++++++++ [12] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.804982s) ++++++++++++++++

[2016-04-05 17:40:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --rgb 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:25.425]
Write to ---> MOBILE , command[camisp --rgb(STRING)]

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --rgb,2,0;return value:0!

[2016-04-05 17:40:25.425]
PostTXToUI ===> 
{
Info ==> camisp --rgb 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:25.425]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:25.425]
RETURN_VALUE ===> Front G Led On Pass
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007099s) ++++++++++++++++++++

[2016-04-05 17:40:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --rgb 
PASS_RECEIVE ==> Item0=Green ; Item1=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --rgb
RunRGB begin
RunRGB R 0x0 G 0x90 B 0x29
Green
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:25.425]
PostRXToUI ===> 
{
Info ==> camisp --rgb
RunRGB begin
RunRGB R 0x0 G 0x90 B 0x29
Green
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:25.425]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:25.425]
CATCH_VALUE => Catch OK : RunRGB beginRunRGB R 0x0 G 0x90 B 0x29GreenPass

[2016-04-05 17:40:25.425]
READ_COMMAND => Catch string between camisp --rgb and [001D38CC:3020213A] :-) == RunRGB beginRunRGB R 0x0 G 0x90 B 0x29GreenPass

[2016-04-05 17:40:25.425]
RETURN_VALUE ===> RunRGB beginRunRGB R 0x0 G 0x90 B 0x29GreenPass
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021193s) ++++++++++++++

[2016-04-05 17:40:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Front G Led Off 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:25.425]
Write to ---> FIXTURE , command[Front G Led Off(STRING)]

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Front G Led Off,2,0;return value:0!

[2016-04-05 17:40:25.425]
PostTXToUI ===> 
{
Info ==> Front G Led Off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:25.425]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:25.425]
RETURN_VALUE ===> RunRGB beginRunRGB R 0x0 G 0x90 B 0x29GreenPass
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005149s) ++++++++++++++++++++

[2016-04-05 17:40:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Front G Led Off 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=Fail ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Front G Led Off
Front G Led Off Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:25.425]
PostRXToUI ===> 
{
Info ==> Front G Led Off
Front G Led Off Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:25.425]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:25.425]
CATCH_VALUE => Catch OK : Front G Led Off Pass

[2016-04-05 17:40:25.425]
READ_COMMAND => Catch string between Front G Led Off and @_@ == Front G Led Off Pass

[2016-04-05 17:40:25.425]
RETURN_VALUE ===> Front G Led Off Pass
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.033924s) ++++++++++++++

[2016-04-05 17:40:25.425]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Front B Led On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:25.425]
Write to ---> FIXTURE , command[Front B Led On(STRING)]

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Front B Led On,2,0;return value:0!

[2016-04-05 17:40:25.425]
PostTXToUI ===> 
{
Info ==> Front B Led On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:25.425 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:25.425]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:25.425]
RETURN_VALUE ===> Front G Led Off Pass
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005509s) ++++++++++++++++++++

[2016-04-05 17:40:25.425]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Front B Led On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=Fail ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:25.425]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Front B Led On
Front B Led On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:25.425]
PostRXToUI ===> 
{
Info ==> Front B Led On
Front B Led On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:25.425 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:25.425]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:25.425]
CATCH_VALUE => Catch OK : Front B Led On Pass

[2016-04-05 17:40:25.425]
READ_COMMAND => Catch string between Front B Led On and @_@ == Front B Led On Pass

[2016-04-05 17:40:25.425]
RETURN_VALUE ===> Front B Led On Pass
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.135814s) ++++++++++++++

[2016-04-05 17:40:25.425]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 600 
}

[2016-04-05 17:40:26.426]
RETURN_VALUE ===> Front B Led On Pass
++++++++++++++++ [19] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.605058s) ++++++++++++++++

[2016-04-05 17:40:26.426]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --rgb 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:26.426]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:26.426]
Write to ---> MOBILE , command[camisp --rgb(STRING)]

[2016-04-05 17:40:26.426]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --rgb,2,0;return value:0!

[2016-04-05 17:40:26.426]
PostTXToUI ===> 
{
Info ==> camisp --rgb 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:26.426 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:26.426]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:26.426]
RETURN_VALUE ===> Front B Led On Pass
++++++++++++++++++++ [20] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006881s) ++++++++++++++++++++

[2016-04-05 17:40:26.426]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --rgb 
PASS_RECEIVE ==> Item0=Blue ; Item1=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:26.426]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --rgb
RunRGB begin
RunRGB R 0x0 G 0x31 B 0xFF
Blue
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:26.426]
PostRXToUI ===> 
{
Info ==> camisp --rgb
RunRGB begin
RunRGB R 0x0 G 0x31 B 0xFF
Blue
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:26.426 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:26.426]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:26.426]
CATCH_VALUE => Catch OK : RunRGB beginRunRGB R 0x0 G 0x31 B 0xFFBluePass

[2016-04-05 17:40:26.426]
READ_COMMAND => Catch string between camisp --rgb and [001D38CC:3020213A] :-) == RunRGB beginRunRGB R 0x0 G 0x31 B 0xFFBluePass

[2016-04-05 17:40:26.426]
RETURN_VALUE ===> RunRGB beginRunRGB R 0x0 G 0x31 B 0xFFBluePass
++++++++++++++ [21] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021309s) ++++++++++++++

[2016-04-05 17:40:26.426]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Front B Led Off 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:26.426]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:26.426]
Write to ---> FIXTURE , command[Front B Led Off(STRING)]

[2016-04-05 17:40:26.426]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Front B Led Off,2,0;return value:0!

[2016-04-05 17:40:26.426]
PostTXToUI ===> 
{
Info ==> Front B Led Off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:26.426 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:26.426]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:26.426]
RETURN_VALUE ===> RunRGB beginRunRGB R 0x0 G 0x31 B 0xFFBluePass
++++++++++++++++++++ [22] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005604s) ++++++++++++++++++++

[2016-04-05 17:40:26.426]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Front B Led Off 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=Fail ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:26.426]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Front B Led Off
Front B Led Off Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:26.426]
PostRXToUI ===> 
{
Info ==> Front B Led Off
Front B Led Off Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:26.426 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:26.426]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:26.426]
CATCH_VALUE => Catch OK : Front B Led Off Pass

[2016-04-05 17:40:26.426]
READ_COMMAND => Catch string between Front B Led Off and @_@ == Front B Led Off Pass

[2016-04-05 17:40:26.426]
RETURN_VALUE ===> Front B Led Off Pass
++++++++++++++ [23] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021609s) ++++++++++++++

[2016-04-05 17:40:26.426]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --preview off 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:26.426]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:26.426]
Write to ---> MOBILE , command[camisp --preview off(STRING)]

[2016-04-05 17:40:26.426]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --preview off,2,0;return value:0!

[2016-04-05 17:40:26.426]
PostTXToUI ===> 
{
Info ==> camisp --preview off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:26.426 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:26.426]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:26.426]
RETURN_VALUE ===> Front B Led Off Pass
++++++++++++++++++++ [24] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005532s) ++++++++++++++++++++

[2016-04-05 17:40:26.426]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --preview off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --preview off
RunDis off
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:27.427]
PostRXToUI ===> 
{
Info ==> camisp --preview off
RunDis off
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:27.427 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:27.427]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:27.427]
CATCH_VALUE => Catch OK : RunDis offPass

[2016-04-05 17:40:27.427]
READ_COMMAND => Catch string between camisp --preview off and [001D38CC:3020213A] :-) == RunDis offPass

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> RunDis offPass
++++++++++++++ [25] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.521108s) ++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:27.427]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-04-05 17:40:27.427]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:27.427 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:27.427]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> RunDis offPass
++++++++++++++++++++ [26] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005536s) ++++++++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --exit 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-04-05 17:40:27.427]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:27.427 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:27.427]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:27.427]
CATCH_VALUE => Catch OK : RunExitPass

[2016-04-05 17:40:27.427]
READ_COMMAND => Catch string between camisp --exit and [001D38CC:3020213A] :-) == RunExitPass

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> RunExitPass
++++++++++++++ [27] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.215138s) ++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> PASS
++++ [28] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Front Camera RGB_spec*] 
 
}

[2016-04-05 17:40:27.427]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> PASS
+++++++++++++++ [29] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000602s) +++++++++++++++

[2016-04-05 17:40:27.427]
================= END TEST Front Camera RGB (TestResult : PASS ; Duration : 6.155253s) =================

[2016-04-05 17:40:27.427]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Front Camera RGB,,,PASS,NA,NA,,)

[2016-04-05 17:40:27.427]
Item Name:Front Camera RGB, {NA}

[2016-04-05 17:40:27.427]
============================ START TEST LIFETIME MAX TEMPERATURE (Item156) ============================

[2016-04-05 17:40:27.427]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> dev -k GasGauge -e read_blk 59 0 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:27.427]
Write to ---> MOBILE , command[dev -k GasGauge -e read_blk 59 0(STRING)]

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:dev -k GasGauge -e read_blk 59 0,2,0;return value:0!

[2016-04-05 17:40:27.427]
PostTXToUI ===> 
{
Info ==> dev -k GasGauge -e read_blk 59 0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:27.427 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:27.427]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007200s) +++++++++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> dev -k GasGauge -e read_blk 59 0 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:dev -k GasGauge -e read_blk 59 0
Class 59, Block 0:
0000000: 01 2C 00 B8 0F 8E 0E 93 03 84 F9 05 00 00 00 00  .,..............
0000010: 07 5D 07 1E 00 01 00 01 FF 29 FF 29 07 89 07 89  .].......).)....
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:27.427]
PostRXToUI ===> 
{
Info ==> dev -k GasGauge -e read_blk 59 0
Class 59, Block 0:
0000000: 01 2C 00 B8 0F 8E 0E 93 03 84 F9 05 00 00 00 00  .,..............
0000010: 07 5D 07 1E 00 01 00 01 FF 29 FF 29 07 89 07 89  .].......).)....
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:27.427 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:27.427]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:27.427]
CATCH_VALUE => Catch OK : Class 59, Block 0:0000000: 01 2C 00 B8 0F 8E 0E 93 03 84 F9 05 00 00 00 00  .,..............0000010: 07 5D 07 1E 00 01 00 01 FF 29 FF 29 07 89 07 89  .].......).)....OK

[2016-04-05 17:40:27.427]
READ_COMMAND => Catch string between dev -k GasGauge -e read_blk 59 0 and [001D38CC:3020213A] :-) == Class 59, Block 0:0000000: 01 2C 00 B8 0F 8E 0E 93 03 84 F9 05 00 00 00 00  .,..............0000010: 07 5D 07 1E 00 01 00 01 FF 29 FF 29 07 89 07 89  .].......).)....OK

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> Class 59, Block 0:0000000: 01 2C 00 B8 0F 8E 0E 93 03 84 F9 05 00 00 00 00  .,..............0000010: 07 5D 07 1E 00 01 00 01 FF 29 FF 29 07 89 07 89  .].......).)....OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.531769s) ++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> read_blk 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> Class 59, Block 0:0000000: 01 2C 00 B8 0F 8E 0E 93 03 84 F9 05 00 00 00 00  .,..............0000010: 07 5D 07 1E 00 01 00 01 FF 29 FF 29 07 89 07 89  .].......).)....OK
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> read_blk 
REGEX ==> 0000000: (.{47}) 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 01 2C 00 B8 0F 8E 0E 93 03 84 F9 05 00 00 00 00
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000187s) +++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Line1_Value 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 01 2C 00 B8 0F 8E 0E 93 03 84 F9 05 00 00 00 00
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : CUSTOM_COMBINE_DATA:RETURN_VALUE: ===> parameters:
{
EndIndex ==> 1 
BeginIndex ==> 0 
SeparateString ==>   
KEY ==> Line1_Value 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 012C
+++++++++++ [6] CUSTOM_COMBINE_DATA:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000030s) +++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 300
+++++++++ [7] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000029s) +++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FinalValue 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 300
++++++++++ [8] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*FinalValue*]/10 
DecimalPlaces ==> 1 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 30.0
+++++++++++++++ [9] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000129s) +++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> BATTTEMP 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 30.0
++++++++++ [10] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Lifetime Max Temperature_spec*] 
 
}

[2016-04-05 17:40:27.427]
JUDGE_SPEC =>  value is [30.0], spec is [Item0=0 ; Item1=60 ; ], mode is [1]

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 30.0
+++++++++++++++ [11] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000634s) +++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Lifetime Max Temperature_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 30.0
+++++++++++ [12] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:40:27.427]
============= END TEST Lifetime Max Temperature (TestResult : PASS ; Duration : 0.555998s) =============

[2016-04-05 17:40:27.427]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Lifetime Max Temperature,,,30.0,0,60,C,)

[2016-04-05 17:40:27.427]
Item Name:Lifetime Max Temperature, [0,60]

[2016-04-05 17:40:27.427]
======================== START TEST ACC2 ZERO CURRENT BACKPOWER TEST (Item157) ========================

[2016-04-05 17:40:27.427]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --read 0x09 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:27.427]
Write to ---> MOBILE , command[tristar --read 0x09(STRING)]

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --read 0x09,2,0;return value:0!

[2016-04-05 17:40:27.427]
PostTXToUI ===> 
{
Info ==> tristar --read 0x09 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:27.427 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:27.427]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007302s) +++++++++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --read 0x09 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --read 0x09
>> read
reg 0x9 = 0xD0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:27.427]
PostRXToUI ===> 
{
Info ==> tristar --read 0x09
>> read
reg 0x9 = 0xD0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:27.427 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:27.427]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:27.427]
CATCH_VALUE => Catch OK : >> readreg 0x9 = 0xD0

[2016-04-05 17:40:27.427]
READ_COMMAND => Catch string between tristar --read 0x09 and [001D38CC:3020213A] :-) == >> readreg 0x9 = 0xD0

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> >> readreg 0x9 = 0xD0
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020111s) ++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --read 0x02 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:27.427]
Write to ---> MOBILE , command[tristar --read 0x02(STRING)]

[2016-04-05 17:40:27.427]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --read 0x02,2,0;return value:0!

[2016-04-05 17:40:27.427]
PostTXToUI ===> 
{
Info ==> tristar --read 0x02 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:27.427 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:27.427]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:27.427]
RETURN_VALUE ===> >> readreg 0x9 = 0xD0
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005419s) +++++++++++++++++++++

[2016-04-05 17:40:27.427]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --read 0x02 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --read 0x02
>> read
reg 0x2 = 0x0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --read 0x02
>> read
reg 0x2 = 0x0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : >> readreg 0x2 = 0x0

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between tristar --read 0x02 and [001D38CC:3020213A] :-) == >> readreg 0x2 = 0x0

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> readreg 0x2 = 0x0
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020940s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory -m bypass 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[accessory -m bypass(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory -m bypass,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> accessory -m bypass 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> readreg 0x2 = 0x0
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005392s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory -m bypass 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory -m bypass
setting accessory rail to bypass mode
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> accessory -m bypass
setting accessory rail to bypass mode
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : setting accessory rail to bypass modeOK

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between accessory -m bypass and [001D38CC:3020213A] :-) == setting accessory rail to bypass modeOK

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting accessory rail to bypass modeOK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021982s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory --powerpin acc2 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[accessory --powerpin acc2(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory --powerpin acc2,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> accessory --powerpin acc2 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting accessory rail to bypass modeOK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005289s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory --powerpin acc2 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory --powerpin acc2
setting switch to output power on acc2
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> accessory --powerpin acc2
setting switch to output power on acc2
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : setting switch to output power on acc2OK

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between accessory --powerpin acc2 and [001D38CC:3020213A] :-) == setting switch to output power on acc2OK

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting switch to output power on acc2OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020944s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --write "0x09 0xdf" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[tristar --write "0x09 0xdf"(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --write "0x09 0xdf",2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> tristar --write "0x09 0xdf" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting switch to output power on acc2OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005492s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --write "0x09 0xdf" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --write "0x09 0xdf"
>> write
write reg 0x9 = 0xDF
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --write "0x09 0xdf"
>> write
write reg 0x9 = 0xDF
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : >> writewrite reg 0x9 = 0xDF

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between tristar --write "0x09 0xdf" and [001D38CC:3020213A] :-) == >> writewrite reg 0x9 = 0xDF

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x9 = 0xDF
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022329s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --read 0x0a 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[tristar --read 0x0a(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --read 0x0a,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> tristar --read 0x0a 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x9 = 0xDF
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005366s) ++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  =  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --read 0x0a
>> read
reg 0xA = 0x0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --read 0x0a
>> read
reg 0xA = 0x0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : 0x0

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between  =  and [001D38CC:3020213A] :-) == 0x0

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 0x0
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023552s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Zero Current Backpower Test_spec*] 
 
}

[2016-04-05 17:40:28.428]
JUDGE_SPEC =>  value is [0x0], spec is [Item0=0x0 ; ], mode is [5]

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 0x0
+++++++++++++++ [13] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000684s) +++++++++++++++

[2016-04-05 17:40:28.428]
========= END TEST ACC2 Zero Current Backpower Test (TestResult : PASS ; Duration : 0.183367s) =========

[2016-04-05 17:40:28.428]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Zero Current Backpower Test,,,0x0,0x0,0x0,,)

[2016-04-05 17:40:28.428]
Item Name:ACC2 Zero Current Backpower Test, <0x0>

[2016-04-05 17:40:28.428]
======================== START TEST ACC1 ZERO CURRENT BACKPOWER TEST (Item158) ========================

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --write "0x09 0xd0" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[tristar --write "0x09 0xd0"(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --write "0x09 0xd0",2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> tristar --write "0x09 0xd0" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007381s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --write "0x09 0xd0" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --write "0x09 0xd0"
>> write
write reg 0x9 = 0xD0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --write "0x09 0xd0"
>> write
write reg 0x9 = 0xD0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : >> writewrite reg 0x9 = 0xD0

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between tristar --write "0x09 0xd0" and [001D38CC:3020213A] :-) == >> writewrite reg 0x9 = 0xD0

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x9 = 0xD0
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021712s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory --powerpin acc1 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[accessory --powerpin acc1(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory --powerpin acc1,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> accessory --powerpin acc1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x9 = 0xD0
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005722s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory --powerpin acc1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory --powerpin acc1
setting switch to output power on acc1
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> accessory --powerpin acc1
setting switch to output power on acc1
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : setting switch to output power on acc1OK

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between accessory --powerpin acc1 and [001D38CC:3020213A] :-) == setting switch to output power on acc1OK

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting switch to output power on acc1OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021271s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --write "0x09 0xdf" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[tristar --write "0x09 0xdf"(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --write "0x09 0xdf",2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> tristar --write "0x09 0xdf" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting switch to output power on acc1OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005945s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --write "0x09 0xdf" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --write "0x09 0xdf"
>> write
write reg 0x9 = 0xDF
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --write "0x09 0xdf"
>> write
write reg 0x9 = 0xDF
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : >> writewrite reg 0x9 = 0xDF

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between tristar --write "0x09 0xdf" and [001D38CC:3020213A] :-) == >> writewrite reg 0x9 = 0xDF

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x9 = 0xDF
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021431s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --read 0x0a 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[tristar --read 0x0a(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --read 0x0a,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> tristar --read 0x0a 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x9 = 0xDF
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005805s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  =  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --read 0x0a
>> read
reg 0xA = 0x0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --read 0x0a
>> read
reg 0xA = 0x0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : 0x0

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between  =  and [001D38CC:3020213A] :-) == 0x0

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 0x0
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022848s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Zero Current Backpower Test_spec*] 
 
}

[2016-04-05 17:40:28.428]
JUDGE_SPEC =>  value is [0x0], spec is [Item0=0x0 ; ], mode is [5]

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 0x0
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000635s) +++++++++++++++

[2016-04-05 17:40:28.428]
========= END TEST ACC1 Zero Current Backpower Test (TestResult : PASS ; Duration : 0.125448s) =========

[2016-04-05 17:40:28.428]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Zero Current Backpower Test,,,0x0,0x0,0x0,,)

[2016-04-05 17:40:28.428]
Item Name:ACC1 Zero Current Backpower Test, <0x0>

[2016-04-05 17:40:28.428]
============================= START TEST ACC2 NORMAL VLDO6 70MA (Item159) =============================

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Bacongnd Short 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> FIXTURE , command[Bacongnd Short(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Bacongnd Short,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> Bacongnd Short 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006840s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Bacongnd Short 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Bacongnd Short
Bacongnd Short Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> Bacongnd Short
Bacongnd Short Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : Bacongnd Short Pass

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between Bacongnd Short and @_@ == Bacongnd Short Pass

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> Bacongnd Short Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.041918s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Kong To ACC1 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> FIXTURE , command[Kong To ACC1(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Kong To ACC1,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> Kong To ACC1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> Bacongnd Short Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005349s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Kong To ACC1 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Kong To ACC1
Kong To ACC1 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> Kong To ACC1
Kong To ACC1 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : Kong To ACC1 Pass

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between Kong To ACC1 and @_@ == Kong To ACC1 Pass

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> Kong To ACC1 Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.040358s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> MACC2 BYPASS OFF 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> FIXTURE , command[MACC2 BYPASS OFF(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:MACC2 BYPASS OFF,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> MACC2 BYPASS OFF 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> Kong To ACC1 Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005430s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> MACC2 BYPASS OFF 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:MACC2 BYPASS OFF
MACC2 BYPASS OFF Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> MACC2 BYPASS OFF
MACC2 BYPASS OFF Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : MACC2 BYPASS OFF Pass

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between MACC2 BYPASS OFF and @_@ == MACC2 BYPASS OFF Pass

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> MACC2 BYPASS OFF Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024306s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> ACC2 Meas On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> FIXTURE , command[ACC2 Meas On(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:ACC2 Meas On,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> ACC2 Meas On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> MACC2 BYPASS OFF Pass
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005473s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ACC2 Meas On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:ACC2 Meas On
ACC2 Meas On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> ACC2 Meas On
ACC2 Meas On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : ACC2 Meas On Pass

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between ACC2 Meas On and @_@ == ACC2 Meas On Pass

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> ACC2 Meas On Pass
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.040003s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory -m off 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[accessory -m off(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory -m off,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> accessory -m off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> ACC2 Meas On Pass
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006199s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory -m off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory -m off
turning off accessory power
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> accessory -m off
turning off accessory power
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : turning off accessory powerOK

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between accessory -m off and [001D38CC:3020213A] :-) == turning off accessory powerOK

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> turning off accessory powerOK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021856s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --write "0x09 0xd0" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[tristar --write "0x09 0xd0"(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --write "0x09 0xd0",2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> tristar --write "0x09 0xd0" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> turning off accessory powerOK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006087s) ++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --write "0x09 0xd0" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --write "0x09 0xd0"
>> write
write reg 0x9 = 0xD0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --write "0x09 0xd0"
>> write
write reg 0x9 = 0xD0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : >> writewrite reg 0x9 = 0xD0

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between tristar --write "0x09 0xd0" and [001D38CC:3020213A] :-) == >> writewrite reg 0x9 = 0xD0

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x9 = 0xD0
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021114s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --write "0x02 0x00" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[tristar --write "0x02 0x00"(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --write "0x02 0x00",2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> tristar --write "0x02 0x00" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x9 = 0xD0
++++++++++++++++++++ [13] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005644s) ++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --write "0x02 0x00" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --write "0x02 0x00"
>> write
write reg 0x2 = 0x0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --write "0x02 0x00"
>> write
write reg 0x2 = 0x0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : >> writewrite reg 0x2 = 0x0

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between tristar --write "0x02 0x00" and [001D38CC:3020213A] :-) == >> writewrite reg 0x2 = 0x0

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x2 = 0x0
++++++++++++++ [14] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021359s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory --powermode normal 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[accessory --powermode normal(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory --powermode normal,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> accessory --powermode normal 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> writewrite reg 0x2 = 0x0
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005414s) ++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory --powermode normal 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory --powermode normal
setting accessory rail to normal mode
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> accessory --powermode normal
setting accessory rail to normal mode
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : setting accessory rail to normal modeOK

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between accessory --powermode normal and [001D38CC:3020213A] :-) == setting accessory rail to normal modeOK

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting accessory rail to normal modeOK
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021430s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory --powerpin acc2 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[accessory --powerpin acc2(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory --powerpin acc2,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> accessory --powerpin acc2 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting accessory rail to normal modeOK
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005667s) ++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory --powerpin acc2 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory --powerpin acc2
setting switch to output power on acc2
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> accessory --powerpin acc2
setting switch to output power on acc2
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : setting switch to output power on acc2OK

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between accessory --powerpin acc2 and [001D38CC:3020213A] :-) == setting switch to output power on acc2OK

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting switch to output power on acc2OK
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021127s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ldo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[pmuadc --read ldo6 --avg 4(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ldo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> setting switch to output power on acc2OK
++++++++++++++++++++ [19] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005295s) ++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ldo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3304.8373 mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3304.8373 mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : 3304.8373

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between ADC Channel ldo6:  and  mV == 3304.8373

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 3304.8373
++++++++++++++ [20] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023969s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Normal vldo6 70mA_spec*] 
 
}

[2016-04-05 17:40:28.428]
JUDGE_SPEC =>  value is [3304.8373], spec is [Item0=3200 ; Item1=3400 ; ], mode is [1]

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 3304.8373
+++++++++++++++ [21] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000618s) +++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2 Normal vldo6 70mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 3304.8373
+++++++++++ [22] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++++++

[2016-04-05 17:40:28.428]
============== END TEST ACC2 Normal vldo6 70mA (TestResult : PASS ; Duration : 0.365312s) ==============

[2016-04-05 17:40:28.428]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Normal vldo6 70mA,,,3304.8373,3200,3400,,)

[2016-04-05 17:40:28.428]
Item Name:ACC2 Normal vldo6 70mA, [3200,3400]

[2016-04-05 17:40:28.428]
============================= START TEST ACC2 NORMAL ILDO6 70MA (Item160) =============================

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> E75dn Meas On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> FIXTURE , command[E75dn Meas On(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:E75dn Meas On,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> E75dn Meas On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007240s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> E75dn Meas On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:E75dn Meas On
E75dn Meas On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> E75dn Meas On
E75dn Meas On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : E75dn Meas On Pass

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between E75dn Meas On and @_@ == E75dn Meas On Pass

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> E75dn Meas On Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.039028s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> E75dp Meas On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> FIXTURE , command[E75dp Meas On(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:E75dp Meas On,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> E75dp Meas On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> E75dn Meas On Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005430s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> E75dp Meas On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:E75dp Meas On
E75dp Meas On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> E75dp Meas On
E75dp Meas On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : E75dp Meas On Pass

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between E75dp Meas On and @_@ == E75dp Meas On Pass

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> E75dp Meas On Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.039850s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ildo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[pmuadc --read ildo6 --avg 4(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ildo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> E75dp Meas On Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005604s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ildo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mA 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 72.0279 mA
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 72.0279 mA
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : 72.0279

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between ADC Channel ildo6:  and  mA == 72.0279

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 72.0279
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.031560s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Normal ildo6 70mA_spec*] 
 
}

[2016-04-05 17:40:28.428]
JUDGE_SPEC =>  value is [72.0279], spec is [Item0=50 ; Item1=115 ; ], mode is [1]

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 72.0279
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000631s) +++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2 Normal ildo6 70mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 72.0279
+++++++++++ [8] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000020s) +++++++++++

[2016-04-05 17:40:28.428]
============== END TEST ACC2 Normal ildo6 70mA (TestResult : PASS ; Duration : 0.140502s) ==============

[2016-04-05 17:40:28.428]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Normal ildo6 70mA,,,72.0279,50,115,mA,)

[2016-04-05 17:40:28.428]
Item Name:ACC2 Normal ildo6 70mA, [50,115]

[2016-04-05 17:40:28.428]
============================== START TEST ACC2 NORMAL V_R 70MA (Item161) ==============================

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 open-brickid"(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 open-brickid",2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006623s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:28.428]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:28.428]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:28.428]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 open-brickid" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020893s) ++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:28.428]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:28.428]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:28.428]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:28.428 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:28.428]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:28.428]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005782s) +++++++++++++++++++++

[2016-04-05 17:40:28.428]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1600.1221 mV
brick_id_usb_d+: 4mV
brick_id_usb_d-: 1599mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1600.1221 mV
brick_id_usb_d+: 4mV
brick_id_usb_d-: 1599mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : 1600.1221

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 1600.1221

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1600.1221
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.135134s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc2NormalV_R 70 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1600.1221
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Normal V_R 70mA_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [1600.1221], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1600.1221
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000610s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2 Normal V_R 70mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1600.1221
+++++++++++ [7] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:40:29.429]
=============== END TEST ACC2 Normal V_R 70mA (TestResult : PASS ; Duration : 0.178977s) ===============

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Normal V_R 70mA,,,1600.1221,NA,NA,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2 Normal V_R 70mA, {NA}

[2016-04-05 17:40:29.429]
============================= START TEST ACC2 NORMAL ILDO6 100MA (Item162) =============================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> MACC2 BYPASS ON 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> FIXTURE , command[MACC2 BYPASS ON(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:MACC2 BYPASS ON,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> MACC2 BYPASS ON 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007433s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> MACC2 BYPASS ON 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:MACC2 BYPASS ON
MACC2 BYPASS ON Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> MACC2 BYPASS ON
MACC2 BYPASS ON Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : MACC2 BYPASS ON Pass

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between MACC2 BYPASS ON and @_@ == MACC2 BYPASS ON Pass

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> MACC2 BYPASS ON Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023033s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ildo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[pmuadc --read ildo6 --avg 4(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ildo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> MACC2 BYPASS ON Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005542s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ildo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mA 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 106.8772 mA
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 106.8772 mA
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : 106.8772

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between ADC Channel ildo6:  and  mA == 106.8772

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 106.8772
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026976s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Normal ildo6 100mA_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [106.8772], spec is [Item0=80 ; Item1=145 ; ], mode is [1]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 106.8772
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000626s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2 Normal ildo6 100_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 106.8772
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:40:29.429]
============= END TEST ACC2 Normal ildo6 100mA (TestResult : PASS ; Duration : 0.072084s) =============

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Normal ildo6 100mA,,,106.8772,80,145,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2 Normal ildo6 100mA, [80,145]

[2016-04-05 17:40:29.429]
============================== START TEST ACC2 NORMAL V_R 100MA (Item163) ==============================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006488s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1589.7435 mV
brick_id_usb_d+: 8mV
brick_id_usb_d-: 1585mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1589.7435 mV
brick_id_usb_d+: 8mV
brick_id_usb_d-: 1585mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : 1589.7435

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 1589.7435

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1589.7435
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.138038s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc2NormalV_R 100 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1589.7435
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Normal V_R 100mA_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [1589.7435], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1589.7435
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000637s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2 Normal V_R 100mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1589.7435
+++++++++++ [5] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000020s) +++++++++++

[2016-04-05 17:40:29.429]
============== END TEST ACC2 Normal V_R 100mA (TestResult : PASS ; Duration : 0.152813s) ==============

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Normal V_R 100mA,,,1589.7435,NA,NA,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2 Normal V_R 100mA, {NA}

[2016-04-05 17:40:29.429]
============================ START TEST ACC2_NORMAL_CURRENT 100MA (Item164) ============================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Acc2NormalV_R 100*]/15 
DecimalPlaces ==> 5 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 105.98290
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000234s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2_Normal_Current 100mA_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [105.98290], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 105.98290
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000876s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2_Normal_Current 100mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 105.98290
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:40:29.429]
============ END TEST ACC2_Normal_Current 100mA (TestResult : PASS ; Duration : 0.006468s) ============

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2_Normal_Current 100mA,,,105.98290,NA,NA,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2_Normal_Current 100mA, {NA}

[2016-04-05 17:40:29.429]
=============================== START TEST ACC2_BRICKID_SWAP1 (Item165) ===============================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 brickid-open"(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 brickid-open",2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006643s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 brickid-open" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021349s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005613s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 3.9682 mV
brick_id_usb_d+: 6mV
brick_id_usb_d-: 1586mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 3.9682 mV
brick_id_usb_d+: 6mV
brick_id_usb_d-: 1586mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : 3.9682

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 3.9682

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 3.9682
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.134851s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2_BrickID_SWAP1_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [3.9682], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 3.9682
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000601s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2_BrickID_SWAP1_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 3.9682
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:40:29.429]
================ END TEST ACC2_BrickID_SWAP1 (TestResult : PASS ; Duration : 0.177525s) ================

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2_BrickID_SWAP1,,,3.9682,NA,NA,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2_BrickID_SWAP1, {NA}

[2016-04-05 17:40:29.429]
================================ START TEST ACC2 BYPASS VLDO6 (Item166) ================================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -d 0 0x1a 0x06 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[i2c -d 0 0x1a 0x06 1(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -d 0 0x1a 0x06 1,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> i2c -d 0 0x1a 0x06 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007283s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -d 0 0x1a 0x06 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -d 0 0x1a 0x06 1
Reading 1 bytes from register offset 0x06 into 0x79B48698, buffer read:	
Data:  0x08 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> i2c -d 0 0x1a 0x06 1
Reading 1 bytes from register offset 0x06 into 0x79B48698, buffer read:	
Data:  0x08 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x06 into 0x79B48698, buffer read:	Data:  0x08

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between i2c -d 0 0x1a 0x06 1 and [001D38CC:3020213A] :-) == Reading 1 bytes from register offset 0x06 into 0x79B48698, buffer read:	Data:  0x08

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x06 into 0x79B48698, buffer read:	Data:  0x08
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.025713s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory --powermode bypass 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[accessory --powermode bypass(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory --powermode bypass,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> accessory --powermode bypass 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x06 into 0x79B48698, buffer read:	Data:  0x08
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005544s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory --powermode bypass 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory --powermode bypass
setting accessory rail to bypass mode
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> accessory --powermode bypass
setting accessory rail to bypass mode
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : setting accessory rail to bypass modeOK

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between accessory --powermode bypass and [001D38CC:3020213A] :-) == setting accessory rail to bypass modeOK

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> setting accessory rail to bypass modeOK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022980s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ldo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[pmuadc --read ldo6 --avg 4(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ldo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> setting accessory rail to bypass modeOK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006219s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ldo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3773.3076 mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3773.3076 mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : 3773.3076

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between ADC Channel ldo6:  and  mV == 3773.3076

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 3773.3076
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020726s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc2BypassVldo6 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 3773.3076
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Bypass vldo6_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [3773.3076], spec is [Item0=3400 ; Item1=4350 ; ], mode is [1]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 3773.3076
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000650s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2 Bypass vldo6_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 3773.3076
+++++++++++ [9] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++++++

[2016-04-05 17:40:29.429]
================ END TEST ACC2 Bypass vldo6 (TestResult : PASS ; Duration : 0.102130s) ================

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Bypass vldo6,,,3773.3076,3400,4350,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2 Bypass vldo6, [3400,4350]

[2016-04-05 17:40:29.429]
================================ START TEST ACC2 BYPASS ILDO6 (Item167) ================================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ildo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[pmuadc --read ildo6 --avg 4(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ildo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007759s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ildo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mA 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 0.4834 mA
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 0.4834 mA
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : 0.4834

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between ADC Channel ildo6:  and  mA == 0.4834

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 0.4834
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.016792s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc2Bypassildo6 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 0.4834
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Bypass ildo6_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [0.4834], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 0.4834
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000911s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2 Bypass ildo6_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 0.4834
+++++++++++ [5] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++++

[2016-04-05 17:40:29.429]
================ END TEST ACC2 Bypass ildo6 (TestResult : PASS ; Duration : 0.033556s) ================

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Bypass ildo6,,,0.4834,NA,NA,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2 Bypass ildo6, {NA}

[2016-04-05 17:40:29.429]
================================= START TEST ACC2 BYPASS V_R (Item168) =================================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 open-brickid"(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 open-brickid",2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007137s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 open-brickid" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020784s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005584s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1813.7973 mV
brick_id_usb_d+: 9mV
brick_id_usb_d-: 1809mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1813.7973 mV
brick_id_usb_d+: 9mV
brick_id_usb_d-: 1809mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : 1813.7973

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 1813.7973

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1813.7973
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.136034s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc2BypassV_R 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1813.7973
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2 Bypass V_R_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [1813.7973], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1813.7973
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000664s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2 Bypass V_R_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 1813.7973
+++++++++++ [7] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++++

[2016-04-05 17:40:29.429]
================= END TEST ACC2 Bypass V_R (TestResult : PASS ; Duration : 0.180867s) =================

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2 Bypass V_R,,,1813.7973,NA,NA,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2 Bypass V_R, {NA}

[2016-04-05 17:40:29.429]
============================== START TEST ACC2_BYPASS_IMPEDANCE (Item169) ==============================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Acc2BypassVldo6*]/30*0.85 
DecimalPlaces ==> 5 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 106.91039
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000274s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc2BypassImpedance_low 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 106.91039
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Acc2BypassVldo6*]/30*1.15 
DecimalPlaces ==> 5 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 144.64346
+++++++++++++++ [3] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000199s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc2BypassImpedance_high 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 144.64346
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Acc2BypassV_R*]/15 
DecimalPlaces ==> 5 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 120.91982
+++++++++++++++ [5] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000165s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2_Bypass_Impedance_spec*] 
 
}

[2016-04-05 17:40:29.429]
JUDGE_SPEC =>  value is [120.91982], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 120.91982
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000829s) +++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2_Bypass_Impedance _units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 120.91982
+++++++++++ [7] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000025s) +++++++++++

[2016-04-05 17:40:29.429]
============== END TEST ACC2_Bypass_Impedance (TestResult : PASS ; Duration : 0.013065s) ==============

[2016-04-05 17:40:29.429]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2_Bypass_Impedance,,,120.91982,NA,NA,,)

[2016-04-05 17:40:29.429]
Item Name:ACC2_Bypass_Impedance, {NA}

[2016-04-05 17:40:29.429]
=============================== START TEST ACC2_BRICKID_SWAP2 (Item170) ===============================

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 brickid-open"(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 brickid-open",2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007338s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:29.429]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:29.429]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:29.429]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 brickid-open" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020581s) ++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:29.429]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:29.429]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:29.429]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:29.429 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:29.429]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:29.429]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005652s) +++++++++++++++++++++

[2016-04-05 17:40:29.429]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 8.8522 mV
brick_id_usb_d+: 9mV
brick_id_usb_d-: 1811mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 8.8522 mV
brick_id_usb_d+: 9mV
brick_id_usb_d-: 1811mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : 8.8522

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 8.8522

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> 8.8522
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.134703s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2_BrickID_SWAP2_spec*] 
 
}

[2016-04-05 17:40:30.430]
JUDGE_SPEC =>  value is [8.8522], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> 8.8522
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000599s) +++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2_BrickID_SWAP2_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> 8.8522
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++++++

[2016-04-05 17:40:30.430]
================ END TEST ACC2_BrickID_SWAP2 (TestResult : PASS ; Duration : 0.177443s) ================

[2016-04-05 17:40:30.430]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2_BrickID_SWAP2,,,8.8522,NA,NA,,)

[2016-04-05 17:40:30.430]
Item Name:ACC2_BrickID_SWAP2, {NA}

[2016-04-05 17:40:30.430]
=============================== START TEST ACC2_BRICKID_SWAP3 (Item171) ===============================

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -d 0 0x1a 0x06 1 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> MOBILE , command[i2c -d 0 0x1a 0x06 1(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -d 0 0x1a 0x06 1,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> i2c -d 0 0x1a 0x06 1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007060s) +++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -d 0 0x1a 0x06 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -d 0 0x1a 0x06 1
Reading 1 bytes from register offset 0x06 into 0x79BAC518, buffer read:	
Data:  0x08 
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> i2c -d 0 0x1a 0x06 1
Reading 1 bytes from register offset 0x06 into 0x79BAC518, buffer read:	
Data:  0x08 
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x06 into 0x79BAC518, buffer read:	Data:  0x08

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between i2c -d 0 0x1a 0x06 1 and [001D38CC:3020213A] :-) == Reading 1 bytes from register offset 0x06 into 0x79BAC518, buffer read:	Data:  0x08

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x06 into 0x79BAC518, buffer read:	Data:  0x08
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026123s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 open-brickid"(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 open-brickid",2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x06 into 0x79BAC518, buffer read:	Data:  0x08
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005665s) +++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 open-brickid" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023969s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005676s) +++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1809.2185 mV
brick_id_usb_d+: 8mV
brick_id_usb_d-: 1811mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1809.2185 mV
brick_id_usb_d+: 8mV
brick_id_usb_d-: 1811mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : 1809.2185

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 1809.2185

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> 1809.2185
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.122695s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC2_BrickID_SWAP3_spec*] 
 
}

[2016-04-05 17:40:30.430]
JUDGE_SPEC =>  value is [1809.2185], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> 1809.2185
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000789s) +++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC2_BrickID_SWAP3_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> 1809.2185
+++++++++++ [8] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) +++++++++++

[2016-04-05 17:40:30.430]
================ END TEST ACC2_BrickID_SWAP3 (TestResult : PASS ; Duration : 0.204077s) ================

[2016-04-05 17:40:30.430]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC2_BrickID_SWAP3,,,1809.2185,NA,NA,,)

[2016-04-05 17:40:30.430]
Item Name:ACC2_BrickID_SWAP3, {NA}

[2016-04-05 17:40:30.430]
============================= START TEST ACC1 NORMAL VLDO6 70MA (Item172) =============================

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory -m off 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> MOBILE , command[accessory -m off(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory -m off,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> accessory -m off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006338s) +++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory -m off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory -m off
turning off accessory power
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> accessory -m off
turning off accessory power
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : turning off accessory powerOK

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between accessory -m off and [001D38CC:3020213A] :-) == turning off accessory powerOK

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> turning off accessory powerOK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021120s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> MACC2 BYPASS OFF 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> FIXTURE , command[MACC2 BYPASS OFF(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:MACC2 BYPASS OFF,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> MACC2 BYPASS OFF 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> turning off accessory powerOK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006009s) +++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> MACC2 BYPASS OFF 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:MACC2 BYPASS OFF
MACC2 BYPASS OFF Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> MACC2 BYPASS OFF
MACC2 BYPASS OFF Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : MACC2 BYPASS OFF Pass

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between MACC2 BYPASS OFF and @_@ == MACC2 BYPASS OFF Pass

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> MACC2 BYPASS OFF Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.015053s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> ACC2 Meas Off 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> FIXTURE , command[ACC2 Meas Off(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:ACC2 Meas Off,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> ACC2 Meas Off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> MACC2 BYPASS OFF Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005457s) +++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ACC2 Meas Off 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:ACC2 Meas Off
ACC2 Meas Off Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> ACC2 Meas Off
ACC2 Meas Off Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : ACC2 Meas Off Pass

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between ACC2 Meas Off and @_@ == ACC2 Meas Off Pass

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> ACC2 Meas Off Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.041309s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Kong To ACC2 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> FIXTURE , command[Kong To ACC2(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Kong To ACC2,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> Kong To ACC2 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> ACC2 Meas Off Pass
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005777s) +++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Kong To ACC2 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Kong To ACC2
Kong To ACC2 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> Kong To ACC2
Kong To ACC2 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : Kong To ACC2 Pass

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between Kong To ACC2 and @_@ == Kong To ACC2 Pass

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> Kong To ACC2 Pass
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.037740s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> ACC1 Meas On 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> FIXTURE , command[ACC1 Meas On(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:ACC1 Meas On,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> ACC1 Meas On 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> Kong To ACC2 Pass
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005348s) +++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ACC1 Meas On 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:ACC1 Meas On
ACC1 Meas On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> ACC1 Meas On
ACC1 Meas On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : ACC1 Meas On Pass

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between ACC1 Meas On and @_@ == ACC1 Meas On Pass

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> ACC1 Meas On Pass
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.039897s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 100 
}

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> ACC1 Meas On Pass
++++++++++++++++ [11] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.105011s) ++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -w 0 0x1a 0x05 0x02 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> MOBILE , command[i2c -w 0 0x1a 0x05 0x02(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -w 0 0x1a 0x05 0x02,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> i2c -w 0 0x1a 0x05 0x02 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> ACC1 Meas On Pass
++++++++++++++++++++ [12] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007426s) ++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -w 0 0x1a 0x05 0x02
Set  bytes:	0x05 0x02 	Writing 2 bytes
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> i2c -w 0 0x1a 0x05 0x02
Set  bytes:	0x05 0x02 	Writing 2 bytes
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : i2c -w 0 0x1a 0x05 0x02Set  bytes:	0x05 0x02 	Writing 2 bytes

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == i2c -w 0 0x1a 0x05 0x02Set  bytes:	0x05 0x02 	Writing 2 bytes

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> i2c -w 0 0x1a 0x05 0x02Set  bytes:	0x05 0x02 	Writing 2 bytes
++++++++++++++ [13] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.032623s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory --powermode normal 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> MOBILE , command[accessory --powermode normal(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory --powermode normal,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> accessory --powermode normal 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> i2c -w 0 0x1a 0x05 0x02Set  bytes:	0x05 0x02 	Writing 2 bytes
++++++++++++++++++++ [14] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005463s) ++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory --powermode normal 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory --powermode normal
setting accessory rail to normal mode
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> accessory --powermode normal
setting accessory rail to normal mode
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : setting accessory rail to normal modeOK

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between accessory --powermode normal and [001D38CC:3020213A] :-) == setting accessory rail to normal modeOK

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> setting accessory rail to normal modeOK
++++++++++++++ [15] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021843s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 100 
}

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> setting accessory rail to normal modeOK
++++++++++++++++ [16] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.101256s) ++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory --powerpin acc1 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> MOBILE , command[accessory --powerpin acc1(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory --powerpin acc1,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> accessory --powerpin acc1 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> setting accessory rail to normal modeOK
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006630s) ++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory --powerpin acc1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory --powerpin acc1
setting switch to output power on acc1
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:30.430]
PostRXToUI ===> 
{
Info ==> accessory --powerpin acc1
setting switch to output power on acc1
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:30.430]
CATCH_VALUE => Catch OK : setting switch to output power on acc1OK

[2016-04-05 17:40:30.430]
READ_COMMAND => Catch string between accessory --powerpin acc1 and [001D38CC:3020213A] :-) == setting switch to output power on acc1OK

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> setting switch to output power on acc1OK
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022325s) ++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 100 
}

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> setting switch to output power on acc1OK
++++++++++++++++ [19] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.100655s) ++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ldo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:30.430]
Write to ---> MOBILE , command[pmuadc --read ldo6 --avg 4(STRING)]

[2016-04-05 17:40:30.430]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ldo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:30.430]
PostTXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:30.430 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:30.430]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:30.430]
RETURN_VALUE ===> setting switch to output power on acc1OK
++++++++++++++++++++ [20] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006606s) ++++++++++++++++++++

[2016-04-05 17:40:30.430]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ldo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3297.4769 mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3297.4769 mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 3297.4769

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel ldo6:  and  mV == 3297.4769

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3297.4769
++++++++++++++ [21] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.029241s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Normal vldo6 70mA_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [3297.4769], spec is [Item0=3200 ; Item1=3400 ; ], mode is [1]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3297.4769
+++++++++++++++ [22] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000612s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1 Normal vldo6 70mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3297.4769
+++++++++++ [23] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++++++

[2016-04-05 17:40:31.431]
============== END TEST ACC1 Normal vldo6 70mA (TestResult : PASS ; Duration : 0.659339s) ==============

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Normal vldo6 70mA,,,3297.4769,3200,3400,,)

[2016-04-05 17:40:31.431]
Item Name:ACC1 Normal vldo6 70mA, [3200,3400]

[2016-04-05 17:40:31.431]
============================= START TEST ACC1 NORMAL ILDO6 70MA (Item173) =============================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ildo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[pmuadc --read ildo6 --avg 4(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ildo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006722s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ildo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mA 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 84.3768 mA
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 84.3768 mA
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 84.3768

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel ildo6:  and  mA == 84.3768

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 84.3768
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026180s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Normal ildo6 70mA_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [84.3768], spec is [Item0=55 ; Item1=115 ; ], mode is [1]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 84.3768
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000620s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1 Normal ildo6 70mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 84.3768
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:40:31.431]
============== END TEST ACC1 Normal ildo6 70mA (TestResult : PASS ; Duration : 0.039047s) ==============

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Normal ildo6 70mA,,,84.3768,55,115,mA,)

[2016-04-05 17:40:31.431]
Item Name:ACC1 Normal ildo6 70mA, [55,115]

[2016-04-05 17:40:31.431]
=============================== START TEST ACC1_BRICKID_SWAP1 (Item174) ===============================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 open-brickid"(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 open-brickid",2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006710s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 open-brickid" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021033s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005612s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 4.8840 mV
brick_id_usb_d+: 1604mV
brick_id_usb_d-: 6mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 4.8840 mV
brick_id_usb_d+: 1604mV
brick_id_usb_d-: 6mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 4.8840

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 4.8840

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 4.8840
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.136659s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1_BrickID_SWAP1_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [4.8840], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 4.8840
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000726s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1_BrickID_SWAP1_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 4.8840
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++++

[2016-04-05 17:40:31.431]
================ END TEST ACC1_BrickID_SWAP1 (TestResult : PASS ; Duration : 0.179629s) ================

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1_BrickID_SWAP1,,,4.8840,NA,NA,,)

[2016-04-05 17:40:31.431]
Item Name:ACC1_BrickID_SWAP1, {NA}

[2016-04-05 17:40:31.431]
============================== START TEST ACC1 NORMAL V_R 70MA (Item175) ==============================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 brickid-open"(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 brickid-open",2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007238s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 brickid-open" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021989s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005634s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1605.0061 mV
brick_id_usb_d+: 1603mV
brick_id_usb_d-: 7mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1605.0061 mV
brick_id_usb_d+: 1603mV
brick_id_usb_d-: 7mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 1605.0061

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 1605.0061

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 1605.0061
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.134512s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc1NormalV_R 70 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 1605.0061
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Normal V_R 70mA_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [1605.0061], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 1605.0061
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000597s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1 Normal V_R 70mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 1605.0061
+++++++++++ [7] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:40:31.431]
=============== END TEST ACC1 Normal V_R 70mA (TestResult : PASS ; Duration : 0.179514s) ===============

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Normal V_R 70mA,,,1605.0061,NA,NA,,)

[2016-04-05 17:40:31.431]
Item Name:ACC1 Normal V_R 70mA, {NA}

[2016-04-05 17:40:31.431]
============================ START TEST ACC1_NORMAL_CURRENT 70MA (Item176) ============================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Acc1NormalV_R 70*]/15 
DecimalPlaces ==> 5 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 107.00040
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000242s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1_Normal_Current 70mA_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [107.00040], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 107.00040
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000867s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1_Normal_Current 70mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 107.00040
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) +++++++++++

[2016-04-05 17:40:31.431]
============= END TEST ACC1_Normal_Current 70mA (TestResult : PASS ; Duration : 0.006439s) =============

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1_Normal_Current 70mA,,,107.00040,NA,NA,,)

[2016-04-05 17:40:31.431]
Item Name:ACC1_Normal_Current 70mA, {NA}

[2016-04-05 17:40:31.431]
============================= START TEST ACC1 NORMAL VLDO6 100MA (Item177) =============================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> MACC1 BYPASS ON 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> FIXTURE , command[MACC1 BYPASS ON(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:MACC1 BYPASS ON,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> MACC1 BYPASS ON 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006473s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> MACC1 BYPASS ON 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:MACC1 BYPASS ON
MACC1 BYPASS ON Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> MACC1 BYPASS ON
MACC1 BYPASS ON Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : MACC1 BYPASS ON Pass

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between MACC1 BYPASS ON and @_@ == MACC1 BYPASS ON Pass

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> MACC1 BYPASS ON Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.025040s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ldo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[pmuadc --read ldo6 --avg 4(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ldo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> MACC1 BYPASS ON Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005605s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ldo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3301.3736 mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3301.3736 mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 3301.3736

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel ldo6:  and  mV == 3301.3736

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3301.3736
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026071s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Normal vldo6 100mA_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [3301.3736], spec is [Item0=3200 ; Item1=3400 ; ], mode is [1]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3301.3736
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000627s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1 Normal vldo6 100mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3301.3736
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:40:31.431]
============= END TEST ACC1 Normal vldo6 100mA (TestResult : PASS ; Duration : 0.071941s) =============

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Normal vldo6 100mA,,,3301.3736,3200,3400,,)

[2016-04-05 17:40:31.431]
Item Name:ACC1 Normal vldo6 100mA, [3200,3400]

[2016-04-05 17:40:31.431]
============================= START TEST ACC1 NORMAL ILDO6 100MA (Item178) =============================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ildo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[pmuadc --read ildo6 --avg 4(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ildo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006443s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ildo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mA 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 109.2503 mA
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 109.2503 mA
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 109.2503

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel ildo6:  and  mA == 109.2503

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 109.2503
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024709s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Normal ildo6 100mA_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [109.2503], spec is [Item0=85 ; Item1=145 ; ], mode is [1]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 109.2503
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000628s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1 Normal ildo6 100mA_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 109.2503
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000019s) +++++++++++

[2016-04-05 17:40:31.431]
============= END TEST ACC1 Normal ildo6 100mA (TestResult : PASS ; Duration : 0.037210s) =============

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Normal ildo6 100mA,,,109.2503,85,145,mA,)

[2016-04-05 17:40:31.431]
Item Name:ACC1 Normal ildo6 100mA, [85,145]

[2016-04-05 17:40:31.431]
================================ START TEST ACC1 BYPASS VLDO6 (Item179) ================================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> accessory --powermode bypass 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[accessory --powermode bypass(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:accessory --powermode bypass,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> accessory --powermode bypass 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006504s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> accessory --powermode bypass 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:accessory --powermode bypass
setting accessory rail to bypass mode
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> accessory --powermode bypass
setting accessory rail to bypass mode
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : setting accessory rail to bypass modeOK

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between accessory --powermode bypass and [001D38CC:3020213A] :-) == setting accessory rail to bypass modeOK

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> setting accessory rail to bypass modeOK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021112s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ldo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[pmuadc --read ldo6 --avg 4(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ldo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> setting accessory rail to bypass modeOK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006054s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ldo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3771.5758 mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read ldo6 --avg 4
PMU ADC test
ADC Channel ldo6: 3771.5758 mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 3771.5758

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel ldo6:  and  mV == 3771.5758

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3771.5758
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.023149s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc1BypassVldo6 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3771.5758
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Bypass vldo6_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [3771.5758], spec is [Item0=3400 ; Item1=4350 ; ], mode is [1]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3771.5758
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000824s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1 Bypass vldo6_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 3771.5758
+++++++++++ [7] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:40:31.431]
================ END TEST ACC1 Bypass vldo6 (TestResult : PASS ; Duration : 0.067434s) ================

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Bypass vldo6,,,3771.5758,3400,4350,,)

[2016-04-05 17:40:31.431]
Item Name:ACC1 Bypass vldo6, [3400,4350]

[2016-04-05 17:40:31.431]
================================ START TEST ACC1 BYPASS ILDO6 (Item180) ================================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read ildo6 --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[pmuadc --read ildo6 --avg 4(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read ildo6 --avg 4,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007504s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel ildo6:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mA 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 0.4394 mA
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read ildo6 --avg 4
PMU ADC test
ADC Channel ildo6: 0.4394 mA
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 0.4394

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel ildo6:  and  mA == 0.4394

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 0.4394
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028434s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc1Bypassildo6 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 0.4394
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Bypass ildo6_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [0.4394], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 0.4394
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000600s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1 Bypass ildo6_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 0.4394
+++++++++++ [5] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:40:31.431]
================ END TEST ACC1 Bypass ildo6 (TestResult : PASS ; Duration : 0.043699s) ================

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Bypass ildo6,,,0.4394,NA,NA,,)

[2016-04-05 17:40:31.431]
Item Name:ACC1 Bypass ildo6, {NA}

[2016-04-05 17:40:31.431]
=============================== START TEST ACC1_BRICKID_SWAP2 (Item181) ===============================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 open-brickid"(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 open-brickid",2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006667s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 open-brickid" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 open-brickid"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 open-brickid" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021152s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005645s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 5.7997 mV
brick_id_usb_d+: 1816mV
brick_id_usb_d-: 9mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:31.431]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 5.7997 mV
brick_id_usb_d+: 1816mV
brick_id_usb_d-: 9mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:31.431]
CATCH_VALUE => Catch OK : 5.7997

[2016-04-05 17:40:31.431]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 5.7997

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 5.7997
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.134333s) ++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1_BrickID_SWAP2_spec*] 
 
}

[2016-04-05 17:40:31.431]
JUDGE_SPEC =>  value is [5.7997], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 5.7997
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000592s) +++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1_BrickID_SWAP2_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 5.7997
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:40:31.431]
================ END TEST ACC1_BrickID_SWAP2 (TestResult : PASS ; Duration : 0.177360s) ================

[2016-04-05 17:40:31.431]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1_BrickID_SWAP2,,,5.7997,NA,NA,,)

[2016-04-05 17:40:31.431]
Item Name:ACC1_BrickID_SWAP2, {NA}

[2016-04-05 17:40:31.431]
================================= START TEST ACC1 BYPASS V_R (Item182) =================================

[2016-04-05 17:40:31.431]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:31.431]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 brickid-open"(STRING)]

[2016-04-05 17:40:31.431]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 brickid-open",2,0;return value:0!

[2016-04-05 17:40:31.431]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:31.431 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:31.431]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:31.431]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007163s) +++++++++++++++++++++

[2016-04-05 17:40:31.431]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:32.432]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:32.432]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:32.432]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 brickid-open" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021372s) ++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:32.432]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:32.432]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005632s) +++++++++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1815.9340 mV
brick_id_usb_d+: 1817mV
brick_id_usb_d-: 8mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:32.432]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1815.9340 mV
brick_id_usb_d+: 1817mV
brick_id_usb_d-: 8mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:32.432]
CATCH_VALUE => Catch OK : 1815.9340

[2016-04-05 17:40:32.432]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 1815.9340

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.135138s) ++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc1BypassV_R 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1 Bypass V_R_spec*] 
 
}

[2016-04-05 17:40:32.432]
JUDGE_SPEC =>  value is [1815.9340], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000603s) +++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1 Bypass V_R_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
+++++++++++ [7] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) +++++++++++

[2016-04-05 17:40:32.432]
================= END TEST ACC1 Bypass V_R (TestResult : PASS ; Duration : 0.179846s) =================

[2016-04-05 17:40:32.432]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1 Bypass V_R,,,1815.9340,NA,NA,,)

[2016-04-05 17:40:32.432]
Item Name:ACC1 Bypass V_R, {NA}

[2016-04-05 17:40:32.432]
============================== START TEST ACC1_BYPASS_IMPEDANCE (Item183) ==============================

[2016-04-05 17:40:32.432]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Acc1BypassVldo6*]/30*0.85 
DecimalPlaces ==> 5 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 106.86131
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000346s) +++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc1BypassImpedance_low 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 106.86131
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) ++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Acc1BypassVldo6*]/30*1.15 
DecimalPlaces ==> 5 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 144.57707
+++++++++++++++ [3] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000198s) +++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Acc1BypassImpedance_high 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 144.57707
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> [*Acc1BypassV_R*]/15 
DecimalPlaces ==> 5 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 121.06226
+++++++++++++++ [5] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000164s) +++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1_Bypass_Impedance_spec*] 
 
}

[2016-04-05 17:40:32.432]
JUDGE_SPEC =>  value is [121.06226], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 121.06226
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000833s) +++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1_Bypass_Impedance_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 121.06226
+++++++++++ [7] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:40:32.432]
============== END TEST ACC1_Bypass_Impedance (TestResult : PASS ; Duration : 0.013236s) ==============

[2016-04-05 17:40:32.432]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1_Bypass_Impedance,,,121.06226,NA,NA,,)

[2016-04-05 17:40:32.432]
Item Name:ACC1_Bypass_Impedance, {NA}

[2016-04-05 17:40:32.432]
=============================== START TEST ACC1_BRICKID_SWAP3 (Item184) ===============================

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:32.432]
Write to ---> MOBILE , command[tristar --mux_cfg "dx1 brickid-open"(STRING)]

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar --mux_cfg "dx1 brickid-open",2,0;return value:0!

[2016-04-05 17:40:32.432]
PostTXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006690s) +++++++++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar --mux_cfg "dx1 brickid-open" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:32.432]
PostRXToUI ===> 
{
Info ==> tristar --mux_cfg "dx1 brickid-open"
>> mux_cfg
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:32.432]
CATCH_VALUE => Catch OK : >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:32.432]
READ_COMMAND => Catch string between tristar --mux_cfg "dx1 brickid-open" and  == >> mux_cfg[001D38CC:3020213A] :-)

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020916s) ++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read brick_id --avg 4 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:32.432]
Write to ---> MOBILE , command[pmuadc --read brick_id --avg 4(STRING)]

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read brick_id --avg 4,2,0;return value:0!

[2016-04-05 17:40:32.432]
PostTXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> >> mux_cfg[001D38CC:3020213A] :-)
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006131s) +++++++++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> ADC Channel brick_id:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==>  mV 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1815.9340 mV
brick_id_usb_d+: 1817mV
brick_id_usb_d-: 7mV
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:32.432]
PostRXToUI ===> 
{
Info ==> pmuadc --read brick_id --avg 4
PMU ADC test
ADC Channel brick_id: 1815.9340 mV
brick_id_usb_d+: 1817mV
brick_id_usb_d-: 7mV
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:32.432]
CATCH_VALUE => Catch OK : 1815.9340

[2016-04-05 17:40:32.432]
READ_COMMAND => Catch string between ADC Channel brick_id:  and  mV == 1815.9340

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.134647s) ++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ACC1_SWAP3 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuset --ldo 6 --off 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:32.432]
Write to ---> MOBILE , command[pmuset --ldo 6 --off(STRING)]

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuset --ldo 6 --off,2,0;return value:0!

[2016-04-05 17:40:32.432]
PostTXToUI ===> 
{
Info ==> pmuset --ldo 6 --off 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005603s) +++++++++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> pmuset --ldo 6 --off 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuset --ldo 6 --off
Turning LDO Off
Done
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:32.432]
PostRXToUI ===> 
{
Info ==> pmuset --ldo 6 --off
Turning LDO Off
Done
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:32.432]
CATCH_VALUE => Catch OK : Turning LDO OffDone

[2016-04-05 17:40:32.432]
READ_COMMAND => Catch string between pmuset --ldo 6 --off and [001D38CC:3020213A] :-) == Turning LDO OffDone

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> Turning LDO OffDone
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021427s) ++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar -w "0x01 0x00" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:32.432]
Write to ---> MOBILE , command[tristar -w "0x01 0x00"(STRING)]

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar -w "0x01 0x00",2,0;return value:0!

[2016-04-05 17:40:32.432]
PostTXToUI ===> 
{
Info ==> tristar -w "0x01 0x00" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> Turning LDO OffDone
+++++++++++++++++++++ [8] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005435s) +++++++++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar -w "0x01 0x00" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar -w "0x01 0x00"
>> write
write reg 0x1 = 0x0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:32.432]
PostRXToUI ===> 
{
Info ==> tristar -w "0x01 0x00"
>> write
write reg 0x1 = 0x0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:32.432]
CATCH_VALUE => Catch OK : >> writewrite reg 0x1 = 0x0

[2016-04-05 17:40:32.432]
READ_COMMAND => Catch string between tristar -w "0x01 0x00" and [001D38CC:3020213A] :-) == >> writewrite reg 0x1 = 0x0

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> >> writewrite reg 0x1 = 0x0
++++++++++++++ [9] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022198s) ++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> tristar -w "0x02 0x00" 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:32.432]
Write to ---> MOBILE , command[tristar -w "0x02 0x00"(STRING)]

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:tristar -w "0x02 0x00",2,0;return value:0!

[2016-04-05 17:40:32.432]
PostTXToUI ===> 
{
Info ==> tristar -w "0x02 0x00" 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> >> writewrite reg 0x1 = 0x0
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005802s) ++++++++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> tristar -w "0x02 0x00" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:tristar -w "0x02 0x00"
>> write
write reg 0x2 = 0x0
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:32.432]
PostRXToUI ===> 
{
Info ==> tristar -w "0x02 0x00"
>> write
write reg 0x2 = 0x0
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:32.432]
CATCH_VALUE => Catch OK : >> writewrite reg 0x2 = 0x0

[2016-04-05 17:40:32.432]
READ_COMMAND => Catch string between tristar -w "0x02 0x00" and [001D38CC:3020213A] :-) == >> writewrite reg 0x2 = 0x0

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> >> writewrite reg 0x2 = 0x0
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021029s) ++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ACC1_SWAP3 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
+++++++ [12] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) +++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ACC1_BrickID_SWAP3_spec*] 
 
}

[2016-04-05 17:40:32.432]
JUDGE_SPEC =>  value is [1815.9340], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
+++++++++++++++ [13] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000615s) +++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ACC1_BrickID_SWAP3_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 1815.9340
+++++++++++ [14] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) +++++++++++

[2016-04-05 17:40:32.432]
================ END TEST ACC1_BrickID_SWAP3 (TestResult : PASS ; Duration : 0.269621s) ================

[2016-04-05 17:40:32.432]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ACC1_BrickID_SWAP3,,,1815.9340,NA,NA,,)

[2016-04-05 17:40:32.432]
Item Name:ACC1_BrickID_SWAP3, {NA}

[2016-04-05 17:40:32.432]
================================= START TEST BATTERY VOLTAGE (Item185) =================================

[2016-04-05 17:40:32.432]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> dev -k GasGauge -p 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:32.432]
Write to ---> MOBILE , command[dev -k GasGauge -p(STRING)]

[2016-04-05 17:40:32.432]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:dev -k GasGauge -p,2,0;return value:0!

[2016-04-05 17:40:32.432]
PostTXToUI ===> 
{
Info ==> dev -k GasGauge -p 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:32.432 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:32.432]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:32.432]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.007069s) +++++++++++++++++++++

[2016-04-05 17:40:32.432]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> dev -k GasGauge -p 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:dev -k GasGauge -p

                type: "GasGauge"
              vendor: "TI"
               model: "BQ27546"
          fw-version: "0x601"
          hw-version: "0xA8"
         temperature: "29C"
             voltage: "3817mV"
  remaining-capacity: "995mAh"
       full-capacity: "1832mAh"
             current: "-621mA"
       time-to-empty: "92min"
        time-to-full: "N/A"
       average-power: "-2370mW"
   charge-percentage: "55%"
         cycle-count: "0"
             chem-id: "0x3695"
       chem-capacity: "1929mAh"
     design-capacity: "1820mAh"
    nominal-capacity: "1878mAh"
 chem-cap-updates-en: "Yes"
              sealed: "Yes"
       pairing-count: "1"

[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:34.434]
PostRXToUI ===> 
{
Info ==> dev -k GasGauge -p

                type: "GasGauge"
              vendor: "TI"
               model: "BQ27546"
          fw-version: "0x601"
          hw-version: "0xA8"
         temperature: "29C"
             voltage: "3817mV"
  remaining-capacity: "995mAh"
       full-capacity: "1832mAh"
             current: "-621mA"
       time-to-empty: "92min"
        time-to-full: "N/A"
       average-power: "-2370mW"
   charge-percentage: "55%"
         cycle-count: "0"
             chem-id: "0x3695"
       chem-capacity: "1929mAh"
     design-capacity: "1820mAh"
    nominal-capacity: "1878mAh"
 chem-cap-updates-en: "Yes"
              sealed: "Yes"
       pairing-count: "1"

[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:34.434]
CATCH_VALUE => Catch OK : type: "GasGauge"              vendor: "TI"               model: "BQ27546"          fw-version: "0x601"          hw-version: "0xA8"         temperature: "29C"             voltage: "3817mV"  remaining-capacity: "995mAh"       full-capacity: "1832mAh"             current: "-621mA"       time-to-empty: "92min"        time-to-full: "N/A"       average-power: "-2370mW"   charge-percentage: "55%"         cycle-count: "0"             chem-id: "0x3695"       chem-capacity: "1929mAh"     design-capacity: "1820mAh"    nominal-capacity: "1878mAh" chem-cap-updates-en: "Yes"              sealed: "Yes"       pairing-count: "1"

[2016-04-05 17:40:34.434]
READ_COMMAND => Catch string between dev -k GasGauge -p and [001D38CC:3020213A] :-) == type: "GasGauge"              vendor: "TI"               model: "BQ27546"          fw-version: "0x601"          hw-version: "0xA8"         temperature: "29C"             voltage: "3817mV"  remaining-capacity: "995mAh"       full-capacity: "1832mAh"             current: "-621mA"       time-to-empty: "92min"        time-to-full: "N/A"       average-power: "-2370mW"   charge-percentage: "55%"         cycle-count: "0"             chem-id: "0x3695"       chem-capacity: "1929mAh"     design-capacity: "1820mAh"    nominal-capacity: "1878mAh" chem-cap-updates-en: "Yes"              sealed: "Yes"       pairing-count: "1"

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> type: "GasGauge"              vendor: "TI"               model: "BQ27546"          fw-version: "0x601"          hw-version: "0xA8"         temperature: "29C"             voltage: "3817mV"  remaining-capacity: "995mAh"       full-capacity: "1832mAh"             current: "-621mA"       time-to-empty: "92min"        time-to-full: "N/A"       average-power: "-2370mW"   charge-percentage: "55%"         cycle-count: "0"             chem-id: "0x3695"       chem-capacity: "1929mAh"     design-capacity: "1820mAh"    nominal-capacity: "1878mAh" chem-cap-updates-en: "Yes"              sealed: "Yes"       pairing-count: "1"
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.063557s) ++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> GasGauge 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> type: "GasGauge"              vendor: "TI"               model: "BQ27546"          fw-version: "0x601"          hw-version: "0xA8"         temperature: "29C"             voltage: "3817mV"  remaining-capacity: "995mAh"       full-capacity: "1832mAh"             current: "-621mA"       time-to-empty: "92min"        time-to-full: "N/A"       average-power: "-2370mW"   charge-percentage: "55%"         cycle-count: "0"             chem-id: "0x3695"       chem-capacity: "1929mAh"     design-capacity: "1820mAh"    nominal-capacity: "1878mAh" chem-cap-updates-en: "Yes"              sealed: "Yes"       pairing-count: "1"
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000022s) ++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> GasGauge 
REGEX ==> voltage: "(.*?)mV" 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 3817
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000301s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Battery Voltage_spec*] 
 
}

[2016-04-05 17:40:34.434]
JUDGE_SPEC =>  value is [3817], spec is [Item0=3400 ; Item1=4350 ; ], mode is [1]

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 3817
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.003124s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Battery Voltage_units*] 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 3817
+++++++++++ [6] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000038s) +++++++++++

[2016-04-05 17:40:34.434]
================= END TEST Battery Voltage (TestResult : PASS ; Duration : 2.110826s) =================

[2016-04-05 17:40:34.434]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Battery Voltage,,,3817,3400,4350,mV,)

[2016-04-05 17:40:34.434]
Item Name:Battery Voltage, [3400,4350]

[2016-04-05 17:40:34.434]
================================= START TEST BATTERY CURRENT (Item186) =================================

[2016-04-05 17:40:34.434]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> GasGauge 
REGEX ==> current: "(.*?)mA" 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> -621
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000390s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Battery Current_spec*] 
 
}

[2016-04-05 17:40:34.434]
JUDGE_SPEC =>  value is [-621], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> -621
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000838s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Battery Current_units*] 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> -621
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) +++++++++++

[2016-04-05 17:40:34.434]
================= END TEST Battery Current (TestResult : PASS ; Duration : 0.017202s) =================

[2016-04-05 17:40:34.434]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Battery Current,,,-621,NA,NA,mA,)

[2016-04-05 17:40:34.434]
Item Name:Battery Current, {NA}

[2016-04-05 17:40:34.434]
============================== START TEST BATTERY AVERAGE POWER (Item187) ==============================

[2016-04-05 17:40:34.434]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> GasGauge 
REGEX ==> average-power: "(.*?)mW" 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> -2370
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000442s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Battery Average Power_spec*] 
 
}

[2016-04-05 17:40:34.434]
JUDGE_SPEC =>  value is [-2370], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> -2370
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000771s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Battery Average Power_units*] 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> -2370
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000025s) +++++++++++

[2016-04-05 17:40:34.434]
============== END TEST Battery Average Power (TestResult : PASS ; Duration : 0.006271s) ==============

[2016-04-05 17:40:34.434]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Battery Average Power,,,-2370,NA,NA,mW,)

[2016-04-05 17:40:34.434]
Item Name:Battery Average Power, {NA}

[2016-04-05 17:40:34.434]
============================ START TEST BATTERY CHARGE PERCENTAGE (Item188) ============================

[2016-04-05 17:40:34.434]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> GasGauge 
REGEX ==> charge-percentage: "(.*?)%" 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 55
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000401s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Battery Charge Percentage_spec*] 
 
}

[2016-04-05 17:40:34.434]
JUDGE_SPEC =>  value is [55], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 55
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000751s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Battery Charge Percentage_units*] 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 55
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) +++++++++++

[2016-04-05 17:40:34.434]
============ END TEST Battery Charge Percentage (TestResult : PASS ; Duration : 0.005894s) ============

[2016-04-05 17:40:34.434]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Battery Charge Percentage,,,55,NA,NA,%,)

[2016-04-05 17:40:34.434]
Item Name:Battery Charge Percentage, {NA}

[2016-04-05 17:40:34.434]
============================== START TEST I2C ISOLATOR DISABLE (Item189) ==============================

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 0 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:34.434]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 0(STRING)]

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 0,2,0;return value:0!

[2016-04-05 17:40:34.434]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006689s) +++++++++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 25 --output 0 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 0
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-04-05 17:40:34.434]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:34.434]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:40:34.434]
READ_COMMAND => Catch string between socgpio --port 1 --pin 25 --output 0 and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021210s) ++++++++++++++

[2016-04-05 17:40:34.434]
=============== END TEST I2C Isolator Disable (TestResult : PASS ; Duration : 0.031439s) ===============

[2016-04-05 17:40:34.434]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(I2C Isolator Disable,,,OK,NA,NA,,)

[2016-04-05 17:40:34.434]
Item Name:I2C Isolator Disable, {NA}

[2016-04-05 17:40:34.434]
====================================== START TEST AMIOK (Item190) ======================================

[2016-04-05 17:40:34.434]
^=^ Begin subItem : AMIOK_CHECK:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> PASS
+++++++++++++++ [1] AMIOK_CHECK:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001359s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 1 
IP_NoParametric ==> 1 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> PASS
+++++++++++ [2] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) +++++++++++

[2016-04-05 17:40:34.434]
====================== END TEST AmIOK (TestResult : PASS ; Duration : 0.004510s) ======================

[2016-04-05 17:40:34.434]
Item Name:AmIOK, {NA}

[2016-04-05 17:40:34.434]
================================= START TEST UNIT SN CHANGED (Item191) =================================

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sn 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:34.434]
Write to ---> MOBILE , command[sn(STRING)]

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sn,2,0;return value:0!

[2016-04-05 17:40:34.434]
PostTXToUI ===> 
{
Info ==> sn 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006895s) +++++++++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Serial:  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 3 
END ==> :-) 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sn
Serial: C7CRH00AH7X8
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:3.000000);return value:0!

[2016-04-05 17:40:34.434]
PostRXToUI ===> 
{
Info ==> sn
Serial: C7CRH00AH7X8
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:34.434]
CATCH_VALUE => Catch OK : C7CRH00AH7X8

[2016-04-05 17:40:34.434]
READ_COMMAND => Catch string between Serial:  and [001D38CC:3020213A] :-) == C7CRH00AH7X8

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> C7CRH00AH7X8
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.006974s) ++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ESN 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> C7CRH00AH7X8
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000031s) ++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : COMPARE:RETURN_VALUE: ===> parameters:
{
Comparison1 ==> ENDSN ==> [*ESN*] 
STARTSN ==> [*BISN*] 
 
}

[2016-04-05 17:40:34.434]
COMPARE => Result : C7CRH00AH7X8

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> C7CRH00AH7X8
+++++++++++++++++ [4] COMPARE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001044s) +++++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Unit SN Changed_spec*] 
 
}

[2016-04-05 17:40:34.434]
JUDGE_SPEC =>  value is [C7CRH00AH7X8], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> C7CRH00AH7X8
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000792s) +++++++++++++++

[2016-04-05 17:40:34.434]
================= END TEST Unit SN Changed (TestResult : PASS ; Duration : 0.024302s) =================

[2016-04-05 17:40:34.434]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Unit SN Changed,,,C7CRH00AH7X8,NA,NA,,C7CRH00AH7X8)

[2016-04-05 17:40:34.434]
Item Name:Unit SN Changed, {NA}

[2016-04-05 17:40:34.434]
================================== START TEST WRITE QT1 CB (Item192) ==================================

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SAVE_NOWTIME:RETURN_VALUE: ===> parameters:
{
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 
++++++++++++++ [1] SAVE_NOWTIME:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000238s) ++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> rtc --set [*NowTime*] 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:34.434]
Write to ---> MOBILE , command[rtc --set 20160405174034(STRING)]

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:rtc --set 20160405174034,2,0;return value:0!

[2016-04-05 17:40:34.434]
PostTXToUI ===> 
{
Info ==> rtc --set 20160405174034 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 
+++++++++++++++++++++ [2] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006466s) +++++++++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> rtc --set [*NowTime*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:rtc --set 20160405174034
20160405174034
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:40:34.434]
PostRXToUI ===> 
{
Info ==> rtc --set 20160405174034
20160405174034
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:34.434]
CATCH_VALUE => Catch OK : 20160405174034

[2016-04-05 17:40:34.434]
READ_COMMAND => Catch string between rtc --set [*NowTime*] and [001D38CC:3020213A] :-) == 20160405174034

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 20160405174034
++++++++++++++ [3] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021671s) ++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : WRITE_CONTROL_BIT:RETURN_VALUE: ===> parameters:
{
STRING ==> cbwrite 0x81 [*TEST_RESULT*] [*SoftVersion*] 
SEND_GETNONCE ==> STRING ==> getnonce 
TARGET ==> MOBILE 
 
SEND_PASSWORD ==> TARGET ==> MOBILE 
NUART ==> 1 
 
TARGET ==> MOBILE 
RECEIVE_FOR_PASS ==> TARGET ==> MOBILE 
END_SYMBOL ==> Item0=> ;  
TIMEOUT ==> 8 
 
RECEIVE_FOR_FAIL ==> TARGET ==> MOBILE 
BEGIN ==> cbwrite 0x81 [*TEST_RESULT*] [*SoftVersion*] 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
 
RECEIVE_GETNONCE ==> TARGET ==> MOBILE 
RETURN_DATA ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 8 
 
RECEIVE_PASSWORD ==> TARGET ==> MOBILE 
BEGIN ==>  
DELETE_ENTER ==> 1 
INTERVAL ==> 0.25 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 8 
END ==> :-) 
 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:34.434]
Write to ---> MOBILE , command[cbwrite 0x81 fail 1.0d39_EVT_32(STRING)]

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:cbwrite 0x81 fail 1.0d39_EVT_32,2,0;return value:0!

[2016-04-05 17:40:34.434]
PostTXToUI ===> 
{
Info ==> cbwrite 0x81 fail 1.0d39_EVT_32 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:cbwrite 0x81 fail 1.0d39_EVT_32
0x81 Failed 1 1 13 150486034 1.0d39_EVT_32
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:40:34.434]
PostRXToUI ===> 
{
Info ==> cbwrite 0x81 fail 1.0d39_EVT_32
0x81 Failed 1 1 13 150486034 1.0d39_EVT_32
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:34.434]
CATCH_VALUE => Catch OK : 0x81 Failed 1 1 13 150486034 1.0d39_EVT_32OK

[2016-04-05 17:40:34.434]
READ_COMMAND => Catch string between cbwrite 0x81 [*TEST_RESULT*] [*SoftVersion*] and [001D38CC:3020213A] :-) == 0x81 Failed 1 1 13 150486034 1.0d39_EVT_32OK

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 0x81 Failed 1 1 13 150486034 1.0d39_EVT_32OK
++++++++++++ [4] WRITE_CONTROL_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.061169s) ++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CB_WRITE 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 0x81 Failed 1 1 13 150486034 1.0d39_EVT_32OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CB_WRITE 
REGEX ==> (Passed|Incomplete|Failed|Untested) 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> Failed
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000155s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CB_WRITE_RESULT 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> Failed
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_PASS ==> PASS 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> PASS
+++++ [8] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) +++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Write QT1 CB_spec*] 
 
}

[2016-04-05 17:40:34.434]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> PASS
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000617s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> PASS
+++++++++++ [10] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) +++++++++++

[2016-04-05 17:40:34.434]
=================== END TEST Write QT1 CB (TestResult : PASS ; Duration : 0.104575s) ===================

[2016-04-05 17:40:34.434]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Write QT1 CB,,,PASS,NA,NA,,)

[2016-04-05 17:40:34.434]
Item Name:Write QT1 CB, {NA}

[2016-04-05 17:40:34.434]
================================== START TEST QT1 CB CHECK (Item193) ==================================

[2016-04-05 17:40:34.434]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> cbread 0x81 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:34.434]
Write to ---> MOBILE , command[cbread 0x81(STRING)]

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:cbread 0x81,2,0;return value:0!

[2016-04-05 17:40:34.434]
PostTXToUI ===> 
{
Info ==> cbread 0x81 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.009972s) +++++++++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> cbread 0x81 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:40:34.434]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:cbread 0x81
0x81 Failed 1 1 13 150486034 1.0d39_EVT_32
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:40:34.434]
PostRXToUI ===> 
{
Info ==> cbread 0x81
0x81 Failed 1 1 13 150486034 1.0d39_EVT_32
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:34.434 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:34.434]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:34.434]
CATCH_VALUE => Catch OK : 0x81 Failed 1 1 13 150486034 1.0d39_EVT_32

[2016-04-05 17:40:34.434]
READ_COMMAND => Catch string between cbread 0x81 and [001D38CC:3020213A] :-) == 0x81 Failed 1 1 13 150486034 1.0d39_EVT_32

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 0x81 Failed 1 1 13 150486034 1.0d39_EVT_32
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.018866s) ++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CB_READ 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> 0x81 Failed 1 1 13 150486034 1.0d39_EVT_32
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CB_READ 
REGEX ==> ([PF]a[si][sl]ed) 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> Failed
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000160s) +++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CB_READ_RESULT 
}

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> Failed
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : COMPARE:RETURN_VALUE: ===> parameters:
{
Comparison1 ==> Controlbit_Write ==> [*CB_WRITE_RESULT*] 
Controlbit_Read ==> [*CB_READ_RESULT*] 
 
}

[2016-04-05 17:40:34.434]
COMPARE => Result : Failed

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> Failed
+++++++++++++++++ [6] COMPARE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000898s) +++++++++++++++++

[2016-04-05 17:40:34.434]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*QT1 CB Check_spec*] 
 
}

[2016-04-05 17:40:34.434]
JUDGE_SPEC =>  value is [Failed], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:34.434]
RETURN_VALUE ===> Failed
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000649s) +++++++++++++++

[2016-04-05 17:40:34.434]
=================== END TEST QT1 CB Check (TestResult : PASS ; Duration : 0.041045s) ===================

[2016-04-05 17:40:34.434]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(QT1 CB Check,,,Failed,NA,NA,,Failed)

[2016-04-05 17:40:34.434]
Item Name:QT1 CB Check, {NA}

[2016-04-05 17:40:35.435]
=================================== START TEST DISPLAY DUT (Item194) ===================================

[2016-04-05 17:40:35.435]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -h 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:35.435]
Write to ---> MOBILE , command[bl -h(STRING)]

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -h,2,0;return value:0!

[2016-04-05 17:40:35.435]
PostTXToUI ===> 
{
Info ==> bl -h 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:35.435 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:35.435]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006396s) +++++++++++++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -h 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -h
OK
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:40:35.435]
PostRXToUI ===> 
{
Info ==> bl -h
OK
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:35.435 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:35.435]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:35.435]
CATCH_VALUE => Catch OK : OK

[2016-04-05 17:40:35.435]
READ_COMMAND => Catch string between bl -h and [001D38CC:3020213A] :-) == OK

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.006764s) ++++++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : SHOW_RESULT_ON_SCREEN:RETURN_VALUE: ===> parameters:
{
PASSCOMMAND ==> pattern e 
SINGLE/MULTI ==> SINGLE 
READ_COMMAND:RETURN_VALUE: ==> MATCHTYPE ==> 0 
BEGIN ==>  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
 
}

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:35.435]
Write to ---> MOBILE , command[pattern f(STRING)]

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pattern f,2,0;return value:0!

[2016-04-05 17:40:35.435]
PostTXToUI ===> 
{
Info ==> pattern f 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:35.435 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:35.435]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pattern f
Finish!
[001D38CC:3020213A] :-)  TerminateSymbol:(
    "[001D38CC:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-04-05 17:40:35.435]
PostRXToUI ===> 
{
Info ==> pattern f
Finish!
[001D38CC:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:35.435 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-04-05 17:40:35.435]
READ_COMMAND => Read command from MOBILE pass!

[2016-04-05 17:40:35.435]
CATCH_VALUE => Catch OK : pattern fFinish!

[2016-04-05 17:40:35.435]
READ_COMMAND => Catch string between  and [001D38CC:3020213A] :-) == pattern fFinish!

[2016-04-05 17:40:35.435]
SHOW_RESULT_ON_SCREEN => Read UartData :pattern fFinish!

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> pattern fFinish!
++++++++++ [3] SHOW_RESULT_ON_SCREEN:RETURN_VALUE: (TestResult : PASS ; Duration : 0.029629s) ++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> PASS
+++++ [4] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) +++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> PASS
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Display DUT_spec*] 
 
}

[2016-04-05 17:40:35.435]
JUDGE_SPEC =>  value is [PASS], spec is [Item0=NA ; ], mode is [2]

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> PASS
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000635s) +++++++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> reset 
TARGET ==> MOBILE 
}

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:35.435]
Write to ---> MOBILE , command[reset(STRING)]

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:reset,2,0;return value:0!

[2016-04-05 17:40:35.435]
PostTXToUI ===> 
{
Info ==> reset 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:35.435 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-04-05 17:40:35.435]
SEND_COMMAND => Send command to MOBILE pass!

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> PASS
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005439s) +++++++++++++++++++++

[2016-04-05 17:40:35.435]
=================== END TEST Display DUT (TestResult : PASS ; Duration : 0.059209s) ===================

[2016-04-05 17:40:35.435]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Display DUT,,,PASS,NA,NA,,)

[2016-04-05 17:40:35.435]
Item Name:Display DUT, {NA}

[2016-04-05 17:40:35.435]
================================== START TEST RESET FIXTURE (Item195) ==================================

[2016-04-05 17:40:35.435]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Reset Fixture 
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-04-05 17:40:35.435]
Write to ---> FIXTURE , command[Reset Fixture(STRING)]

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Reset Fixture,2,0;return value:0!

[2016-04-05 17:40:35.435]
PostTXToUI ===> 
{
Info ==> Reset Fixture 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:35.435 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-04-05 17:40:35.435]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006634s) +++++++++++++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Reset Fixture 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 30 
END ==> @_@ 
}

[2016-04-05 17:40:35.435]
[/Users/build/archive/cm_d10_QT1-PREBURN_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Reset Fixture
Reset Fixture Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-04-05 17:40:35.435]
PostRXToUI ===> 
{
Info ==> Reset Fixture
Reset Fixture Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-04-05 17:40:35.435 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-04-05 17:40:35.435]
READ_COMMAND => Read command from FIXTURE pass!

[2016-04-05 17:40:35.435]
CATCH_VALUE => Catch OK : Reset Fixture Pass

[2016-04-05 17:40:35.435]
READ_COMMAND => Catch string between Reset Fixture and @_@ == Reset Fixture Pass

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> Reset Fixture Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.648379s) ++++++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 0 
}

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> Reset Fixture Pass
+++++++++++ [3] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) +++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> PASS
+++++ [4] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) +++++

[2016-04-05 17:40:35.435]
================== END TEST Reset Fixture (TestResult : PASS ; Duration : 0.660675s) ==================

[2016-04-05 17:40:35.435]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Reset Fixture,,,PASS,NA,NA,,)

[2016-04-05 17:40:35.435]
Item Name:Reset Fixture, {NA}

[2016-04-05 17:40:35.435]
================================== START TEST END_TEST_QT1 (Item197) ==================================

[2016-04-05 17:40:35.435]
^=^ Begin subItem : CLOSE_TARGET:RETURN_VALUE: ===> parameters:
{
TARGET ==> MOBILE 
}

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> 
++++++++++++++ [1] CLOSE_TARGET:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000515s) ++++++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : CLOSE_TARGET:RETURN_VALUE: ===> parameters:
{
TARGET ==> FIXTURE 
}

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> 
++++++++++++++ [2] CLOSE_TARGET:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000498s) ++++++++++++++

[2016-04-05 17:40:35.435]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-04-05 17:40:35.435]
RETURN_VALUE ===> PASS
+++++ [3] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++

[2016-04-05 17:40:35.435]
=================== END TEST END_TEST_QT1 (TestResult : PASS ; Duration : 0.005877s) ===================

[2016-04-05 17:40:35.435]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(END_TEST_QT1,,,PASS,NA,NA,,)

[2016-04-05 17:40:35.435]
Item Name:END_TEST_QT1, {NA}

[2016-04-05 17:40:35.435]
############################### END DUT PROGRESS (Duration : 98.557880) ###############################

[2016-04-05 17:40:35.435]
It's EVT, upload process log!

[2016-04-05 17:40:35.435]
PuddingPDCA Framework : Start MakeBlobZIP_File(szFileName = /vault/C7CRH00AH7X8_UpPDCAFile.zip, FolderPath = /vault/Muifa/20160405/FAIL_C7CRH00AH7X8_2016-04-05 17-38-57)
