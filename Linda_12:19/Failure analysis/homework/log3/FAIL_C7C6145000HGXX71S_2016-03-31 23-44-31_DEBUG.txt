PEGATRON ATS
PROJECT: D10
STATION: PGPD_F02-3FA-02A_3_CG-SENSOR
Overlay_Version : 1.0d39_EVT_34


[2016-03-31 23:44:31.331]
########################################## START DUT PROGRESS ##########################################

[2016-03-31 23:44:31.331]
PuddingPDCA Framework : pVersion = 1.0d39_EVT_34, STATOIN_NAME = D10_CG-SENSOR.app, SOFTWARE_LIMITS = 1.0

[2016-03-31 23:44:31.331]
=============================== START TEST START_TEST_CG-SENSOR (Item0) ===============================

[2016-03-31 23:44:31.331]
^=^ Begin subItem : OPEN_TARGET: ===> parameters:
{
TARGET ==> MOBILE 
}

[2016-03-31 23:44:31.331]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART openPort:baudeRate:dataBit:parity:stopBits:endSymbol:],47) open uart : /dev/cu.usbserial-UUT1 , baudeRate : 115200 

[2016-03-31 23:44:33.333]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART openPort:baudeRate:dataBit:parity:stopBits:endSymbol:],69) Open uart ok!

[2016-03-31 23:44:33.333]
OPEN_TARGET => Open uart for MOBILE:/dev/cu.usbserial-UUT1 pass!

[2016-03-31 23:44:33.333]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] OPEN_TARGET: (TestResult : PASS ; Duration : 1.505326s) +++++++++++++++++++++

[2016-03-31 23:44:33.333]
^=^ Begin subItem : OPEN_TARGET: ===> parameters:
{
TARGET ==> FIXTURE 
}

[2016-03-31 23:44:33.333]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART openPort:baudeRate:dataBit:parity:stopBits:endSymbol:],47) open uart : /dev/cu.usbserial-FIXTURE1 , baudeRate : 115200 

[2016-03-31 23:44:34.334]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART openPort:baudeRate:dataBit:parity:stopBits:endSymbol:],69) Open uart ok!

[2016-03-31 23:44:34.334]
OPEN_TARGET => Open uart for FIXTURE:/dev/cu.usbserial-FIXTURE1 pass!

[2016-03-31 23:44:34.334]
RETURN_VALUE ===> 
+++++++++++++++++++++ [2] OPEN_TARGET: (TestResult : PASS ; Duration : 1.504811s) +++++++++++++++++++++

[2016-03-31 23:44:34.334]
^=^ Begin subItem : LOADLIMITBASEONSOCTYPE:RETURN_VALUE: ===> parameters:
{
LocalLimitFile ==> CG-SENSOR_Limit.plist 
}

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Board ID]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Board ID]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_22]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_22]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Load Touch Firmware]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Load Touch Firmware]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Bank_A]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Bank_A]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[18,18]";
    units = "";
}] for key [PROX_CG_REV_ID]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[18,18]";
    units = "";
}] for key [PROX_CG_REV_ID]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_6]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_6]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0.01,3]";
    units = "kcps/SPAD";
}] for key [PROX_CG_NO_TARGET_SIG_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0.01,3]";
    units = "kcps/SPAD";
}] for key [PROX_CG_NO_TARGET_SIG_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0.5,3]";
    units = "kcps/SPAD";
}] for key [PROX_CG_NO_TARGET_AMB_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0.5,3]";
    units = "kcps/SPAD";
}] for key [PROX_CG_NO_TARGET_AMB_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH0 LED3]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH0 LED3]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_10]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_10]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ECID]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ECID]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_4]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_4]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_15]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_15]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS Ch0 Backlight Leakage HIGH]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS Ch0 Backlight Leakage HIGH]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[208,208]";
    units = "";
}] for key [PROX_CG_DEV_ID]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[208,208]";
    units = "";
}] for key [PROX_CG_DEV_ID]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0,5]";
    units = counts;
}] for key [ALS CH0 Dark]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0,5]";
    units = counts;
}] for key [ALS CH0 Dark]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_23]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_23]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[20,300]";
    units = "kcps/SPAD";
}] for key [PROX_CG_NO_TARGET_SIG_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[20,300]";
    units = "kcps/SPAD";
}] for key [PROX_CG_NO_TARGET_SIG_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH0 LED1]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH0 LED1]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_8]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_8]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_11]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_11]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[950,105600]";
    units = "";
}] for key [ALS CH0 LED5(White)]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[950,105600]";
    units = "";
}] for key [ALS CH0 LED5(White)]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_6]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_6]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_16]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_16]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_1]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_1]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [FOS_Val]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [FOS_Val]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [RGBW_1]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [RGBW_1]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Diag Version Check]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Diag Version Check]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<1>";
    units = "";
}] for key [AOP GPIO MESA_TO_AOP_FDINT_High]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<1>";
    units = "";
}] for key [AOP GPIO MESA_TO_AOP_FDINT_High]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<0>";
    units = "";
}] for key [AOP GPIO MESA_TO_AOP_FDINT_Init]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<0>";
    units = "";
}] for key [AOP GPIO MESA_TO_AOP_FDINT_Init]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[65,100]";
    units = "";
}] for key [ALS_AR_MIN_MAX30(White)]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[65,100]";
    units = "";
}] for key [ALS_AR_MIN_MAX30(White)]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [I2C Isolator Disable]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [I2C Isolator Disable]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH1 LED5(White)]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH1 LED5(White)]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_avg_med]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_avg_med]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<0x9B>";
    units = "";
}] for key [ALS ID check]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<0x9B>";
    units = "";
}] for key [ALS ID check]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_17]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_17]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_8]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_8]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_3]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_3]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Flick_Val]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Flick_Val]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[1,100]";
    units = "";
}] for key [Flick_Count]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[1,100]";
    units = "";
}] for key [Flick_Count]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS Ch1 Backlight Leakage HIGH]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS Ch1 Backlight Leakage HIGH]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Bank_B]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Bank_B]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0,]";
    units = "";
}] for key [ALS Ch1 Combined BL High]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0,]";
    units = "";
}] for key [ALS Ch1 Combined BL High]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_1]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_1]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Check DPCl]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Check DPCl]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0.5,2]";
    units = pF;
}] for key [Convoy ExtCapacitance]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0.5,2]";
    units = pF;
}] for key [Convoy ExtCapacitance]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [I2C Isolator Enable]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [I2C Isolator Enable]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[500,1200]";
    units = "kcps/SPAD";
}] for key [PROX_CG_TARGET_SIG_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[500,1200]";
    units = "kcps/SPAD";
}] for key [PROX_CG_TARGET_SIG_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[1,100]";
    units = "";
}] for key [VSFOM_Count]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[1,100]";
    units = "";
}] for key [VSFOM_Count]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Check MtCl]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Check MtCl]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_10]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_10]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_18]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_18]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0.01,15]";
    units = "kcps/SPAD";
}] for key [PROX_CG_TARGET_SIG_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0.01,15]";
    units = "kcps/SPAD";
}] for key [PROX_CG_TARGET_SIG_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[-70,0]";
    units = mm;
}] for key [PROX_CG_TARGET_RAW_DIST_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[-70,0]";
    units = mm;
}] for key [PROX_CG_TARGET_RAW_DIST_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_5]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_5]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[1,100]";
    units = "";
}] for key [FOS_Count]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[1,100]";
    units = "";
}] for key [FOS_Count]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [VSFOM_Val]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [VSFOM_Val]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Compare X582 Module SN with SFC]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Compare X582 Module SN with SFC]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<None>";
    units = "";
}] for key [Row failures]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<None>";
    units = "";
}] for key [Row failures]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH0 LED4]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH0 LED4]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_3]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_3]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Check And Burn MLB OrbG]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Check And Burn MLB OrbG]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Write GMT Date and Time]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Write GMT Date and Time]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[55,100]";
    units = "";
}] for key [ALS_AR_MIN_MAX30(Black)]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[55,100]";
    units = "";
}] for key [ALS_AR_MIN_MAX30(Black)]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Check BLCl]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Check BLCl]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [MLB_SN]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [MLB_SN]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_11]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_11]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_19]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_19]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [RGBW_2]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [RGBW_2]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_7]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_7]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH0 LED2]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH0 LED2]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0,5]";
    units = counts;
}] for key [ALS CH1 Dark]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0,5]";
    units = counts;
}] for key [ALS CH1 Dark]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<0x49>";
    units = "";
}] for key [Mesa i2c read through AOP]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<0x49>";
    units = "";
}] for key [Mesa i2c read through AOP]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Upload LCM SN]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Upload LCM SN]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_5]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_5]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [X582 Module SN From diag]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [X582 Module SN From diag]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_0]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_0]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0.01,3]";
    units = mm;
}] for key [PROX_CG_TARGET_RAW_DIST_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0.01,3]";
    units = mm;
}] for key [PROX_CG_TARGET_RAW_DIST_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0.01,3]";
    units = mm;
}] for key [PROX_CG_NO_TARGET_RAW_DIST_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0.01,3]";
    units = mm;
}] for key [PROX_CG_NO_TARGET_RAW_DIST_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[700,32000]";
    units = "";
}] for key [ALS CH0 LED5(Black)]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[700,32000]";
    units = "";
}] for key [ALS CH0 LED5(Black)]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Check GLCl]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Check GLCl]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_12]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_12]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<0xCD>";
    units = "";
}] for key [Convoy Device ID Check]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<0xCD>";
    units = "";
}] for key [Convoy Device ID Check]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_9]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_9]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_20]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_20]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[37000,65500]";
    units = "";
}] for key [Turtle Value Reading]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[37000,65500]";
    units = "";
}] for key [Turtle Value Reading]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<OK>";
    units = "";
}] for key [Load X582 Firmware]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<OK>";
    units = "";
}] for key [Load X582 Firmware]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH1 LED5(Black)]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [ALS CH1 LED5(Black)]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Front Camera SN]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Front Camera SN]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_2]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_2]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_7]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_7]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Compare Front Camera SN With SFC]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Compare Front Camera SN With SFC]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [AOP_TO_MESA_MENU_CONN]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [AOP_TO_MESA_MENU_CONN]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<0x81B0>";
    units = "";
}] for key [Orb Value Check]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<0x81B0>";
    units = "";
}] for key [Orb Value Check]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_0]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_0]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[3,9]";
    units = "kcps/SPAD";
}] for key [PROX_CG_TARGET_AMB_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[3,9]";
    units = "kcps/SPAD";
}] for key [PROX_CG_TARGET_AMB_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_13]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_13]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0,]";
    units = "";
}] for key [ALS Ch0 Combined BL High]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0,]";
    units = "";
}] for key [ALS Ch0 Combined BL High]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[-20,100]";
    units = mm;
}] for key [PROX_CG_NO_TARGET_RAW_DIST_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[-20,100]";
    units = mm;
}] for key [PROX_CG_NO_TARGET_RAW_DIST_AVE]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<0>";
    units = "";
}] for key [AOP GPIO MESA_TO_AOP_FDINT_Low]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<0>";
    units = "";
}] for key [AOP GPIO MESA_TO_AOP_FDINT_Low]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_21]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_21]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0.01,0.5]";
    units = "kcps/SPAD";
}] for key [PROX_CG_TARGET_AMB_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0.01,0.5]";
    units = "kcps/SPAD";
}] for key [PROX_CG_TARGET_AMB_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [Check OrbG]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [Check OrbG]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_9]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_9]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_4]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_diff_4]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[1690,1854]";
    units = mV;
}] for key [Chestnut PWR_EN]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[1690,1854]";
    units = mV;
}] for key [Chestnut PWR_EN]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_avg_med]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_col_avg_med]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_2]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_2]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_14]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "{NA}";
    units = "";
}] for key [CSIG_row_diff_14]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<0x00>";
    units = "";
}] for key [Muon Fault Register]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<0x00>";
    units = "";
}] for key [Muon Fault Register]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "<None>";
    units = "";
}] for key [Column failures]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "<None>";
    units = "";
}] for key [Column failures]

[2016-03-31 23:44:34.334]
Sucessful to add the limit [{
    spec = "[0.01,0.5]";
    units = "kcps/SPAD";
}] for key [PROX_CG_NO_TARGET_AMB_STD]

[2016-03-31 23:44:34.334]
Sucessful to add the units [{
    spec = "[0.01,0.5]";
    units = "kcps/SPAD";
}] for key [PROX_CG_NO_TARGET_AMB_STD]

[2016-03-31 23:44:34.334]
RETURN_VALUE ===> 
+++++++++ [3] LOADLIMITBASEONSOCTYPE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.110117s) +++++++++

[2016-03-31 23:44:34.334]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:44:34.334]
RETURN_VALUE ===> PASS
+++++ [4] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) +++++

[2016-03-31 23:44:34.334]
=============== END TEST START_TEST_CG-SENSOR (TestResult : PASS ; Duration : 3.125584s) ===============

[2016-03-31 23:44:34.334]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(START_TEST_CG-SENSOR,,,PASS,NA,NA,,)

[2016-03-31 23:44:34.334]
Item Name:START_TEST_CG-SENSOR, {NA}

[2016-03-31 23:44:34.334]
================================ START TEST INITIALISE FIXTURE (Item1) ================================

[2016-03-31 23:44:34.334]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> CY POTARY DOWN 
TARGET ==> FIXTURE 
}

[2016-03-31 23:44:34.334]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:34.334]
Write to ---> FIXTURE , command[CY POTARY DOWN(STRING)]

[2016-03-31 23:44:34.334]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:CY POTARY DOWN,2,0;return value:0!

[2016-03-31 23:44:34.334]
PostTXToUI ===> 
{
Info ==> CY POTARY DOWN 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:34.334 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:44:34.334]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:44:34.334]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006180s) +++++++++++++++++++++

[2016-03-31 23:44:34.334]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> CY POTARY DOWN 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 5 
END ==> @_@ 
}

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:CY POTARY DOWN
CY POTARY DOWN Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:35.335]
PostRXToUI ===> 
{
Info ==> CY POTARY DOWN
CY POTARY DOWN Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:35.335 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:44:35.335]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:44:35.335]
CATCH_VALUE => Catch OK : CY POTARY DOWN Pass

[2016-03-31 23:44:35.335]
READ_COMMAND => Catch string between CY POTARY DOWN and @_@ == CY POTARY DOWN Pass

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> CY POTARY DOWN Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.371578s) ++++++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> MLB Power On 
TARGET ==> FIXTURE 
}

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:35.335]
Write to ---> FIXTURE , command[MLB Power On(STRING)]

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:MLB Power On,2,0;return value:0!

[2016-03-31 23:44:35.335]
PostTXToUI ===> 
{
Info ==> MLB Power On 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:35.335 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:44:35.335]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> CY POTARY DOWN Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005547s) +++++++++++++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 5 
END ==> @_@ 
}

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:MLB Power On
MLB Power On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:35.335]
PostRXToUI ===> 
{
Info ==> MLB Power On
MLB Power On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:35.335 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:44:35.335]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:44:35.335]
CATCH_VALUE => Catch OK : MLB Power On
MLB Power On Pass

[2016-03-31 23:44:35.335]
READ_COMMAND => Catch string between  and @_@ == MLB Power On
MLB Power On Pass

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> MLB Power On
MLB Power On Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.119725s) ++++++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> USB Power On 
TARGET ==> FIXTURE 
}

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:35.335]
Write to ---> FIXTURE , command[USB Power On(STRING)]

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:USB Power On,2,0;return value:0!

[2016-03-31 23:44:35.335]
PostTXToUI ===> 
{
Info ==> USB Power On 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:35.335 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:44:35.335]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> MLB Power On
MLB Power On Pass
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004778s) +++++++++++++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 5 
END ==> @_@ 
}

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:USB Power On
USB Power On Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:35.335]
PostRXToUI ===> 
{
Info ==> USB Power On
USB Power On Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:35.335 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:44:35.335]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:44:35.335]
CATCH_VALUE => Catch OK : USB Power On
USB Power On Pass

[2016-03-31 23:44:35.335]
READ_COMMAND => Catch string between  and @_@ == USB Power On
USB Power On Pass

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> USB Power On
USB Power On Pass
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.006551s) ++++++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> PASS
+++++ [7] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) +++++

[2016-03-31 23:44:35.335]
================ END TEST Initialise Fixture (TestResult : PASS ; Duration : 0.523197s) ================

[2016-03-31 23:44:35.335]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Initialise Fixture,,,PASS,NA,NA,,)

[2016-03-31 23:44:35.335]
Item Name:Initialise Fixture, {NA}

[2016-03-31 23:44:35.335]
================================== START TEST READ FIXTURE SN (Item2) ==================================

[2016-03-31 23:44:35.335]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Read Fixture SN 
TARGET ==> FIXTURE 
}

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:35.335]
Write to ---> FIXTURE , command[Read Fixture SN(STRING)]

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Read Fixture SN,2,0;return value:0!

[2016-03-31 23:44:35.335]
PostTXToUI ===> 
{
Info ==> Read Fixture SN 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:35.335 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:44:35.335]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006067s) +++++++++++++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> SN: 
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Read Fixture SN
SN:002
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:35.335]
PostRXToUI ===> 
{
Info ==> Read Fixture SN
SN:002
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:35.335 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:44:35.335]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:44:35.335]
CATCH_VALUE => Catch OK : 002

[2016-03-31 23:44:35.335]
READ_COMMAND => Catch string between SN: and @_@ == 002

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> 002
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.010296s) ++++++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FIXTURE_SN 
}

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> 002
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> FIXTURE_SN 
REGEX ==> (\d*[0-9]) 
}

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> 002
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000183s) +++++++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AFC_FIXTURE_SN 
}

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> 002
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:35.335]
^=^ Begin subItem : COMPARE:RETURN_VALUE: ===> parameters:
{
Comparison1 ==> After Catch ==> [*AFC_FIXTURE_SN*] 
burning ==> [*FIXTURE_SN*] 
 
}

[2016-03-31 23:44:35.335]
COMPARE => Result : 002

[2016-03-31 23:44:35.335]
RETURN_VALUE ===> 002
+++++++++++++++++ [6] COMPARE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000701s) +++++++++++++++++

[2016-03-31 23:44:35.335]
================= END TEST Read Fixture SN (TestResult : PASS ; Duration : 0.023953s) =================

[2016-03-31 23:44:35.335]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Read Fixture SN,,,002,NA,NA,,002)

[2016-03-31 23:44:35.335]
Item Name:Read Fixture SN, {NA}

[2016-03-31 23:44:35.335]
================================== START TEST CHECK DUT MODE (Item3) ==================================

[2016-03-31 23:44:35.335]
^=^ Begin subItem : CHECK_UNIT_LIVE:RETURN_VALUE: ===> parameters:
{
SendCommandEnter ==> STRING ==>  
TARGET ==> MOBILE 
 
LoopTimes ==> 5 
SendCommandDiags ==> STRING ==> diags 
TARGET ==> MOBILE 
 
ReciveCommandForBoot ==> MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=Password: ;  
TIMEOUT ==> 3 
END ==>  
 
ReciveCommandForDiags ==> MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
RepeatTimes ==> 3 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=] :-) ;  
TIMEOUT ==> 18 
END ==>  
 
ReciveCommandForReboot ==> MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=] :-) ;  
TIMEOUT ==> 30 
END ==> :-) 
 
ReciveCommandForEnter ==> MATCHTYPE ==> 1 
BEGIN ==>  
TARGET ==> MOBILE 
RepeatTimes ==> 3 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
INTERVAL ==> 0.25 
END_SYMBOL ==> Item0=:-) ; Item1=] ; Item2=login: ; Item3=iPhone:~ root# ;  
TIMEOUT ==> 3 
END ==>  
 
ReciveCommandForLogIn ==> MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=iPhone:~ root# ;  
TIMEOUT ==> 3 
END ==>  
 
}

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:35.335]
Write to ---> MOBILE , command[(STRING)]

[2016-03-31 23:44:35.335]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-03-31 23:44:35.335]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:35.335 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:35.335]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:38.338]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:starting battery protection reset...
battery protection reset completed: success
gas gauge read timed out
 TerminateSymbol:(
    ":-)",
    "]",
    "login:",
    "iPhone:~ root#"
) MatchType:1 IntervalTime:0.250000 TimeOut:3.000000);return value:5!

[2016-03-31 23:44:38.338]
PostRXToUI ===> 
{
Info ==> starting battery protection reset...
battery protection reset completed: success
gas gauge read timed out
 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:38.338 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:38.338]
READ_COMMAND => Read command from MOBILE fail!

[2016-03-31 23:44:41.341]
DEVICE in Unknown Mode

[2016-03-31 23:44:42.342]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:42.342]
Write to ---> MOBILE , command[(STRING)]

[2016-03-31 23:44:42.342]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-03-31 23:44:42.342]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:42.342 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:42.342]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:44.344]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Console router buffer allocated @ 0x87CD60018, size = 262144 bytes
WHO_AM_I doesn't match MPU6700's Chip ID! Expected 0x90 got 0x0
Carbon: MPU6900 is found.
Phosphorous: BMP284 is found.
Phosphorous: BMP282 is not found on SPI 4. Expected 0x58, found 0x0
time-train: 26691 uS
Link 0 speed negotiate to 3 
Link 0 width negotiate to 1 
APCIE power on completed
Device 00:00:0 config space@0x610000000
Vendor:106B Device:1007 Revision:01 ClassCode:060400 Type:01
    PriBus:00 SecBus:01 SubBus:01
    Capability 0x01 Offset:0x40 Address:0x610000040
    Capability 0x05 Offset:0x50 Address:0x610000050
    Capability 0x10 Offset:0x70 Address:0x610000070
    Extended Capability 0x0001 Ver:0x02 Offset:0x0100 Address:0x610000100
    Extended Capability 0x0019 Ver:0x01 Offset:0x0148 Address:0x610000148
    Extended Capability 0x001E Ver:0x01 Offset:0x0160 Address:0x610000160
Found device id 0x2002
Device 01:00:0 config space@0x610100000
Vendor:106B Device:2002 Revision:11 ClassCode:018002 Type:00
    BAR0 MEM C0000000/00004000
    BAR1  IO 00000000/00000004
    Capability 0x01 Offset:0x40 Address:0x610100040
    Capability 0x05 Offset:0x50 Address:0x610100050
    Capability 0x10 Offset:0x70 Address:0x610100070
    Extended Capability 0x0001 Ver:0x02 Offset:0x0100 Address:0x610100100
    Extended Capability 0x0002 Ver:0x01 Offset:0x0148 Address:0x610100148
    Extended Capability 0x0019 Ver:0x01 Offset:0x0168 Address:0x610100168
    Extended Capability 0x0018 Ver:0x01 Offset:0x0178 Address:0x610100178
    Extended Capability 0x001E Ver:0x01 Offset:0x0180 Address:0x610100180
APCIE Enumerate on completed
[0;31mERROR: [ABSM] Checksum corrupt. Found 0x6E, expected 0x71
[0m0000000: 6E A3 6D 4A AB 5C FE F8 93 25 E0 CB 82 4F 7F 56  n.mJ.\...%...O.V
0000010: F9 12 BC E7 F7 24 E8 DF 3B 04 9A 0A 5E 10 46 8E  .....$..;...^.F.
[ABSM] Clearing corrupted shutdown scratch space
[2J [0;0HD10 Diag (factory_d10_evt)
BuildEng build D10Casaval24C210af (24C210af). Revision 6648dab.
	Built at 2016/03/28 17:43:08
script: device -k ThermalSensor -e sochot 0 on 120
script: device -k ThermalSensor -e sochot 1 on 125
script: cbcolor
Setting Screen Color based on iPX Control Bits:
script: alias vbat=pmuadc --sel tigris --read vbat
script --cont startup.txt
script: alias bbon="meta 'baseband --on --load_firmware; baseband --wait_for_ready --ping'"
script: alias bbo TerminateSymbol:(
    ":-)",
    "]",
    "login:",
    "iPhone:~ root#"
) MatchType:1 IntervalTime:0.250000 TimeOut:3.000000);return value:0!

[2016-03-31 23:44:44.344]
PostRXToUI ===> 
{
Info ==> Console router buffer allocated @ 0x87CD60018, size = 262144 bytes
WHO_AM_I doesn't match MPU6700's Chip ID! Expected 0x90 got 0x0
Carbon: MPU6900 is found.
Phosphorous: BMP284 is found.
Phosphorous: BMP282 is not found on SPI 4. Expected 0x58, found 0x0
time-train: 26691 uS
Link 0 speed negotiate to 3 
Link 0 width negotiate to 1 
APCIE power on completed
Device 00:00:0 config space@0x610000000
Vendor:106B Device:1007 Revision:01 ClassCode:060400 Type:01
    PriBus:00 SecBus:01 SubBus:01
    Capability 0x01 Offset:0x40 Address:0x610000040
    Capability 0x05 Offset:0x50 Address:0x610000050
    Capability 0x10 Offset:0x70 Address:0x610000070
    Extended Capability 0x0001 Ver:0x02 Offset:0x0100 Address:0x610000100
    Extended Capability 0x0019 Ver:0x01 Offset:0x0148 Address:0x610000148
    Extended Capability 0x001E Ver:0x01 Offset:0x0160 Address:0x610000160
Found device id 0x2002
Device 01:00:0 config space@0x610100000
Vendor:106B Device:2002 Revision:11 ClassCode:018002 Type:00
    BAR0 MEM C0000000/00004000
    BAR1  IO 00000000/00000004
    Capability 0x01 Offset:0x40 Address:0x610100040
    Capability 0x05 Offset:0x50 Address:0x610100050
    Capability 0x10 Offset:0x70 Address:0x610100070
    Extended Capability 0x0001 Ver:0x02 Offset:0x0100 Address:0x610100100
    Extended Capability 0x0002 Ver:0x01 Offset:0x0148 Address:0x610100148
    Extended Capability 0x0019 Ver:0x01 Offset:0x0168 Address:0x610100168
    Extended Capability 0x0018 Ver:0x01 Offset:0x0178 Address:0x610100178
    Extended Capability 0x001E Ver:0x01 Offset:0x0180 Address:0x610100180
APCIE Enumerate on completed
[0;31mERROR: [ABSM] Checksum corrupt. Found 0x6E, expected 0x71
[0m0000000: 6E A3 6D 4A AB 5C FE F8 93 25 E0 CB 82 4F 7F 56  n.mJ.\...%...O.V
0000010: F9 12 BC E7 F7 24 E8 DF 3B 04 9A 0A 5E 10 46 8E  .....$..;...^.F.
[ABSM] Clearing corrupted shutdown scratch space
[2J [0;0HD10 Diag (factory_d10_evt)
BuildEng build D10Casaval24C210af (24C210af). Revision 6648dab.
	Built at 2016/03/28 17:43:08
script: device -k ThermalSensor -e sochot 0 on 120
script: device -k ThermalSensor -e sochot 1 on 125
script: cbcolor
Setting Screen Color based on iPX Control Bits:
script: alias vbat=pmuadc --sel tigris --read vbat
script --cont startup.txt
script: alias bbon="meta 'baseband --on --load_firmware; baseband --wait_for_ready --ping'"
script: alias bbo 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:44.344 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:44.344]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:44.344]
CATCH_VALUE => Catch OK : Console router buffer allocated @ 0x87CD60018, size = 262144 bytesWHO_AM_I doesn't match MPU6700's Chip ID! Expected 0x90 got 0x0Carbon: MPU6900 is found.Phosphorous: BMP284 is found.Phosphorous: BMP282 is not found on SPI 4. Expected 0x58, found 0x0time-train: 26691 uSLink 0 speed negotiate to 3 Link 0 width negotiate to 1 APCIE power on completedDevice 00:00:0 config space@0x610000000Vendor:106B Device:1007 Revision:01 ClassCode:060400 Type:01    PriBus:00 SecBus:01 SubBus:01    Capability 0x01 Offset:0x40 Address:0x610000040    Capability 0x05 Offset:0x50 Address:0x610000050    Capability 0x10 Offset:0x70 Address:0x610000070    Extended Capability 0x0001 Ver:0x02 Offset:0x0100 Address:0x610000100    Extended Capability 0x0019 Ver:0x01 Offset:0x0148 Address:0x610000148    Extended Capability 0x001E Ver:0x01 Offset:0x0160 Address:0x610000160Found device id 0x2002Device 01:00:0 config space@0x610100000Vendor:106B Device:2002 Revision:11 ClassCode:018002 Type:00    BAR0 MEM C0000000/00004000    BAR1  IO 00000000/00000004    Capability 0x01 Offset:0x40 Address:0x610100040    Capability 0x05 Offset:0x50 Address:0x610100050    Capability 0x10 Offset:0x70 Address:0x610100070    Extended Capability 0x0001 Ver:0x02 Offset:0x0100 Address:0x610100100    Extended Capability 0x0002 Ver:0x01 Offset:0x0148 Address:0x610100148    Extended Capability 0x0019 Ver:0x01 Offset:0x0168 Address:0x610100168    Extended Capability 0x0018 Ver:0x01 Offset:0x0178 Address:0x610100178    Extended Capability 0x001E Ver:0x01 Offset:0x0180 Address:0x610100180APCIE Enumerate on completed[0;31mERROR: [ABSM] Checksum corrupt. Found 0x6E, expected 0x71[0m0000000: 6E A3 6D 4A AB 5C FE F8 93 25 E0 CB 82 4F 7F 56  n.mJ.\...%...O.V0000010: F9 12 BC E7 F7 24 E8 DF 3B 04 9A 0A 5E 10 46 8E  .....$..;...^.F.[ABSM] Clearing corrupted shutdown scratch space[2J [0;0HD10 Diag (factory_d10_evt)BuildEng build D10Casaval24C210af (24C210af). Revision 6648dab.	Built at 2016/03/28 17:43:08script: device -k ThermalSensor -e sochot 0 on 120script: device -k ThermalSensor -e sochot 1 on 125script: cbcolorSetting Screen Color based on iPX Control Bits:script: alias vbat=pmuadc --sel tigris --read vbatscript --cont startup.txtscript: alias bbon="meta 'baseband --on --load_firmware; baseband --wait_for_ready --ping'"script: alias bbo

[2016-03-31 23:44:44.344]
READ_COMMAND => Catch string between  and  == Console router buffer allocated @ 0x87CD60018, size = 262144 bytesWHO_AM_I doesn't match MPU6700's Chip ID! Expected 0x90 got 0x0Carbon: MPU6900 is found.Phosphorous: BMP284 is found.Phosphorous: BMP282 is not found on SPI 4. Expected 0x58, found 0x0time-train: 26691 uSLink 0 speed negotiate to 3 Link 0 width negotiate to 1 APCIE power on completedDevice 00:00:0 config space@0x610000000Vendor:106B Device:1007 Revision:01 ClassCode:060400 Type:01    PriBus:00 SecBus:01 SubBus:01    Capability 0x01 Offset:0x40 Address:0x610000040    Capability 0x05 Offset:0x50 Address:0x610000050    Capability 0x10 Offset:0x70 Address:0x610000070    Extended Capability 0x0001 Ver:0x02 Offset:0x0100 Address:0x610000100    Extended Capability 0x0019 Ver:0x01 Offset:0x0148 Address:0x610000148    Extended Capability 0x001E Ver:0x01 Offset:0x0160 Address:0x610000160Found device id 0x2002Device 01:00:0 config space@0x610100000Vendor:106B Device:2002 Revision:11 ClassCode:018002 Type:00    BAR0 MEM C0000000/00004000    BAR1  IO 00000000/00000004    Capability 0x01 Offset:0x40 Address:0x610100040    Capability 0x05 Offset:0x50 Address:0x610100050    Capability 0x10 Offset:0x70 Address:0x610100070    Extended Capability 0x0001 Ver:0x02 Offset:0x0100 Address:0x610100100    Extended Capability 0x0002 Ver:0x01 Offset:0x0148 Address:0x610100148    Extended Capability 0x0019 Ver:0x01 Offset:0x0168 Address:0x610100168    Extended Capability 0x0018 Ver:0x01 Offset:0x0178 Address:0x610100178    Extended Capability 0x001E Ver:0x01 Offset:0x0180 Address:0x610100180APCIE Enumerate on completed[0;31mERROR: [ABSM] Checksum corrupt. Found 0x6E, expected 0x71[0m0000000: 6E A3 6D 4A AB 5C FE F8 93 25 E0 CB 82 4F 7F 56  n.mJ.\...%...O.V0000010: F9 12 BC E7 F7 24 E8 DF 3B 04 9A 0A 5E 10 46 8E  .....$..;...^.F.[ABSM] Clearing corrupted shutdown scratch space[2J [0;0HD10 Diag (factory_d10_evt)BuildEng build D10Casaval24C210af (24C210af). Revision 6648dab.	Built at 2016/03/28 17:43:08script: device -k ThermalSensor -e sochot 0 on 120script: device -k ThermalSensor -e sochot 1 on 125script: cbcolorSetting Screen Color based on iPX Control Bits:script: alias vbat=pmuadc --sel tigris --read vbatscript --cont startup.txtscript: alias bbon="meta 'baseband --on --load_firmware; baseband --wait_for_ready --ping'"script: alias bbo

[2016-03-31 23:44:47.347]
DEVICE in Unknown Mode

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:
[0006451C:3020213A] :- TerminateSymbol:(
    ":-)",
    "]",
    "login:",
    "iPhone:~ root#"
) MatchType:1 IntervalTime:0.250000 TimeOut:3.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> 
[0006451C:3020213A] :- 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : [0006451C:3020213A] :-

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between  and  == [0006451C:3020213A] :-

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[diags(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:diags,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==> diags 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:diags
Command 'diags' not found.
[0006451C:3020213A] :-)  TerminateSymbol:(
    "] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:18.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> diags
Command 'diags' not found.
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : diagsCommand 'diags' not found.[0006451C:3020213A] :-)

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between  and  == diagsCommand 'diags' not found.[0006451C:3020213A] :-)

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:
[0006451C:3020213A] :-)  TerminateSymbol:(
    "] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:18.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : [0006451C:3020213A] :-)

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between  and  == [0006451C:3020213A] :-)

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:
[0006451C:3020213A] :-)  TerminateSymbol:(
    "] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:18.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : [0006451C:3020213A] :-)

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between  and  == [0006451C:3020213A] :-)

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==>  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:
[0006451C:3020213A] :-)  TerminateSymbol:(
    "] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:18.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : [0006451C:3020213A] :-)

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between  and  == [0006451C:3020213A] :-)

[2016-03-31 23:44:48.348]
DEVICE in Diags Mode

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Diags Mode
++++++++++++ [1] CHECK_UNIT_LIVE:RETURN_VALUE: (TestResult : PASS ; Duration : 12.910532s) ++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 1 
IP_NoParametric ==> 0 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Diags Mode
+++++++++++ [2] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) +++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> PASS
+++++ [3] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) +++++

[2016-03-31 23:44:48.348]
================= END TEST Check DUT Mode (TestResult : PASS ; Duration : 12.914071s) =================

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check DUT Mode,,,PASS,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:Check DUT Mode, {NA}

[2016-03-31 23:44:48.348]
===================================== START TEST BOARD ID (Item4) =====================================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> boardid 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[boardid(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:boardid,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==> boardid 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005855s) +++++++++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> boardid 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:boardid
Board Id: 0x08
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> boardid
Board Id: 0x08
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : Board Id: 0x08

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between boardid and [0006451C:3020213A] :-) == Board Id: 0x08

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Board Id: 0x08
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021153s) ++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
REGEX ==> Board Id: (.*) 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 0x08
+++++++++++++++ [3] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000128s) +++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> BoardID 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 0x08
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MAPPING_TABLE:RETURN_VALUE: ===> parameters:
{
PRE_KEY ==> BoardID 
MAPPING_TABLE ==> 0x08 ==> D10 
0x0C ==> D101 
 
POST_KEY ==> MLB_TYPE 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 0x08
++++++++++++++ [5] MAPPING_TABLE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> MLB_TYPE 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> D10
++++++++ [6] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Board ID_spec*] 
 
}

[2016-03-31 23:44:48.348]
JUDGE_SPEC =>  value is [D10], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> D10
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000495s) +++++++++++++++

[2016-03-31 23:44:48.348]
===================== END TEST Board ID (TestResult : PASS ; Duration : 0.035060s) =====================

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Board ID,,,D10,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:Board ID, {NA}

[2016-03-31 23:44:48.348]
======================================= START TEST ECID (Item5) =======================================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> chipid 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[chipid(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:chipid,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==> chipid 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004425s) +++++++++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> chipid 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:chipid
Chip  ID: 8010 Version: 8.0 
Die   ID: 0000011C:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x0006451C3020213A
Raw ECID: 0006451C:3020213A
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> chipid
Chip  ID: 8010 Version: 8.0 
Die   ID: 0000011C:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x0006451C3020213A
Raw ECID: 0006451C:3020213A
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : Chip  ID: 8010 Version: 8.0 
Die   ID: 0000011C:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x0006451C3020213A
Raw ECID: 0006451C:3020213A

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between chipid and [0006451C:3020213A] :-) == Chip  ID: 8010 Version: 8.0 
Die   ID: 0000011C:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x0006451C3020213A
Raw ECID: 0006451C:3020213A

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Chip  ID: 8010 Version: 8.0 
Die   ID: 0000011C:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x0006451C3020213A
Raw ECID: 0006451C:3020213A
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.026964s) ++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CHIP_ID 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Chip  ID: 8010 Version: 8.0 
Die   ID: 0000011C:3020213A
Fuse  ID: 82000000:00000084
ECID    : 0x0006451C3020213A
Raw ECID: 0006451C:3020213A
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CHIP_ID 
REGEX ==> ECID.*?: *(.{18}) 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 0x0006451C3020213A
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000154s) +++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ECID_spec*] 
 
}

[2016-03-31 23:44:48.348]
JUDGE_SPEC =>  value is [0x0006451C3020213A], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 0x0006451C3020213A
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000522s) +++++++++++++++

[2016-03-31 23:44:48.348]
======================= END TEST ECID (TestResult : PASS ; Duration : 0.037271s) =======================

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ECID,,,0x0006451C3020213A,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:ECID, {NA}

[2016-03-31 23:44:48.348]
=================================== START TEST UPLOAD LCM SN (Item6) ===================================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z 2 --devread 3 0x51 0x0 0x39 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[i2c -z 2 --devread 3 0x51 0x0 0x39(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z 2 --devread 3 0x51 0x0 0x39,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x0 0x39 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005903s) +++++++++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> read: 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z 2 --devread 3 0x51 0x0 0x39
Reading 57 bytes from register offset 0x00 into 0x7A645098, buffer read:	
Data:  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x54  0x32  0x32  0x30  0x4C  0x39  0x47  0x30  0x37  0x32  0x59  0x41  0x45  0x31  0x54  0x54  0x32  0x2B  0x52  0x30  0x32  0x30  0x37  0x31  0x36  0x33  0x45  0x43  0x43  0x35  0x34  0x46  0x48  0x33  0x48  0x31  0x37  0x31  0x2B 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x0 0x39
Reading 57 bytes from register offset 0x00 into 0x7A645098, buffer read:	
Data:  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x54  0x32  0x32  0x30  0x4C  0x39  0x47  0x30  0x37  0x32  0x59  0x41  0x45  0x31  0x54  0x54  0x32  0x2B  0x52  0x30  0x32  0x30  0x37  0x31  0x36  0x33  0x45  0x43  0x43  0x35  0x34  0x46  0x48  0x33  0x48  0x31  0x37  0x31  0x2B 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : Data:  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x54  0x32  0x32  0x30  0x4C  0x39  0x47  0x30  0x37  0x32  0x59  0x41  0x45  0x31  0x54  0x54  0x32  0x2B  0x52  0x30  0x32  0x30  0x37  0x31  0x36  0x33  0x45  0x43  0x43  0x35  0x34  0x46  0x48  0x33  0x48  0x31  0x37  0x31  0x2B

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between read: and [0006451C:3020213A] :-) == Data:  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x54  0x32  0x32  0x30  0x4C  0x39  0x47  0x30  0x37  0x32  0x59  0x41  0x45  0x31  0x54  0x54  0x32  0x2B  0x52  0x30  0x32  0x30  0x37  0x31  0x36  0x33  0x45  0x43  0x43  0x35  0x34  0x46  0x48  0x33  0x48  0x31  0x37  0x31  0x2B

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Data:  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x54  0x32  0x32  0x30  0x4C  0x39  0x47  0x30  0x37  0x32  0x59  0x41  0x45  0x31  0x54  0x54  0x32  0x2B  0x52  0x30  0x32  0x30  0x37  0x31  0x36  0x33  0x45  0x43  0x43  0x35  0x34  0x46  0x48  0x33  0x48  0x31  0x37  0x31  0x2B
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.095807s) ++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> LCM_SN_Part1_Check 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Data:  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x54  0x32  0x32  0x30  0x4C  0x39  0x47  0x30  0x37  0x32  0x59  0x41  0x45  0x31  0x54  0x54  0x32  0x2B  0x52  0x30  0x32  0x30  0x37  0x31  0x36  0x33  0x45  0x43  0x43  0x35  0x34  0x46  0x48  0x33  0x48  0x31  0x37  0x31  0x2B
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CALCULATE_LCM_SN:RETURN_VALUE: ===> parameters:
{
EndIndex ==> 57 
BeginIndex ==> 1 
Transform ==> CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
 
SeperateString ==>   0x 
KEY ==> LCM_SN_Part1_Check 
}

[2016-03-31 23:44:48.348]
The LCM SN value from diags: FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+
++++++++++++ [4] CALCULATE_LCM_SN:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001236s) ++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> LCM_SN_Part1 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z 2 --devread 3 0x51 0x1200 0x16 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[i2c -z 2 --devread 3 0x51 0x1200 0x16(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z 2 --devread 3 0x51 0x1200 0x16,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x1200 0x16 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004773s) +++++++++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> read: 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z 2 --devread 3 0x51 0x1200 0x16
Reading 22 bytes from register offset 0x1200 into 0x7A645418, buffer read:	
Data:  0x46  0x36  0x31  0x4B  0x4A  0x43  0x46  0x55  0x5A  0x33  0x31  0x36  0x33  0x36  0x4D  0x31  0x56  0x38  0x47  0x43  0x52  0x37 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:48.348]
PostRXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x1200 0x16
Reading 22 bytes from register offset 0x1200 into 0x7A645418, buffer read:	
Data:  0x46  0x36  0x31  0x4B  0x4A  0x43  0x46  0x55  0x5A  0x33  0x31  0x36  0x33  0x36  0x4D  0x31  0x56  0x38  0x47  0x43  0x52  0x37 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:48.348]
CATCH_VALUE => Catch OK : Data:  0x46  0x36  0x31  0x4B  0x4A  0x43  0x46  0x55  0x5A  0x33  0x31  0x36  0x33  0x36  0x4D  0x31  0x56  0x38  0x47  0x43  0x52  0x37

[2016-03-31 23:44:48.348]
READ_COMMAND => Catch string between read: and [0006451C:3020213A] :-) == Data:  0x46  0x36  0x31  0x4B  0x4A  0x43  0x46  0x55  0x5A  0x33  0x31  0x36  0x33  0x36  0x4D  0x31  0x56  0x38  0x47  0x43  0x52  0x37

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Data:  0x46  0x36  0x31  0x4B  0x4A  0x43  0x46  0x55  0x5A  0x33  0x31  0x36  0x33  0x36  0x4D  0x31  0x56  0x38  0x47  0x43  0x52  0x37
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.051676s) ++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> LCM_SN_Part2_Check 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Data:  0x46  0x36  0x31  0x4B  0x4A  0x43  0x46  0x55  0x5A  0x33  0x31  0x36  0x33  0x36  0x4D  0x31  0x56  0x38  0x47  0x43  0x52  0x37
++++++++++ [8] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CALCULATE_LCM_SN:RETURN_VALUE: ===> parameters:
{
EndIndex ==> 22 
BeginIndex ==> 1 
Transform ==> CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
 
SeperateString ==>   0x 
KEY ==> LCM_SN_Part2_Check 
}

[2016-03-31 23:44:48.348]
The LCM SN value from diags: F61KJCFUZ31636M1V8GCR7

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> F61KJCFUZ31636M1V8GCR7
++++++++++++ [9] CALCULATE_LCM_SN:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000807s) ++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ORB_FLEX_SN 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> F61KJCFUZ31636M1V8GCR7
++++++++++ [10] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : SET_RETURNVALUE_FORMAT:RETURN_VALUE: ===> parameters:
{
FORMAT_SETTING ==> [*LCM_SN_Part1*][*ORB_FLEX_SN*] 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+F61KJCFUZ31636M1V8GCR7
+++++++++ [11] SET_RETURNVALUE_FORMAT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> LCM_SN 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+F61KJCFUZ31636M1V8GCR7
++++++++++ [12] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : UPLOADATTRI:RETURN_VALUE: ===> parameters:
{
ATTRIBUTE ==> Item0=LCM_SN ;  
}

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : SetQT_Attributes(Attribute = FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+F61KJCFUZ31636M1V8GCR7, Key = LCM_SN)

[2016-03-31 23:44:48.348]
UPLOADATTRI => set attribute [FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+F61KJCFUZ31636M1V8GCR7] for key [LCM_SN]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+F61KJCFUZ31636M1V8GCR7
++++++++++++++ [13] UPLOADATTRI:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001193s) ++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Upload LCM SN_spec*] 
 
}

[2016-03-31 23:44:48.348]
JUDGE_SPEC =>  value is [FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+F61KJCFUZ31636M1V8GCR7], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+F61KJCFUZ31636M1V8GCR7
+++++++++++++++ [14] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000560s) +++++++++++++++

[2016-03-31 23:44:48.348]
================== END TEST Upload LCM SN (TestResult : PASS ; Duration : 0.178545s) ==================

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Upload LCM SN,,,FRP6135107HH1NH53+T220L9G072YAE1TT2+R0207163ECC54FH3H171+F61KJCFUZ31636M1V8GCR7,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:Upload LCM SN, {NA}

[2016-03-31 23:44:48.348]
===================================== START TEST GET CG SN (Item7) =====================================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : QUERY_SFIS:RETURN_VALUE: ===> parameters:
{
QuerySNKey ==> LCM_SN 
QueryItems ==> lcm_get_cg ==>  
 
}

[2016-03-31 23:44:48.348]
Query URL : http://10.16.16.126/invoke/KirinBobcat/KirinSFC?c=query_record&sn=FRP6135107HH1NH53%2BT220L9G072YAE1TT2%2BR0207163ECC54FH3H171%2BF61KJCFUZ31636M1V8GCR7&p=lcm_get_cg

[2016-03-31 23:44:48.348]
QUERY_SFIS TrySFCQueryRecord : result[0] all value with keys [{
    "lcm_get_cg" = C7C6145000HGXX71S;
}]

[2016-03-31 23:44:48.348]
QUERY_SFIS: => print query value[C7C6145000HGXX71S] with key[lcm_get_cg]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> lcm_get_cg=C7C6145000HGXX71S;
+++++++++++++++ [1] QUERY_SFIS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.052535s) +++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> lcm_get_cg_LCM_SN 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> C7C6145000HGXX71S
++++++++ [2] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CG SN 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> C7C6145000HGXX71S
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : GET_SN:RETURN_VALUE: ===> parameters:
{
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> C7C6145000HGXX71S
+++++++++++++++++ [4] GET_SN:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001367s) +++++++++++++++++

[2016-03-31 23:44:48.348]
==================== END TEST Get CG SN (TestResult : PASS ; Duration : 0.059514s) ====================

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Get CG SN,,,C7C6145000HGXX71S,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:Get CG SN, {NA}

[2016-03-31 23:44:48.348]
===================================== START TEST CHECK UOP (Item8) =====================================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : AMIOK_CHECK:RETURN_VALUE: ===> parameters:
{
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> PASS
+++++++++++++++ [1] AMIOK_CHECK:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001171s) +++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 1 
IP_NoParametric ==> 0 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> PASS
+++++++++++ [2] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) +++++++++++

[2016-03-31 23:44:48.348]
==================== END TEST Check UOP (TestResult : PASS ; Duration : 0.003779s) ====================

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check UOP,,,PASS,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:Check UOP, {NA}

[2016-03-31 23:44:48.348]
========================= START TEST GET LINK DATA VIA CG SN FROM SFC (Item9) =========================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : QUERY_SFIS:RETURN_VALUE: ===> parameters:
{
QueryItems ==> config ==>  
cg_mesa ==>  
front_nvm_barcode ==>  
sbuild ==>  
clrc ==>  
 
}

[2016-03-31 23:44:48.348]
Query URL : http://10.16.16.126/invoke/KirinBobcat/KirinSFC?c=query_record&sn=C7C6145000HGXX71S&p=config&p=cg_mesa&p=front_nvm_barcode&p=sbuild&p=clrc

[2016-03-31 23:44:48.348]
QUERY_SFIS TrySFCQueryRecord : result[0] all value with keys [{
    "cg_mesa" = F6G61130060H24N3W4;
    clrc = "0x00000001 0x00000000 0x00000000 0x00000000";
    config = "Kirin/EVT-FF/CG/3Q29WC/C07595/";
    "front_nvm_barcode" = F0W610401MXGMJF3W;
    sbuild = "Kirin-EVT-FF_3Q29WC";
}]

[2016-03-31 23:44:48.348]
QUERY_SFIS: => print query value[0x00000001 0x00000000 0x00000000 0x00000000] with key[clrc]

[2016-03-31 23:44:48.348]
QUERY_SFIS: => print query value[Kirin/EVT-FF/CG/3Q29WC/C07595/] with key[config]

[2016-03-31 23:44:48.348]
QUERY_SFIS: => print query value[Kirin-EVT-FF_3Q29WC] with key[sbuild]

[2016-03-31 23:44:48.348]
QUERY_SFIS: => print query value[F6G61130060H24N3W4] with key[cg_mesa]

[2016-03-31 23:44:48.348]
QUERY_SFIS: => print query value[F0W610401MXGMJF3W] with key[front_nvm_barcode]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> clrc=0x00000001 0x00000000 0x00000000 0x00000000;config=Kirin/EVT-FF/CG/3Q29WC/C07595/;sbuild=Kirin-EVT-FF_3Q29WC;cg_mesa=F6G61130060H24N3W4;front_nvm_barcode=F0W610401MXGMJF3W;
+++++++++++++++ [1] QUERY_SFIS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.098261s) +++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : JUDGE_CONFIG_FOR_SUB:RETURN_VALUE: ===> parameters:
{
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Kirin/EVT-FF/CG/3Q29WC/C07595/
++++++++++ [2] JUDGE_CONFIG_FOR_SUB:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Kirin/EVT-FF/CG/3Q29WC/C07595/
+++++++++++ [3] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000005s) +++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ===> parameters:
{
RESULT ==> 1 
}

[2016-03-31 23:44:48.348]
PRE SUB ITEM HAS CHANGED to [1]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> Kirin/EVT-FF/CG/3Q29WC/C07595/
++++++++ [4] CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000523s) ++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 4 
SeperateString ==> / 
KEY ==> config 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> C07595
++++++++++ [5] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> sbuild_unit 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> C07595
++++++++++ [6] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : COMBINE_CONFIG:RETURN_VALUE: ===> parameters:
{
}

[2016-03-31 23:44:48.348]
The CFG# is [*/*/*/*/3Q29WC/C07595]
The UNIT# is [C07595]
The S_BUILD is [Kirin-EVT-FF_3Q29WC]
The BUILD_EVENT is [Kirin-EVT-FF]
The Build_MATRIX_CONFIG is [3Q29WC]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> */*/*/*/3Q29WC/C07595
+++++++++++++ [7] COMBINE_CONFIG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000509s) +++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : UPLOADATTRI:RETURN_VALUE: ===> parameters:
{
ATTRIBUTE ==> Item0=S_BUILD ; Item1=UNIT# ; Item2=BUILD_EVENT ; Item3=BUILD_MATRIX_CONFIG ;  
}

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : SetQT_Attributes(Attribute = D10-EVT-FF_3Q29WC, Key = S_BUILD)

[2016-03-31 23:44:48.348]
UPLOADATTRI => set attribute [D10-EVT-FF_3Q29WC] for key [S_BUILD]

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : SetQT_Attributes(Attribute = C07595, Key = UNIT#)

[2016-03-31 23:44:48.348]
UPLOADATTRI => set attribute [C07595] for key [UNIT#]

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : SetQT_Attributes(Attribute = D10-EVT-FF, Key = BUILD_EVENT)

[2016-03-31 23:44:48.348]
UPLOADATTRI => set attribute [D10-EVT-FF] for key [BUILD_EVENT]

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : SetQT_Attributes(Attribute = 3Q29WC, Key = BUILD_MATRIX_CONFIG)

[2016-03-31 23:44:48.348]
UPLOADATTRI => set attribute [3Q29WC] for key [BUILD_MATRIX_CONFIG]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> */*/*/*/3Q29WC/C07595
+++++++++++++++ [8] UPLOADATTRI:RETURN_VALUE: (TestResult : PASS ; Duration : 0.003750s) +++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> PASS
+++++ [9] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) +++++

[2016-03-31 23:44:48.348]
========= END TEST Get Link Data via CG SN From SFC (TestResult : PASS ; Duration : 0.112938s) =========

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Get Link Data via CG SN From SFC,,,PASS,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:Get Link Data via CG SN From SFC, {NA}

[2016-03-31 23:44:48.348]
================================= START TEST SET COF FUNCTION (Item10) =================================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : QUERY_SFIS:RETURN_VALUE: ===> parameters:
{
WithStationID ==> 1 
QueryItems ==> cof ==>  
 
}

[2016-03-31 23:44:48.348]
Query URL : http://10.16.16.126/invoke/KirinBobcat/KirinSFC?c=query_record&sn=C7C6145000HGXX71S&tsid=PGPD_F02-3FA-02A_3_CG-SENSOR&p=cof

[2016-03-31 23:44:48.348]
QUERY_SFIS TrySFCQueryRecord : result[0] all value with keys [{
    cof = "PGPD_F02-3FA-02A_3_CG-SENSOR;NONE";
}]

[2016-03-31 23:44:48.348]
QUERY_SFIS: => print query value[PGPD_F02-3FA-02A_3_CG-SENSOR;NONE] with key[cof]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> cof=PGPD_F02-3FA-02A_3_CG-SENSOR;NONE;
+++++++++++++++ [1] QUERY_SFIS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.140715s) +++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : GET_SFIS_COF_ITEMS:RETURN_VALUE: ===> parameters:
{
ItemsCompart ==> , 
KEY ==> cof 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> NONE
+++++++++++ [2] GET_SFIS_COF_ITEMS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000023s) +++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> PASS
+++++ [3] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) +++++

[2016-03-31 23:44:48.348]
================= END TEST Set COF Function (TestResult : PASS ; Duration : 0.145174s) =================

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Set COF Function,,,PASS,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:Set COF Function, {NA}

[2016-03-31 23:44:48.348]
===================================== START TEST CG COLOR (Item11) =====================================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MAPPING_TABLE:RETURN_VALUE: ===> parameters:
{
PRE_KEY ==> clrc 
LowercaseMapping ==> 1 
MAPPING_TABLE ==> 0x00000001 0x00000000 0x00000000 0x00000000 ==> White 
0x00000000 0x00000000 0x00000000 0x00000000 ==> Black 
 
POST_KEY ==> judgeColorKey_color 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 
++++++++++++++ [1] MAPPING_TABLE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000019s) ++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> judgeColorKey_color 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> White
++++++++ [2] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : AddCancelCases:RETURN_VALUE: ===> parameters:
{
OUTOFSPEC_CANCEL ==> 1 
COMMON_SPEC ==> P_LimitBlack ==> {Black} 
 
FORCE_CANCEL ==> Item0=ALS CH0 LED5(Black) ; Item1=ALS CH1 LED5(Black) ; Item2=ALS_AR_MIN_MAX30(Black) ;  
ISNOSpec ==> 1 
}

[2016-03-31 23:44:48.348]
JUDGE_SPEC =>  value is [White], spec is [Item0=Black ; ], mode is [2]

[2016-03-31 23:44:48.348]
Cancel item: ALS CH0 LED5(Black)

[2016-03-31 23:44:48.348]
Cancel item: ALS CH1 LED5(Black)

[2016-03-31 23:44:48.348]
Cancel item: ALS_AR_MIN_MAX30(Black)

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> White
+++++++++++++ [3] AddCancelCases:RETURN_VALUE: (TestResult : PASS ; Duration : 0.002422s) +++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> judgeColorKey_color 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> White
++++++++ [4] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> White
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : AddCancelCases:RETURN_VALUE: ===> parameters:
{
OUTOFSPEC_CANCEL ==> 1 
COMMON_SPEC ==> P_LimitBlack ==> {White} 
 
FORCE_CANCEL ==> Item0=ALS CH0 LED5(White) ; Item1=ALS CH1 LED5(White) ; Item2=ALS_AR_MIN_MAX30(White) ;  
ISNOSpec ==> 1 
}

[2016-03-31 23:44:48.348]
JUDGE_SPEC =>  value is [White], spec is [Item0=White ; ], mode is [2]

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> White
+++++++++++++ [6] AddCancelCases:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000585s) +++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> PASS
+++++ [7] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000013s) +++++

[2016-03-31 23:44:48.348]
===================== END TEST CG Color (TestResult : PASS ; Duration : 0.012243s) =====================

[2016-03-31 23:44:48.348]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CG Color,,,White,NA,NA,,)

[2016-03-31 23:44:48.348]
Item Name:CG Color, {NA}

[2016-03-31 23:44:48.348]
============================= START TEST CHECK AND BURN MLB ORBG (Item12) =============================

[2016-03-31 23:44:48.348]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> syscfg print OrbG 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:48.348]
Write to ---> MOBILE , command[syscfg print OrbG(STRING)]

[2016-03-31 23:44:48.348]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:syscfg print OrbG,2,0;return value:0!

[2016-03-31 23:44:48.348]
PostTXToUI ===> 
{
Info ==> syscfg print OrbG 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:48.348 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:48.348]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:48.348]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005577s) +++++++++++++++++++++

[2016-03-31 23:44:48.348]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> syscfg print OrbG 
TARGET ==> MOBILE 
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:syscfg print OrbG
0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> syscfg print OrbG
0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between syscfg print OrbG and [0006451C:3020213A] :-) == 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.261650s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> OrbG 
}

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : COMPARE:RETURN_VALUE: ===> parameters:
{
Comparison1 ==> burning ==> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000 
beforeBurning ==> [*OrbG*] 
 
}

[2016-03-31 23:44:49.349]
COMPARE => Result : 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000
+++++++++++++++++ [4] COMPARE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001265s) +++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 0 
}

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000
+++++++++++ [5] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) +++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ===> parameters:
{
RESULT ==> 1 
}

[2016-03-31 23:44:49.349]
PRE SUB ITEM HAS CHANGED to [1]

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000
++++++++ [6] CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000470s) ++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Check And Burn MLB OrbG_spec*] 
 
}

[2016-03-31 23:44:49.349]
JUDGE_SPEC =>  value is [0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000943s) +++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> PASS
+++++ [8] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) +++++

[2016-03-31 23:44:49.349]
============= END TEST Check And Burn MLB OrbG (TestResult : PASS ; Duration : 0.281742s) =============

[2016-03-31 23:44:49.349]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check And Burn MLB OrbG,,,PASS,NA,NA,,0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xFE0047DB 0x078E2EAC 0xFC40FA23 0x0040FBC4 0x0208095F 0xFBCA02B9 0xFB63FADC 0xF419FA2A 0xFDC5FD5C 0xFB48FD43 0xFAF7FACA 0xF403FA3A 0xFD62FCD2 0xFACFFC3A 0xFAC5F63D 0xF414F4BF 0xFCE0FC50 0xF61EFBF4 0xF5C4F59E 0xF3A5F4F4 0xFC63FBDB 0xF57EFC11 0xF412F577 0xEE02EE11 0xF742F6D2 0xF630F71C 0xF47CF4A7 0xE852EF13 0xF697F5EB 0xF572F689 0xEF4AEF85 0xE835EE42 0xF1A6F159 0xF146F63F 0xEE12F531 0xE7AEE948 0xF0F5F020 0xF597F5B5 0xF02BF095 0xE7EFEA1B 0xF000EF6B 0xF023F1B9 0xEA61EF90 0xE740E9F2 0xEB21F10D 0xEF04EFE3 0xEA70EEB3 0xE853EF0B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x37000000)

[2016-03-31 23:44:49.349]
Item Name:Check And Burn MLB OrbG, {NA}

[2016-03-31 23:44:49.349]
================================ START TEST DIAG VERSION CHECK (Item13) ================================

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> ver 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[ver(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:ver,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> ver 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005735s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> BuildEng 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:ver
D10 Diag (factory_d10_evt)
BuildEng build D10Casaval24C210af (24C210af). Revision 6648dab.
	Built at 2016/03/28 17:43:08
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> ver
D10 Diag (factory_d10_evt)
BuildEng build D10Casaval24C210af (24C210af). Revision 6648dab.
	Built at 2016/03/28 17:43:08
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : build D10Casaval24C210af (24C210af). Revision 6648dab.	Built at 2016/03/28 17:43:08

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between BuildEng and [0006451C:3020213A] :-) == build D10Casaval24C210af (24C210af). Revision 6648dab.	Built at 2016/03/28 17:43:08

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> build D10Casaval24C210af (24C210af). Revision 6648dab.	Built at 2016/03/28 17:43:08
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.027228s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> MOBILE_CATCH 
}

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> build D10Casaval24C210af (24C210af). Revision 6648dab.	Built at 2016/03/28 17:43:08
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> MOBILE_CATCH 
REGEX ==> \((.*?)\)\. 
}

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 24C210af
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000148s) +++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Diag Version Check_spec*] 
 
}

[2016-03-31 23:44:49.349]
JUDGE_SPEC =>  value is [24C210af], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 24C210af
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000574s) +++++++++++++++

[2016-03-31 23:44:49.349]
================ END TEST Diag Version Check (TestResult : PASS ; Duration : 0.040039s) ================

[2016-03-31 23:44:49.349]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Diag Version Check,,,24C210af,NA,NA,,)

[2016-03-31 23:44:49.349]
Item Name:Diag Version Check, {NA}

[2016-03-31 23:44:49.349]
=============================== START TEST I2C ISOLATOR ENABLE (Item14) ===============================

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 1 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 1(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 1,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004649s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 25 --output 1 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 1
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between socgpio --port 1 --pin 25 --output 1 and [0006451C:3020213A] :-) == OK

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021769s) ++++++++++++++

[2016-03-31 23:44:49.349]
=============== END TEST I2C Isolator Enable (TestResult : PASS ; Duration : 0.028592s) ===============

[2016-03-31 23:44:49.349]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(I2C Isolator Enable,,,OK,NA,NA,,)

[2016-03-31 23:44:49.349]
Item Name:I2C Isolator Enable, {NA}

[2016-03-31 23:44:49.349]
=============================== START TEST TURTLE VALUE READING (Item15) ===============================

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel turtle --init 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[sensor --sel turtle --init(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel turtle --init,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> sensor --sel turtle --init 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005768s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel turtle --init 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel turtle --init
Turning off power to 'turtle' sensor...
Already off
Turning on power to 'turtle' sensor...
Resetting 'turtle' sensor...
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> sensor --sel turtle --init
Turning off power to 'turtle' sensor...
Already off
Turning on power to 'turtle' sensor...
Resetting 'turtle' sensor...
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : Turning off power to 'turtle' sensor...Already offTurning on power to 'turtle' sensor...Resetting 'turtle' sensor...OK

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between sensor --sel turtle --init and [0006451C:3020213A] :-) == Turning off power to 'turtle' sensor...Already offTurning on power to 'turtle' sensor...Resetting 'turtle' sensor...OK

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> Turning off power to 'turtle' sensor...Already offTurning on power to 'turtle' sensor...Resetting 'turtle' sensor...OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028349s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel turtle --sample 1 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[sensor --sel turtle --sample 1(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel turtle --sample 1,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> sensor --sel turtle --sample 1 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> Turning off power to 'turtle' sensor...Already offTurning on power to 'turtle' sensor...Resetting 'turtle' sensor...OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004619s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel turtle --sample 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel turtle --sample 1
Capturing 1 samples from:
turtle @ 325.52 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
turtle:	 12s:966542us (+00s:000000us) = 48232
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> sensor --sel turtle --sample 1
Capturing 1 samples from:
turtle @ 325.52 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
turtle:	 12s:966542us (+00s:000000us) = 48232
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 12s:966542us (+00s:000000us) = 48232OK

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between sensor --sel turtle --sample 1 and [0006451C:3020213A] :-) == Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 12s:966542us (+00s:000000us) = 48232OK

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 12s:966542us (+00s:000000us) = 48232OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.036568s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Value 
}

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> Capturing 1 samples from:turtle @ 325.52 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...turtle:	 12s:966542us (+00s:000000us) = 48232OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Turtle_Value 
REGEX ==> turtle:.*?=\s*(.*?)OK 
}

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 48232
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000157s) +++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Turtle Value Reading_spec*] 
 
}

[2016-03-31 23:44:49.349]
JUDGE_SPEC =>  value is [48232], spec is [Item0=37000 ; Item1=65500 ; ], mode is [1]

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 48232
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000514s) +++++++++++++++

[2016-03-31 23:44:49.349]
=============== END TEST Turtle Value Reading (TestResult : PASS ; Duration : 0.083803s) ===============

[2016-03-31 23:44:49.349]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Turtle Value Reading,,,48232,37000,65500,,)

[2016-03-31 23:44:49.349]
Item Name:Turtle Value Reading, [37000,65500]

[2016-03-31 23:44:49.349]
================================ START TEST LOAD X582 FIRMWARE (Item16) ================================

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 0 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 0(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 0,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005730s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 0
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : socgpio --port 1 --pin 25 --output 0
OK

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between  and [0006451C:3020213A] :-) == socgpio --port 1 --pin 25 --output 0
OK

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> socgpio --port 1 --pin 25 --output 0
OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.019935s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --sel mesa --off 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[touch --sel mesa --off(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --sel mesa --off,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> touch --sel mesa --off 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> socgpio --port 1 --pin 25 --output 0
OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004613s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --sel mesa --off
Setting active Touch controller to "mesa"
Touch is already off.
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> touch --sel mesa --off
Setting active Touch controller to "mesa"
Touch is already off.
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : touch --sel mesa --off
Setting active Touch controller to "mesa"
Touch is already off.
OK

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between  and [0006451C:3020213A] :-) == touch --sel mesa --off
Setting active Touch controller to "mesa"
Touch is already off.
OK

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> touch --sel mesa --off
Setting active Touch controller to "mesa"
Touch is already off.
OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022215s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> wait 10 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[wait 10(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:wait 10,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> wait 10 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> touch --sel mesa --off
Setting active Touch controller to "mesa"
Touch is already off.
OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004258s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> wait 10 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:wait 10
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> wait 10
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : 

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between wait 10 and [0006451C:3020213A] :-) == 

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.025466s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --on 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[touch --on(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --on,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> touch --on 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> 
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004186s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --on 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --on
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> touch --on
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between touch --on and [0006451C:3020213A] :-) == OK

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.027864s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 1 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 1(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 1,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004997s) +++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 1
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:49.349]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 1
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:49.349]
CATCH_VALUE => Catch OK : socgpio --port 1 --pin 25 --output 1
OK

[2016-03-31 23:44:49.349]
READ_COMMAND => Catch string between  and [0006451C:3020213A] :-) == socgpio --port 1 --pin 25 --output 1
OK

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> socgpio --port 1 --pin 25 --output 1
OK
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021585s) ++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch -p 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:49.349]
Write to ---> MOBILE , command[touch -p(STRING)]

[2016-03-31 23:44:49.349]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch -p,2,0;return value:0!

[2016-03-31 23:44:49.349]
PostTXToUI ===> 
{
Info ==> touch -p 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:49.349 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:49.349]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:49.349]
RETURN_VALUE ===> socgpio --port 1 --pin 25 --output 1
OK
++++++++++++++++++++ [11] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004179s) ++++++++++++++++++++

[2016-03-31 23:44:49.349]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch -p 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch -p
type: mesa
powered: yes
serial-number: 
[0;31mERROR: Time out[0m
firmware-loaded: no
is-provisioned: 
[0;31mERROR: No Response[0m
sensor-status: 
[0;31mERROR: No Response[0m
provisioning: 
[0;31mERROR: No Response[0m
gpio1: 
[0;31mERROR: No Response[0m
indicator: 
[0;31mERROR: No Response[0m
addtData: 
[0;31mERROR: No Response[0m
module-sn: ?
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> touch -p
type: mesa
powered: yes
serial-number: 
[0;31mERROR: Time out[0m
firmware-loaded: no
is-provisioned: 
[0;31mERROR: No Response[0m
sensor-status: 
[0;31mERROR: No Response[0m
provisioning: 
[0;31mERROR: No Response[0m
gpio1: 
[0;31mERROR: No Response[0m
indicator: 
[0;31mERROR: No Response[0m
addtData: 
[0;31mERROR: No Response[0m
module-sn: ?
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch fail key:ERROR!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch -p] fail:Catch fail key:ERROR!
++++++++++++++ [12] READ_COMMAND:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.568346s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch -p] fail:Catch fail key:ERROR!
+++++++++++ [13] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) +++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --load_firmware 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[touch --load_firmware(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --load_firmware,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> touch --load_firmware 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch -p] fail:Catch fail key:ERROR!
++++++++++++++++++++ [14] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004490s) ++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --load_firmware 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --load_firmware
[0;31mERROR: No Response: Error getting mesa status[0m
[0;31mERROR: No Response: Error locating mesa firmware file[0m
[0;31mERROR: No Response: Could not load Touch firmware[0m
ERROR
touch returned No Response error
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> touch --load_firmware
[0;31mERROR: No Response: Error getting mesa status[0m
[0;31mERROR: No Response: Error locating mesa firmware file[0m
[0;31mERROR: No Response: Could not load Touch firmware[0m
ERROR
touch returned No Response error
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch fail key:ERROR!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch --load_firmware] fail:Catch fail key:ERROR!
++++++++++++++ [15] READ_COMMAND:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.039130s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> firmware_OK 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch --load_firmware] fail:Catch fail key:ERROR!
++++++++++ [16] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> firmware_OK 
REGEX ==> (OK|Firmware is already loaded) 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((OK|Firmware is already loaded)) in MemoryKey[firmware_OK]
++++++++++++++ [17] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000154s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_PASS ==> OK 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((OK|Firmware is already loaded)) in MemoryKey[firmware_OK]
++++ [18] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Load X582 Firmware_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [Invalide RegularExpress ((OK|Firmware is already loaded)) in MemoryKey[firmware_OK]], spec is [Item0=OK ; ], mode is [5]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((OK|Firmware is already loaded)) in MemoryKey[firmware_OK]
+++++++++++++++ [19] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000575s) +++++++++++++++

[2016-03-31 23:44:50.350]
================ END TEST Load X582 Firmware (TestResult : FAIL ; Duration : 0.779569s) ================

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Load X582 Firmware,,,Invalide RegularExpress ((OK|Firmware is already loaded)) in MemoryKey[firmware_OK],OK,OK,,Load X582 Firmware_FAIL)

[2016-03-31 23:44:50.350]
Item Name:Load X582 Firmware, <OK>

[2016-03-31 23:44:50.350]
============================= START TEST X582 MODULE SN FROM DIAG (Item17) =============================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch -p module-sn 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[touch -p module-sn(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch -p module-sn,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> touch -p module-sn 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005947s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch -p module-sn 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch -p module-sn
module-sn: ?
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> touch -p module-sn
module-sn: ?
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : module-sn: ?OK

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between touch -p module-sn and [0006451C:3020213A] :-) == module-sn: ?OK

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> module-sn: ?OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.009517s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> MOBILE_CATCH 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> module-sn: ?OK
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
BEGIN ==> module-sn:  
KEY ==> MOBILE_CATCH 
END ==> OK 
}

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : ?

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> ?
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000474s) +++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> NvSn_UNIT 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> ?
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*X582 Module SN From diag_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [?], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> ?
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000495s) +++++++++++++++

[2016-03-31 23:44:50.350]
============= END TEST X582 Module SN From diag (TestResult : PASS ; Duration : 0.022905s) =============

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(X582 Module SN From diag,,,?,NA,NA,,)

[2016-03-31 23:44:50.350]
Item Name:X582 Module SN From diag, {NA}

[2016-03-31 23:44:50.350]
========================= START TEST COMPARE X582 MODULE SN WITH SFC (Item18) =========================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : COMPARE:RETURN_VALUE: ===> parameters:
{
Comparison1 ==> SFC ==> [*cg_mesa*] 
UNIT ==> [*NvSn_UNIT*] 
 
}

[2016-03-31 23:44:50.350]
COMPARE => Result : SFC:F6G61130060H24N3W4 <> UNIT:?

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> SFC:F6G61130060H24N3W4 <> UNIT:?
+++++++++++++++++ [1] COMPARE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.001034s) +++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> SFC:F6G61130060H24N3W4 <> UNIT:?
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Compare X582 Module SN with SFC_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [SFC:F6G61130060H24N3W4 <> UNIT:?], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> SFC:F6G61130060H24N3W4 <> UNIT:?
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000565s) +++++++++++++++

[2016-03-31 23:44:50.350]
========= END TEST Compare X582 Module SN with SFC (TestResult : FAIL ; Duration : 0.005694s) =========

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Compare X582 Module SN with SFC,,,SFC:F6G61130060H24N3W4 <> UNIT:?,NA,NA,,SFC:F6G61130060H24N3W4 <> UNIT:?)

[2016-03-31 23:44:50.350]
Item Name:Compare X582 Module SN with SFC, {NA}

[2016-03-31 23:44:50.350]
========================= START TEST AOP GPIO MESA_TO_AOP_FDINT_INIT (Item19) =========================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 37 --input 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[socgpio --port 1 --pin 37 --input(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 37 --input,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 37 --input 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005656s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 37 --input 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> OK 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 37 --input
SoC GPIO[1,37] = 0
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 37 --input
SoC GPIO[1,37] = 0
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : SoC GPIO[1,37] = 0

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between socgpio --port 1 --pin 37 --input and OK == SoC GPIO[1,37] = 0

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> SoC GPIO[1,37] = 0
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021607s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> SoC GPIO[1,37] = 0
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004702s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80
Channel 3
Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 
Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80
Channel 3
Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 
Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 and [0006451C:3020213A] :-) == Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.039837s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 37 --get 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[socgpio --port 1 --pin 37 --get(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 37 --get,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 37 --get 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0x00 0x00 0x7F 0x80 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004560s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> SoC GPIO[1,37] =  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> OK 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 37 --get
SoC GPIO[1,37] = 0
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 37 --get
SoC GPIO[1,37] = 0
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : 0

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between SoC GPIO[1,37] =  and OK == 0

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021413s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FDINT_INIT 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*AOP GPIO MESA_TO_AOP_FDINT_Init_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; ], mode is [5]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000499s) +++++++++++++++

[2016-03-31 23:44:50.350]
========= END TEST AOP GPIO MESA_TO_AOP_FDINT_Init (TestResult : PASS ; Duration : 0.107304s) =========

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(AOP GPIO MESA_TO_AOP_FDINT_Init,,,0,0,0,,)

[2016-03-31 23:44:50.350]
Item Name:AOP GPIO MESA_TO_AOP_FDINT_Init, <0>

[2016-03-31 23:44:50.350]
========================= START TEST AOP GPIO MESA_TO_AOP_FDINT_HIGH (Item20) =========================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x01 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x01(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x01,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x01 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004839s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x01 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x01
Channel 3
Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x01 
Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x01
Channel 3
Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x01 
Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x01 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x01 and [0006451C:3020213A] :-) == Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x01 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x01 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.040729s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 37 --get 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[socgpio --port 1 --pin 37 --get(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 37 --get,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 37 --get 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x01 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004485s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> SoC GPIO[1,37] =  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> OK 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 37 --get
SoC GPIO[1,37] = 0
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 37 --get
SoC GPIO[1,37] = 0
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : 0

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between SoC GPIO[1,37] =  and OK == 0

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022228s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FDINT_HIGH 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*AOP GPIO MESA_TO_AOP_FDINT_High_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [0], spec is [Item0=1 ; ], mode is [5]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000501s) +++++++++++++++

[2016-03-31 23:44:50.350]
========= END TEST AOP GPIO MESA_TO_AOP_FDINT_High (TestResult : FAIL ; Duration : 0.079323s) =========

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(AOP GPIO MESA_TO_AOP_FDINT_High,,,0,1,1,,AOP GPIO MESA_TO_AOP_FDINT_High_FAIL)

[2016-03-31 23:44:50.350]
Item Name:AOP GPIO MESA_TO_AOP_FDINT_High, <1>

[2016-03-31 23:44:50.350]
========================== START TEST AOP GPIO MESA_TO_AOP_FDINT_LOW (Item21) ==========================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x00 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x00(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x00,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x00 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005971s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x00 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x00
Channel 3
Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x00 
Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x00
Channel 3
Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x00 
Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x00 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between spi -s --transfer 3 14 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xd7 0x01 0xfe 0x00 and [0006451C:3020213A] :-) == Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x00 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x00 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.037958s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 37 --get 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[socgpio --port 1 --pin 37 --get(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 37 --get,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 37 --get 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Channel 3Sent: 0x80 0xC0 0x00 0x0E 0x00 0x00 0x00 0x7D 0x04 0x00 0xD7 0x01 0xFE 0x00 Received: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004505s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> SoC GPIO[1,37] =  
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> OK 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 37 --get
SoC GPIO[1,37] = 0
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 37 --get
SoC GPIO[1,37] = 0
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : 0

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between SoC GPIO[1,37] =  and OK == 0

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021677s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FDINT_LOW 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FDINT_LOW 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
++++++++ [6] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*AOP GPIO MESA_TO_AOP_FDINT_Low_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; ], mode is [5]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000497s) +++++++++++++++

[2016-03-31 23:44:50.350]
========== END TEST AOP GPIO MESA_TO_AOP_FDINT_Low (TestResult : PASS ; Duration : 0.078267s) ==========

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(AOP GPIO MESA_TO_AOP_FDINT_Low,,,0,0,0,,)

[2016-03-31 23:44:50.350]
Item Name:AOP GPIO MESA_TO_AOP_FDINT_Low, <0>

[2016-03-31 23:44:50.350]
============================ START TEST MESA I2C READ THROUGH AOP (Item22) ============================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -d 4 0x61 0x00 0x01 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[i2c -d 4 0x61 0x00 0x01(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -d 4 0x61 0x00 0x01,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> i2c -d 4 0x61 0x00 0x01 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005594s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -d 4 0x61 0x00 0x01 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -d 4 0x61 0x00 0x01
Reading 1 bytes from register offset 0x00 into 0x7A1FAB98, buffer read:	
Data:  0x49 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> i2c -d 4 0x61 0x00 0x01
Reading 1 bytes from register offset 0x00 into 0x7A1FAB98, buffer read:	
Data:  0x49 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x00 into 0x7A1FAB98, buffer read:	Data:  0x49

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between i2c -d 4 0x61 0x00 0x01 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x00 into 0x7A1FAB98, buffer read:	Data:  0x49

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x00 into 0x7A1FAB98, buffer read:	Data:  0x49
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028234s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Mesa_AOP 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x00 into 0x7A1FAB98, buffer read:	Data:  0x49
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Mesa_AOP 
REGEX ==> Data:\s*(.*?)$ 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0x49
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000151s) +++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> UI_SHOWNVALUE 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0x49
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Mesa i2c read through AOP_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [0x49], spec is [Item0=0x49 ; ], mode is [5]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 0x49
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000603s) +++++++++++++++

[2016-03-31 23:44:50.350]
============ END TEST Mesa i2c read through AOP (TestResult : PASS ; Duration : 0.041991s) ============

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Mesa i2c read through AOP,,,0x49,0x49,0x49,,)

[2016-03-31 23:44:50.350]
Item Name:Mesa i2c read through AOP, <0x49>

[2016-03-31 23:44:50.350]
============================== START TEST AOP_TO_MESA_MENU_CONN (Item23) ==============================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 39 --output 0  
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[socgpio --port 1 --pin 39 --output 0 (STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 39 --output 0 ,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 39 --output 0  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004649s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 39 --output 0  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 39 --output 0 
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 39 --output 0 
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between socgpio --port 1 --pin 39 --output 0  and [0006451C:3020213A] :-) == OK

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022020s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test menu_button_state --run 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[touch --test menu_button_state --run(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test menu_button_state --run,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> touch --test menu_button_state --run 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004582s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test menu_button_state --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test menu_button_state --run

FAIL
touch returned Unsupported error
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> touch --test menu_button_state --run

FAIL
touch returned Unsupported error
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch fail key:ERROR!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch --test menu_button_state --run] fail:Catch fail key:ERROR!
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.020928s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Mesa_state 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch --test menu_button_state --run] fail:Catch fail key:ERROR!
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Mesa_state 
REGEX ==> (ON|OFF) 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000132s) +++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <ON> 
 
ISNOSpec ==> 1 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]], spec is [Item0=ON ; ], mode is [5]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000511s) +++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 39 --output 1 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[socgpio --port 1 --pin 39 --output 1(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 39 --output 1,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 39 --output 1 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]
+++++++++++++++++++++ [8] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004423s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 39 --output 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 39 --output 1
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 39 --output 1
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between socgpio --port 1 --pin 39 --output 1 and [0006451C:3020213A] :-) == OK

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> OK
++++++++++++++ [9] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.024411s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test menu_button_state --run 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[touch --test menu_button_state --run(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test menu_button_state --run,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> touch --test menu_button_state --run 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> OK
++++++++++++++++++++ [10] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004848s) ++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test menu_button_state --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test menu_button_state --run

FAIL
touch returned Unsupported error
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> touch --test menu_button_state --run

FAIL
touch returned Unsupported error
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch fail key:ERROR!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch --test menu_button_state --run] fail:Catch fail key:ERROR!
++++++++++++++ [11] READ_COMMAND:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.021124s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Mesa_state 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch --test menu_button_state --run] fail:Catch fail key:ERROR!
++++++++++ [12] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Mesa_state 
REGEX ==> (ON|OFF) 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]
++++++++++++++ [13] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000130s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <OFF> 
 
ISNOSpec ==> 1 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]], spec is [Item0=OFF ; ], mode is [5]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]
+++++++++++++++ [14] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000502s) +++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 39 --output 0 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[socgpio --port 1 --pin 39 --output 0(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 39 --output 0,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 39 --output 0 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]
++++++++++++++++++++ [15] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004204s) ++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 39 --output 0 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 39 --output 0
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 39 --output 0
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between socgpio --port 1 --pin 39 --output 0 and [0006451C:3020213A] :-) == OK

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> OK
++++++++++++++ [16] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022080s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test menu_button_state --run 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[touch --test menu_button_state --run(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test menu_button_state --run,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> touch --test menu_button_state --run 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> OK
++++++++++++++++++++ [17] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006048s) ++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test menu_button_state --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test menu_button_state --run

FAIL
touch returned Unsupported error
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> touch --test menu_button_state --run

FAIL
touch returned Unsupported error
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch fail key:ERROR!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch --test menu_button_state --run] fail:Catch fail key:ERROR!
++++++++++++++ [18] READ_COMMAND:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.019296s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Mesa_state 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> RX [touch --test menu_button_state --run] fail:Catch fail key:ERROR!
++++++++++ [19] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Mesa_state 
REGEX ==> (ON|OFF) 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]
++++++++++++++ [20] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000130s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> <ON> 
 
ISNOSpec ==> 1 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]], spec is [Item0=ON ; ], mode is [5]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state]
+++++++++++++++ [21] JUDGE_SPEC:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000504s) +++++++++++++++

[2016-03-31 23:44:50.350]
============== END TEST AOP_TO_MESA_MENU_CONN (TestResult : FAIL ; Duration : 0.183089s) ==============

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(AOP_TO_MESA_MENU_CONN,,,Invalide RegularExpress ((ON|OFF)) in MemoryKey[Mesa_state],NA,NA,,AOP_TO_MESA_MENU_CONN_FAIL)

[2016-03-31 23:44:50.350]
Item Name:AOP_TO_MESA_MENU_CONN, {NA}

[2016-03-31 23:44:50.350]
============================= START TEST WRITE GMT DATE AND TIME (Item24) =============================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SAVE_NOWTIME:RETURN_VALUE: ===> parameters:
{
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
++++++++++++++ [1] SAVE_NOWTIME:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000199s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> rtc --set [*NowTime*] 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[rtc --set 20160331234450(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:rtc --set 20160331234450,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> rtc --set 20160331234450 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [2] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004575s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> rtc --set [*NowTime*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:rtc --set 20160331234450
20160331234450
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> rtc --set 20160331234450
20160331234450
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : 20160331234450

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between rtc --set [*NowTime*] and [0006451C:3020213A] :-) == 20160331234450

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 20160331234450
++++++++++++++ [3] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021707s) ++++++++++++++

[2016-03-31 23:44:50.350]
============= END TEST Write GMT Date and Time (TestResult : PASS ; Duration : 0.029817s) =============

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Write GMT Date and Time,,,20160331234450,NA,NA,,)

[2016-03-31 23:44:50.350]
Item Name:Write GMT Date and Time, {NA}

[2016-03-31 23:44:50.350]
================================== START TEST PROX_CG_DEV_ID (Item25) ==================================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel prox --init 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[sensor --sel prox --init(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel prox --init,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> sensor --sel prox --init 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005847s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel prox --init 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel prox --init
Turning off power to 'prox' sensor...
Turning on power to 'prox' sensor...
Resetting 'prox' sensor...
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> sensor --sel prox --init
Turning off power to 'prox' sensor...
Turning on power to 'prox' sensor...
Resetting 'prox' sensor...
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : Turning off power to 'prox' sensor...Turning on power to 'prox' sensor...Resetting 'prox' sensor...OK

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between sensor --sel prox --init and [0006451C:3020213A] :-) == Turning off power to 'prox' sensor...Turning on power to 'prox' sensor...Resetting 'prox' sensor...OK

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Turning off power to 'prox' sensor...Turning on power to 'prox' sensor...Resetting 'prox' sensor...OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.040919s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensorreg --sel prox --read 0x00 2 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[sensorreg --sel prox --read 0x00 2(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensorreg --sel prox --read 0x00 2,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> sensorreg --sel prox --read 0x00 2 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Turning off power to 'prox' sensor...Turning on power to 'prox' sensor...Resetting 'prox' sensor...OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004854s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensorreg --sel prox --read 0x00 2 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensorreg --sel prox --read 0x00 2
Reading in 2 registers from 0x0:
0x00 = 0xD0
0x01 = 0x12
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> sensorreg --sel prox --read 0x00 2
Reading in 2 registers from 0x0:
0x00 = 0xD0
0x01 = 0x12
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:50.350]
CATCH_VALUE => Catch OK : Reading in 2 registers from 0x0:0x00 = 0xD00x01 = 0x12OK

[2016-03-31 23:44:50.350]
READ_COMMAND => Catch string between sensorreg --sel prox --read 0x00 2 and [0006451C:3020213A] :-) == Reading in 2 registers from 0x0:0x00 = 0xD00x01 = 0x12OK

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Reading in 2 registers from 0x0:0x00 = 0xD00x01 = 0x12OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022057s) ++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> DOPPLER_KEY 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> Reading in 2 registers from 0x0:0x00 = 0xD00x01 = 0x12OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> DOPPLER_KEY 
REGEX ==> 0x00 =\s*0x(.*?)0x01 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> D0
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000138s) +++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 208
+++++++++ [7] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_DEV_ID_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [208], spec is [Item0=208 ; Item1=208 ; ], mode is [1]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 208
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000526s) +++++++++++++++

[2016-03-31 23:44:50.350]
================== END TEST PROX_CG_DEV_ID (TestResult : PASS ; Duration : 0.083396s) ==================

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_DEV_ID,,,208,208,208,,)

[2016-03-31 23:44:50.350]
Item Name:PROX_CG_DEV_ID, [208,208]

[2016-03-31 23:44:50.350]
================================== START TEST PROX_CG_REV_ID (Item26) ==================================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> DOPPLER_KEY 
REGEX ==> 0x01 = \s*0x(.*?)OK 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 12
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000230s) +++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : NumberSystemConvertion:RETURN_VALUE: ===> parameters:
{
CHANGE ==> 16 
TO ==> 10 
FROM ==> 0 
}

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 18
+++++++++ [2] NumberSystemConvertion:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000029s) +++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_REV_ID_spec*] 
 
}

[2016-03-31 23:44:50.350]
JUDGE_SPEC =>  value is [18], spec is [Item0=18 ; Item1=18 ; ], mode is [1]

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 18
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000700s) +++++++++++++++

[2016-03-31 23:44:50.350]
================== END TEST PROX_CG_REV_ID (TestResult : PASS ; Duration : 0.005264s) ==================

[2016-03-31 23:44:50.350]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_REV_ID,,,18,18,18,,)

[2016-03-31 23:44:50.350]
Item Name:PROX_CG_REV_ID, [18,18]

[2016-03-31 23:44:50.350]
========================== START TEST PROX_CG_NO_TARGET_RAW_DIST_AVE (Item27) ==========================

[2016-03-31 23:44:50.350]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel prox --set datatype norm 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:50.350]
Write to ---> MOBILE , command[sensor --sel prox --set datatype norm(STRING)]

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel prox --set datatype norm,2,0;return value:0!

[2016-03-31 23:44:50.350]
PostTXToUI ===> 
{
Info ==> sensor --sel prox --set datatype norm 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:50.350]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005534s) +++++++++++++++++++++

[2016-03-31 23:44:50.350]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel prox --set datatype norm 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:50.350]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel prox --set datatype norm
Setting parameter 'datatype' to norm for 'prox'
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:50.350]
PostRXToUI ===> 
{
Info ==> sensor --sel prox --set datatype norm
Setting parameter 'datatype' to norm for 'prox'
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:50.350 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:50.350]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:51.351]
CATCH_VALUE => Catch OK : Setting parameter 'datatype' to norm for 'prox'OK

[2016-03-31 23:44:51.351]
READ_COMMAND => Catch string between sensor --sel prox --set datatype norm and [0006451C:3020213A] :-) == Setting parameter 'datatype' to norm for 'prox'OK

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> Setting parameter 'datatype' to norm for 'prox'OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021087s) ++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel prox --sample 32 --stats 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:51.351]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:51.351]
Write to ---> MOBILE , command[sensor --sel prox --sample 32 --stats(STRING)]

[2016-03-31 23:44:51.351]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel prox --sample 32 --stats,2,0;return value:0!

[2016-03-31 23:44:51.351]
PostTXToUI ===> 
{
Info ==> sensor --sel prox --sample 32 --stats 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:51.351 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:51.351]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> Setting parameter 'datatype' to norm for 'prox'OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004365s) +++++++++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel prox --sample 32 --stats 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:51.351]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel prox --sample 32 --stats
Capturing 32 samples from:
prox @ 60.00 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
prox:		 14s:683594us (+00s:000000us) = 29.480157, 58.882400, 0.983179, 5028.521637, 83.962926, 9968.685353
prox:		 14s:695322us (+00s:011728us) = 27.765258, 59.185019, 0.999037, 5054.365065, 85.317167, 9968.685353
prox:		 14s:707045us (+00s:011723us) = 27.478019, 59.370026, 0.888032, 5070.164540, 75.837482, 9968.685353
prox:		 14s:718765us (+00s:011720us) = 28.256138, 59.553711, 0.634309, 5085.851163, 54.169630, 9968.685353
prox:		 14s:730483us (+00s:011718us) = 25.779174, 59.726825, 0.602593, 5100.634958, 51.461148, 9968.685353
prox:		 14s:742198us (+00s:011715us) = 26.761658, 59.200877, 0.983179, 5055.719306, 83.962926, 9968.685353
prox:		 14s:753914us (+00s:011716us) = 24.728279, 59.862937, 1.062468, 5112.258857, 90.734130, 9968.685353
prox:		 14s:765626us (+00s:011712us) = 26.690499, 59.823292, 0.745313, 5108.873255, 63.649315, 9968.685353
prox:		 14s:777342us (+00s:011716us) = 28.168491, 59.903903, 0.713597, 5115.757313, 60.940834, 9968.685353
prox:		 14s:789054us (+00s:011712us) = 26.627584, 59.615821, 0.903890, 5091.155272, 77.191723, 9968.685353
prox:		 14s:800768us (+00s:011714us) = 23.425146, 59.639607, 0.777028, 5093.186633, 66.357797, 9968.685353
prox:		 14s:812481us (+00s:011713us) = 27.305618, 59.631678, 0.967321, 5092.509513, 82.608686, 9968.685353
prox:		 14s:824192us (+00s:011711us) = 24.779045, 60.028122, 0.888032, 5126.365532, 75.837482, 9968.685353
prox:		 14s:835904us (+00s:011712us) = 28.507942, 59.290737, 1.062468, 5063.393337, 90.734130, 9968.685353
prox:		 14s:847615us (+00s:011711us) = 25.699337, 59.709645, 0.872175, 5099.167863, 74.483241, 9968.685353
prox:		 14s:859325us (+00s:011710us) = 27.322684, 59.597320, 0.856317, 5089.575325, 73.129000, 9968.685353
prox:		 14s:871035us (+00s:011710us) = 27.873732, 60.317525, 0.999037, 5151.080426, 85.317167, 9968.685353
prox:		 14s:882747us (+00s:011712us) = 24.345728, 59.925046, 0.729455, 5117.562967, 62.295074, 9968.685353
prox:		 14s:894453us (+00s:011706us) = 27.837429, 59.652822, 1.221045, 5094.315167, 104.276538, 9968.685353
prox:		 14s:906161us (+00s:011708us) = 28.401927, 59.747968, 1.110041, 5102.440612, 94.796852, 9968.685353
prox:		 14s:917865us (+00s:011704us) = 27.405703, 60.188020, 0.856317, 5140.020793, 73.129000, 9968.685353
prox:		 14s:929571us (+00s:011706us) = 27.036747, 60.016228, 0.856317, 5125.349851, 73.129000, 9968.685353
prox:		 14s:941276us (+00s:011705us) = 25.235358, 59.946190, 0.840459, 5119.368621, 71.774760, 9968.685353
prox:		 14s:952982us (+00s:011706us) = 26.590124, 59.334346, 1.046610, 5067.117499, 89.379889, 9968.685353
prox:		 14s:964688us (+00s:011706us) = 26.488159, 60.069087, 0.903890, 5129.863987, 77.191723, 9968.685353
prox:		 14s:976395us (+00s:011707us) = 25.601710, 59.849722, 0.999037, 5111.130323, 85.317167, 9968.685353
prox:		 14s:988100us (+00s:011705us) = 23.652941, 60.099481, 0.824602, 5132.459615, 70.420519, 9968.685353
prox:		 14s:999806us (+00s:011706us) = 23.987764, 59.972619, 0.808744, 5121.625689, 69.066278, 9968.685353
prox:		 15s:011510us (+00s:011704us) = 25.239119, 59.870866, 1.062468, 5112.935978, 90.734130, 9968.685353
prox:		 15s:023217us (+00s:011707us) = 27.026912, 60.292417, 1.141756, 5148.936211, 97.505334, 9968.685353
prox:		 15s:034919us (+00s:011702us) = 25.988601, 60.400778, 0.824602, 5158.190190, 70.420519, 9968.685353
prox:		 15s:046625us (+00s:011706us) = 28.931135, 60.136483, 1.062468, 5135.619510, 90.734130, 9968.685353


Stats:

prox:
	# of samples captured: 32
	# of bad samples (corrupted/lost): 0
	calculated odr: 85.396367Hz
	average: rawrange = 26.575566
	average: signalrateperspad = 59.776297, ambientrateperspad = 0.913306
	average: totalsignalrate = 5104.859907, totalambientrate = 77.995803
	average: integrationtime = 9968.685353
	std-dev: rawrange = 1.553545
	std-dev: signalrateperspad = 0.350684, ambientrateperspad = 0.144354
	std-dev: totalsignalrate = 29.948213, totalambientrate = 12.327772
	std-dev: integrationtime = 0.000000
	rms: rawrange = 26.620936
	rms: signalrateperspad = 59.777326, ambientrateperspad = 0.924643
	rms: totalsignalrate = 5104.947753, totalambientrate = 78.964038
	rms: integrationtime = 9968.685353
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:51.351]
PostRXToUI ===> 
{
Info ==> sensor --sel prox --sample 32 --stats
Capturing 32 samples from:
prox @ 60.00 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
prox:		 14s:683594us (+00s:000000us) = 29.480157, 58.882400, 0.983179, 5028.521637, 83.962926, 9968.685353
prox:		 14s:695322us (+00s:011728us) = 27.765258, 59.185019, 0.999037, 5054.365065, 85.317167, 9968.685353
prox:		 14s:707045us (+00s:011723us) = 27.478019, 59.370026, 0.888032, 5070.164540, 75.837482, 9968.685353
prox:		 14s:718765us (+00s:011720us) = 28.256138, 59.553711, 0.634309, 5085.851163, 54.169630, 9968.685353
prox:		 14s:730483us (+00s:011718us) = 25.779174, 59.726825, 0.602593, 5100.634958, 51.461148, 9968.685353
prox:		 14s:742198us (+00s:011715us) = 26.761658, 59.200877, 0.983179, 5055.719306, 83.962926, 9968.685353
prox:		 14s:753914us (+00s:011716us) = 24.728279, 59.862937, 1.062468, 5112.258857, 90.734130, 9968.685353
prox:		 14s:765626us (+00s:011712us) = 26.690499, 59.823292, 0.745313, 5108.873255, 63.649315, 9968.685353
prox:		 14s:777342us (+00s:011716us) = 28.168491, 59.903903, 0.713597, 5115.757313, 60.940834, 9968.685353
prox:		 14s:789054us (+00s:011712us) = 26.627584, 59.615821, 0.903890, 5091.155272, 77.191723, 9968.685353
prox:		 14s:800768us (+00s:011714us) = 23.425146, 59.639607, 0.777028, 5093.186633, 66.357797, 9968.685353
prox:		 14s:812481us (+00s:011713us) = 27.305618, 59.631678, 0.967321, 5092.509513, 82.608686, 9968.685353
prox:		 14s:824192us (+00s:011711us) = 24.779045, 60.028122, 0.888032, 5126.365532, 75.837482, 9968.685353
prox:		 14s:835904us (+00s:011712us) = 28.507942, 59.290737, 1.062468, 5063.393337, 90.734130, 9968.685353
prox:		 14s:847615us (+00s:011711us) = 25.699337, 59.709645, 0.872175, 5099.167863, 74.483241, 9968.685353
prox:		 14s:859325us (+00s:011710us) = 27.322684, 59.597320, 0.856317, 5089.575325, 73.129000, 9968.685353
prox:		 14s:871035us (+00s:011710us) = 27.873732, 60.317525, 0.999037, 5151.080426, 85.317167, 9968.685353
prox:		 14s:882747us (+00s:011712us) = 24.345728, 59.925046, 0.729455, 5117.562967, 62.295074, 9968.685353
prox:		 14s:894453us (+00s:011706us) = 27.837429, 59.652822, 1.221045, 5094.315167, 104.276538, 9968.685353
prox:		 14s:906161us (+00s:011708us) = 28.401927, 59.747968, 1.110041, 5102.440612, 94.796852, 9968.685353
prox:		 14s:917865us (+00s:011704us) = 27.405703, 60.188020, 0.856317, 5140.020793, 73.129000, 9968.685353
prox:		 14s:929571us (+00s:011706us) = 27.036747, 60.016228, 0.856317, 5125.349851, 73.129000, 9968.685353
prox:		 14s:941276us (+00s:011705us) = 25.235358, 59.946190, 0.840459, 5119.368621, 71.774760, 9968.685353
prox:		 14s:952982us (+00s:011706us) = 26.590124, 59.334346, 1.046610, 5067.117499, 89.379889, 9968.685353
prox:		 14s:964688us (+00s:011706us) = 26.488159, 60.069087, 0.903890, 5129.863987, 77.191723, 9968.685353
prox:		 14s:976395us (+00s:011707us) = 25.601710, 59.849722, 0.999037, 5111.130323, 85.317167, 9968.685353
prox:		 14s:988100us (+00s:011705us) = 23.652941, 60.099481, 0.824602, 5132.459615, 70.420519, 9968.685353
prox:		 14s:999806us (+00s:011706us) = 23.987764, 59.972619, 0.808744, 5121.625689, 69.066278, 9968.685353
prox:		 15s:011510us (+00s:011704us) = 25.239119, 59.870866, 1.062468, 5112.935978, 90.734130, 9968.685353
prox:		 15s:023217us (+00s:011707us) = 27.026912, 60.292417, 1.141756, 5148.936211, 97.505334, 9968.685353
prox:		 15s:034919us (+00s:011702us) = 25.988601, 60.400778, 0.824602, 5158.190190, 70.420519, 9968.685353
prox:		 15s:046625us (+00s:011706us) = 28.931135, 60.136483, 1.062468, 5135.619510, 90.734130, 9968.685353


Stats:

prox:
	# of samples captured: 32
	# of bad samples (corrupted/lost): 0
	calculated odr: 85.396367Hz
	average: rawrange = 26.575566
	average: signalrateperspad = 59.776297, ambientrateperspad = 0.913306
	average: totalsignalrate = 5104.859907, totalambientrate = 77.995803
	average: integrationtime = 9968.685353
	std-dev: rawrange = 1.553545
	std-dev: signalrateperspad = 0.350684, ambientrateperspad = 0.144354
	std-dev: totalsignalrate = 29.948213, totalambientrate = 12.327772
	std-dev: integrationtime = 0.000000
	rms: rawrange = 26.620936
	rms: signalrateperspad = 59.777326, ambientrateperspad = 0.924643
	rms: totalsignalrate = 5104.947753, totalambientrate = 78.964038
	rms: integrationtime = 9968.685353
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:51.351 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:51.351]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:51.351]
CATCH_VALUE => Catch OK : Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 14s:683594us (+00s:000000us) = 29.480157, 58.882400, 0.983179, 5028.521637, 83.962926, 9968.685353prox:		 14s:695322us (+00s:011728us) = 27.765258, 59.185019, 0.999037, 5054.365065, 85.317167, 9968.685353prox:		 14s:707045us (+00s:011723us) = 27.478019, 59.370026, 0.888032, 5070.164540, 75.837482, 9968.685353prox:		 14s:718765us (+00s:011720us) = 28.256138, 59.553711, 0.634309, 5085.851163, 54.169630, 9968.685353prox:		 14s:730483us (+00s:011718us) = 25.779174, 59.726825, 0.602593, 5100.634958, 51.461148, 9968.685353prox:		 14s:742198us (+00s:011715us) = 26.761658, 59.200877, 0.983179, 5055.719306, 83.962926, 9968.685353prox:		 14s:753914us (+00s:011716us) = 24.728279, 59.862937, 1.062468, 5112.258857, 90.734130, 9968.685353prox:		 14s:765626us (+00s:011712us) = 26.690499, 59.823292, 0.745313, 5108.873255, 63.649315, 9968.685353prox:		 14s:777342us (+00s:011716us) = 28.168491, 59.903903, 0.713597, 5115.757313, 60.940834, 9968.685353prox:		 14s:789054us (+00s:011712us) = 26.627584, 59.615821, 0.903890, 5091.155272, 77.191723, 9968.685353prox:		 14s:800768us (+00s:011714us) = 23.425146, 59.639607, 0.777028, 5093.186633, 66.357797, 9968.685353prox:		 14s:812481us (+00s:011713us) = 27.305618, 59.631678, 0.967321, 5092.509513, 82.608686, 9968.685353prox:		 14s:824192us (+00s:011711us) = 24.779045, 60.028122, 0.888032, 5126.365532, 75.837482, 9968.685353prox:		 14s:835904us (+00s:011712us) = 28.507942, 59.290737, 1.062468, 5063.393337, 90.734130, 9968.685353prox:		 14s:847615us (+00s:011711us) = 25.699337, 59.709645, 0.872175, 5099.167863, 74.483241, 9968.685353prox:		 14s:859325us (+00s:011710us) = 27.322684, 59.597320, 0.856317, 5089.575325, 73.129000, 9968.685353prox:		 14s:871035us (+00s:011710us) = 27.873732, 60.317525, 0.999037, 5151.080426, 85.317167, 9968.685353prox:		 14s:882747us (+00s:011712us) = 24.345728, 59.925046, 0.729455, 5117.562967, 62.295074, 9968.685353prox:		 14s:894453us (+00s:011706us) = 27.837429, 59.652822, 1.221045, 5094.315167, 104.276538, 9968.685353prox:		 14s:906161us (+00s:011708us) = 28.401927, 59.747968, 1.110041, 5102.440612, 94.796852, 9968.685353prox:		 14s:917865us (+00s:011704us) = 27.405703, 60.188020, 0.856317, 5140.020793, 73.129000, 9968.685353prox:		 14s:929571us (+00s:011706us) = 27.036747, 60.016228, 0.856317, 5125.349851, 73.129000, 9968.685353prox:		 14s:941276us (+00s:011705us) = 25.235358, 59.946190, 0.840459, 5119.368621, 71.774760, 9968.685353prox:		 14s:952982us (+00s:011706us) = 26.590124, 59.334346, 1.046610, 5067.117499, 89.379889, 9968.685353prox:		 14s:964688us (+00s:011706us) = 26.488159, 60.069087, 0.903890, 5129.863987, 77.191723, 9968.685353prox:		 14s:976395us (+00s:011707us) = 25.601710, 59.849722, 0.999037, 5111.130323, 85.317167, 9968.685353prox:		 14s:988100us (+00s:011705us) = 23.652941, 60.099481, 0.824602, 5132.459615, 70.420519, 9968.685353prox:		 14s:999806us (+00s:011706us) = 23.987764, 59.972619, 0.808744, 5121.625689, 69.066278, 9968.685353prox:		 15s:011510us (+00s:011704us) = 25.239119, 59.870866, 1.062468, 5112.935978, 90.734130, 9968.685353prox:		 15s:023217us (+00s:011707us) = 27.026912, 60.292417, 1.141756, 5148.936211, 97.505334, 9968.685353prox:		 15s:034919us (+00s:011702us) = 25.988601, 60.400778, 0.824602, 5158.190190, 70.420519, 9968.685353prox:		 15s:046625us (+00s:011706us) = 28.931135, 60.136483, 1.062468, 5135.619510, 90.734130, 9968.685353Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.396367Hz	average: rawrange = 26.575566	average: signalrateperspad = 59.776297, ambientrateperspad = 0.913306	average: totalsignalrate = 5104.859907, totalambientrate = 77.995803	average: integrationtime = 9968.685353	std-dev: rawrange = 1.553545	std-dev: signalrateperspad = 0.350684, ambientrateperspad = 0.144354	std-dev: totalsignalrate = 29.948213, totalambientrate = 12.327772	std-dev: integrationtime = 0.000000	rms: rawrange = 26.620936	rms: signalrateperspad = 59.777326, ambientrateperspad = 0.924643	rms: totalsignalrate = 5104.947753, totalambientrate = 78.964038	rms: integrationtime = 9968.685353OK

[2016-03-31 23:44:51.351]
READ_COMMAND => Catch string between sensor --sel prox --sample 32 --stats and [0006451C:3020213A] :-) == Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 14s:683594us (+00s:000000us) = 29.480157, 58.882400, 0.983179, 5028.521637, 83.962926, 9968.685353prox:		 14s:695322us (+00s:011728us) = 27.765258, 59.185019, 0.999037, 5054.365065, 85.317167, 9968.685353prox:		 14s:707045us (+00s:011723us) = 27.478019, 59.370026, 0.888032, 5070.164540, 75.837482, 9968.685353prox:		 14s:718765us (+00s:011720us) = 28.256138, 59.553711, 0.634309, 5085.851163, 54.169630, 9968.685353prox:		 14s:730483us (+00s:011718us) = 25.779174, 59.726825, 0.602593, 5100.634958, 51.461148, 9968.685353prox:		 14s:742198us (+00s:011715us) = 26.761658, 59.200877, 0.983179, 5055.719306, 83.962926, 9968.685353prox:		 14s:753914us (+00s:011716us) = 24.728279, 59.862937, 1.062468, 5112.258857, 90.734130, 9968.685353prox:		 14s:765626us (+00s:011712us) = 26.690499, 59.823292, 0.745313, 5108.873255, 63.649315, 9968.685353prox:		 14s:777342us (+00s:011716us) = 28.168491, 59.903903, 0.713597, 5115.757313, 60.940834, 9968.685353prox:		 14s:789054us (+00s:011712us) = 26.627584, 59.615821, 0.903890, 5091.155272, 77.191723, 9968.685353prox:		 14s:800768us (+00s:011714us) = 23.425146, 59.639607, 0.777028, 5093.186633, 66.357797, 9968.685353prox:		 14s:812481us (+00s:011713us) = 27.305618, 59.631678, 0.967321, 5092.509513, 82.608686, 9968.685353prox:		 14s:824192us (+00s:011711us) = 24.779045, 60.028122, 0.888032, 5126.365532, 75.837482, 9968.685353prox:		 14s:835904us (+00s:011712us) = 28.507942, 59.290737, 1.062468, 5063.393337, 90.734130, 9968.685353prox:		 14s:847615us (+00s:011711us) = 25.699337, 59.709645, 0.872175, 5099.167863, 74.483241, 9968.685353prox:		 14s:859325us (+00s:011710us) = 27.322684, 59.597320, 0.856317, 5089.575325, 73.129000, 9968.685353prox:		 14s:871035us (+00s:011710us) = 27.873732, 60.317525, 0.999037, 5151.080426, 85.317167, 9968.685353prox:		 14s:882747us (+00s:011712us) = 24.345728, 59.925046, 0.729455, 5117.562967, 62.295074, 9968.685353prox:		 14s:894453us (+00s:011706us) = 27.837429, 59.652822, 1.221045, 5094.315167, 104.276538, 9968.685353prox:		 14s:906161us (+00s:011708us) = 28.401927, 59.747968, 1.110041, 5102.440612, 94.796852, 9968.685353prox:		 14s:917865us (+00s:011704us) = 27.405703, 60.188020, 0.856317, 5140.020793, 73.129000, 9968.685353prox:		 14s:929571us (+00s:011706us) = 27.036747, 60.016228, 0.856317, 5125.349851, 73.129000, 9968.685353prox:		 14s:941276us (+00s:011705us) = 25.235358, 59.946190, 0.840459, 5119.368621, 71.774760, 9968.685353prox:		 14s:952982us (+00s:011706us) = 26.590124, 59.334346, 1.046610, 5067.117499, 89.379889, 9968.685353prox:		 14s:964688us (+00s:011706us) = 26.488159, 60.069087, 0.903890, 5129.863987, 77.191723, 9968.685353prox:		 14s:976395us (+00s:011707us) = 25.601710, 59.849722, 0.999037, 5111.130323, 85.317167, 9968.685353prox:		 14s:988100us (+00s:011705us) = 23.652941, 60.099481, 0.824602, 5132.459615, 70.420519, 9968.685353prox:		 14s:999806us (+00s:011706us) = 23.987764, 59.972619, 0.808744, 5121.625689, 69.066278, 9968.685353prox:		 15s:011510us (+00s:011704us) = 25.239119, 59.870866, 1.062468, 5112.935978, 90.734130, 9968.685353prox:		 15s:023217us (+00s:011707us) = 27.026912, 60.292417, 1.141756, 5148.936211, 97.505334, 9968.685353prox:		 15s:034919us (+00s:011702us) = 25.988601, 60.400778, 0.824602, 5158.190190, 70.420519, 9968.685353prox:		 15s:046625us (+00s:011706us) = 28.931135, 60.136483, 1.062468, 5135.619510, 90.734130, 9968.685353Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.396367Hz	average: rawrange = 26.575566	average: signalrateperspad = 59.776297, ambientrateperspad = 0.913306	average: totalsignalrate = 5104.859907, totalambientrate = 77.995803	average: integrationtime = 9968.685353	std-dev: rawrange = 1.553545	std-dev: signalrateperspad = 0.350684, ambientrateperspad = 0.144354	std-dev: totalsignalrate = 29.948213, totalambientrate = 12.327772	std-dev: integrationtime = 0.000000	rms: rawrange = 26.620936	rms: signalrateperspad = 59.777326, ambientrateperspad = 0.924643	rms: totalsignalrate = 5104.947753, totalambientrate = 78.964038	rms: integrationtime = 9968.685353OK

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 14s:683594us (+00s:000000us) = 29.480157, 58.882400, 0.983179, 5028.521637, 83.962926, 9968.685353prox:		 14s:695322us (+00s:011728us) = 27.765258, 59.185019, 0.999037, 5054.365065, 85.317167, 9968.685353prox:		 14s:707045us (+00s:011723us) = 27.478019, 59.370026, 0.888032, 5070.164540, 75.837482, 9968.685353prox:		 14s:718765us (+00s:011720us) = 28.256138, 59.553711, 0.634309, 5085.851163, 54.169630, 9968.685353prox:		 14s:730483us (+00s:011718us) = 25.779174, 59.726825, 0.602593, 5100.634958, 51.461148, 9968.685353prox:		 14s:742198us (+00s:011715us) = 26.761658, 59.200877, 0.983179, 5055.719306, 83.962926, 9968.685353prox:		 14s:753914us (+00s:011716us) = 24.728279, 59.862937, 1.062468, 5112.258857, 90.734130, 9968.685353prox:		 14s:765626us (+00s:011712us) = 26.690499, 59.823292, 0.745313, 5108.873255, 63.649315, 9968.685353prox:		 14s:777342us (+00s:011716us) = 28.168491, 59.903903, 0.713597, 5115.757313, 60.940834, 9968.685353prox:		 14s:789054us (+00s:011712us) = 26.627584, 59.615821, 0.903890, 5091.155272, 77.191723, 9968.685353prox:		 14s:800768us (+00s:011714us) = 23.425146, 59.639607, 0.777028, 5093.186633, 66.357797, 9968.685353prox:		 14s:812481us (+00s:011713us) = 27.305618, 59.631678, 0.967321, 5092.509513, 82.608686, 9968.685353prox:		 14s:824192us (+00s:011711us) = 24.779045, 60.028122, 0.888032, 5126.365532, 75.837482, 9968.685353prox:		 14s:835904us (+00s:011712us) = 28.507942, 59.290737, 1.062468, 5063.393337, 90.734130, 9968.685353prox:		 14s:847615us (+00s:011711us) = 25.699337, 59.709645, 0.872175, 5099.167863, 74.483241, 9968.685353prox:		 14s:859325us (+00s:011710us) = 27.322684, 59.597320, 0.856317, 5089.575325, 73.129000, 9968.685353prox:		 14s:871035us (+00s:011710us) = 27.873732, 60.317525, 0.999037, 5151.080426, 85.317167, 9968.685353prox:		 14s:882747us (+00s:011712us) = 24.345728, 59.925046, 0.729455, 5117.562967, 62.295074, 9968.685353prox:		 14s:894453us (+00s:011706us) = 27.837429, 59.652822, 1.221045, 5094.315167, 104.276538, 9968.685353prox:		 14s:906161us (+00s:011708us) = 28.401927, 59.747968, 1.110041, 5102.440612, 94.796852, 9968.685353prox:		 14s:917865us (+00s:011704us) = 27.405703, 60.188020, 0.856317, 5140.020793, 73.129000, 9968.685353prox:		 14s:929571us (+00s:011706us) = 27.036747, 60.016228, 0.856317, 5125.349851, 73.129000, 9968.685353prox:		 14s:941276us (+00s:011705us) = 25.235358, 59.946190, 0.840459, 5119.368621, 71.774760, 9968.685353prox:		 14s:952982us (+00s:011706us) = 26.590124, 59.334346, 1.046610, 5067.117499, 89.379889, 9968.685353prox:		 14s:964688us (+00s:011706us) = 26.488159, 60.069087, 0.903890, 5129.863987, 77.191723, 9968.685353prox:		 14s:976395us (+00s:011707us) = 25.601710, 59.849722, 0.999037, 5111.130323, 85.317167, 9968.685353prox:		 14s:988100us (+00s:011705us) = 23.652941, 60.099481, 0.824602, 5132.459615, 70.420519, 9968.685353prox:		 14s:999806us (+00s:011706us) = 23.987764, 59.972619, 0.808744, 5121.625689, 69.066278, 9968.685353prox:		 15s:011510us (+00s:011704us) = 25.239119, 59.870866, 1.062468, 5112.935978, 90.734130, 9968.685353prox:		 15s:023217us (+00s:011707us) = 27.026912, 60.292417, 1.141756, 5148.936211, 97.505334, 9968.685353prox:		 15s:034919us (+00s:011702us) = 25.988601, 60.400778, 0.824602, 5158.190190, 70.420519, 9968.685353prox:		 15s:046625us (+00s:011706us) = 28.931135, 60.136483, 1.062468, 5135.619510, 90.734130, 9968.685353Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.396367Hz	average: rawrange = 26.575566	average: signalrateperspad = 59.776297, ambientrateperspad = 0.913306	average: totalsignalrate = 5104.859907, totalambientrate = 77.995803	average: integrationtime = 9968.685353	std-dev: rawrange = 1.553545	std-dev: signalrateperspad = 0.350684, ambientrateperspad = 0.144354	std-dev: totalsignalrate = 29.948213, totalambientrate = 12.327772	std-dev: integrationtime = 0.000000	rms: rawrange = 26.620936	rms: signalrateperspad = 59.777326, ambientrateperspad = 0.924643	rms: totalsignalrate = 5104.947753, totalambientrate = 78.964038	rms: integrationtime = 9968.685353OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.764467s) ++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_stats 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 14s:683594us (+00s:000000us) = 29.480157, 58.882400, 0.983179, 5028.521637, 83.962926, 9968.685353prox:		 14s:695322us (+00s:011728us) = 27.765258, 59.185019, 0.999037, 5054.365065, 85.317167, 9968.685353prox:		 14s:707045us (+00s:011723us) = 27.478019, 59.370026, 0.888032, 5070.164540, 75.837482, 9968.685353prox:		 14s:718765us (+00s:011720us) = 28.256138, 59.553711, 0.634309, 5085.851163, 54.169630, 9968.685353prox:		 14s:730483us (+00s:011718us) = 25.779174, 59.726825, 0.602593, 5100.634958, 51.461148, 9968.685353prox:		 14s:742198us (+00s:011715us) = 26.761658, 59.200877, 0.983179, 5055.719306, 83.962926, 9968.685353prox:		 14s:753914us (+00s:011716us) = 24.728279, 59.862937, 1.062468, 5112.258857, 90.734130, 9968.685353prox:		 14s:765626us (+00s:011712us) = 26.690499, 59.823292, 0.745313, 5108.873255, 63.649315, 9968.685353prox:		 14s:777342us (+00s:011716us) = 28.168491, 59.903903, 0.713597, 5115.757313, 60.940834, 9968.685353prox:		 14s:789054us (+00s:011712us) = 26.627584, 59.615821, 0.903890, 5091.155272, 77.191723, 9968.685353prox:		 14s:800768us (+00s:011714us) = 23.425146, 59.639607, 0.777028, 5093.186633, 66.357797, 9968.685353prox:		 14s:812481us (+00s:011713us) = 27.305618, 59.631678, 0.967321, 5092.509513, 82.608686, 9968.685353prox:		 14s:824192us (+00s:011711us) = 24.779045, 60.028122, 0.888032, 5126.365532, 75.837482, 9968.685353prox:		 14s:835904us (+00s:011712us) = 28.507942, 59.290737, 1.062468, 5063.393337, 90.734130, 9968.685353prox:		 14s:847615us (+00s:011711us) = 25.699337, 59.709645, 0.872175, 5099.167863, 74.483241, 9968.685353prox:		 14s:859325us (+00s:011710us) = 27.322684, 59.597320, 0.856317, 5089.575325, 73.129000, 9968.685353prox:		 14s:871035us (+00s:011710us) = 27.873732, 60.317525, 0.999037, 5151.080426, 85.317167, 9968.685353prox:		 14s:882747us (+00s:011712us) = 24.345728, 59.925046, 0.729455, 5117.562967, 62.295074, 9968.685353prox:		 14s:894453us (+00s:011706us) = 27.837429, 59.652822, 1.221045, 5094.315167, 104.276538, 9968.685353prox:		 14s:906161us (+00s:011708us) = 28.401927, 59.747968, 1.110041, 5102.440612, 94.796852, 9968.685353prox:		 14s:917865us (+00s:011704us) = 27.405703, 60.188020, 0.856317, 5140.020793, 73.129000, 9968.685353prox:		 14s:929571us (+00s:011706us) = 27.036747, 60.016228, 0.856317, 5125.349851, 73.129000, 9968.685353prox:		 14s:941276us (+00s:011705us) = 25.235358, 59.946190, 0.840459, 5119.368621, 71.774760, 9968.685353prox:		 14s:952982us (+00s:011706us) = 26.590124, 59.334346, 1.046610, 5067.117499, 89.379889, 9968.685353prox:		 14s:964688us (+00s:011706us) = 26.488159, 60.069087, 0.903890, 5129.863987, 77.191723, 9968.685353prox:		 14s:976395us (+00s:011707us) = 25.601710, 59.849722, 0.999037, 5111.130323, 85.317167, 9968.685353prox:		 14s:988100us (+00s:011705us) = 23.652941, 60.099481, 0.824602, 5132.459615, 70.420519, 9968.685353prox:		 14s:999806us (+00s:011706us) = 23.987764, 59.972619, 0.808744, 5121.625689, 69.066278, 9968.685353prox:		 15s:011510us (+00s:011704us) = 25.239119, 59.870866, 1.062468, 5112.935978, 90.734130, 9968.685353prox:		 15s:023217us (+00s:011707us) = 27.026912, 60.292417, 1.141756, 5148.936211, 97.505334, 9968.685353prox:		 15s:034919us (+00s:011702us) = 25.988601, 60.400778, 0.824602, 5158.190190, 70.420519, 9968.685353prox:		 15s:046625us (+00s:011706us) = 28.931135, 60.136483, 1.062468, 5135.619510, 90.734130, 9968.685353Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.396367Hz	average: rawrange = 26.575566	average: signalrateperspad = 59.776297, ambientrateperspad = 0.913306	average: totalsignalrate = 5104.859907, totalambientrate = 77.995803	average: integrationtime = 9968.685353	std-dev: rawrange = 1.553545	std-dev: signalrateperspad = 0.350684, ambientrateperspad = 0.144354	std-dev: totalsignalrate = 29.948213, totalambientrate = 12.327772	std-dev: integrationtime = 0.000000	rms: rawrange = 26.620936	rms: signalrateperspad = 59.777326, ambientrateperspad = 0.924643	rms: totalsignalrate = 5104.947753, totalambientrate = 78.964038	rms: integrationtime = 9968.685353OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_stats 
REGEX ==> average:\s*(.*?)std-dev: 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> rawrange = 26.575566	average: signalrateperspad = 59.776297, ambientrateperspad = 0.913306	average: totalsignalrate = 5104.859907, totalambientrate = 77.995803	average: integrationtime = 9968.685353
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000802s) +++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_AVE 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> rawrange = 26.575566	average: signalrateperspad = 59.776297, ambientrateperspad = 0.913306	average: totalsignalrate = 5104.859907, totalambientrate = 77.995803	average: integrationtime = 9968.685353
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_stats 
REGEX ==> std-dev:\s*(.*?)rms: 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> rawrange = 1.553545	std-dev: signalrateperspad = 0.350684, ambientrateperspad = 0.144354	std-dev: totalsignalrate = 29.948213, totalambientrate = 12.327772	std-dev: integrationtime = 0.000000
+++++++++++++++ [8] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000795s) +++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_STD 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> rawrange = 1.553545	std-dev: signalrateperspad = 0.350684, ambientrateperspad = 0.144354	std-dev: totalsignalrate = 29.948213, totalambientrate = 12.327772	std-dev: integrationtime = 0.000000
++++++++++ [9] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_AVE 
REGEX ==> rawrange =\s(.*?)\s 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 26.575566
++++++++++++++ [10] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000149s) ++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RAW_DIST_AVE 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 26.575566
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000005s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_NO_TARGET_RAW_DIST_AVE_spec*] 
 
}

[2016-03-31 23:44:51.351]
JUDGE_SPEC =>  value is [26.575566], spec is [Item0=-20 ; Item1=100 ; ], mode is [1]

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 26.575566
+++++++++++++++ [12] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000563s) +++++++++++++++

[2016-03-31 23:44:51.351]
========== END TEST PROX_CG_NO_TARGET_RAW_DIST_AVE (TestResult : PASS ; Duration : 0.812429s) ==========

[2016-03-31 23:44:51.351]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_NO_TARGET_RAW_DIST_AVE,,,26.575566,-20,100,,)

[2016-03-31 23:44:51.351]
Item Name:PROX_CG_NO_TARGET_RAW_DIST_AVE, [-20,100]

[2016-03-31 23:44:51.351]
========================== START TEST PROX_CG_NO_TARGET_RAW_DIST_STD (Item28) ==========================

[2016-03-31 23:44:51.351]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_STD 
REGEX ==> rawrange =\s(.*?)\s 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 1.553545
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000260s) +++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RAW_DIST_STD 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 1.553545
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_NO_TARGET_RAW_DIST_STD_spec*] 
 
}

[2016-03-31 23:44:51.351]
JUDGE_SPEC =>  value is [1.553545], spec is [Item0=0.01 ; Item1=3 ; ], mode is [1]

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 1.553545
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000705s) +++++++++++++++

[2016-03-31 23:44:51.351]
========== END TEST PROX_CG_NO_TARGET_RAW_DIST_STD (TestResult : PASS ; Duration : 0.005355s) ==========

[2016-03-31 23:44:51.351]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_NO_TARGET_RAW_DIST_STD,,,1.553545,0.01,3,,)

[2016-03-31 23:44:51.351]
Item Name:PROX_CG_NO_TARGET_RAW_DIST_STD, [0.01,3]

[2016-03-31 23:44:51.351]
============================ START TEST PROX_CG_NO_TARGET_SIG_AVE (Item29) ============================

[2016-03-31 23:44:51.351]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_AVE 
REGEX ==> average: signalrateperspad =\s(.*?), 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 59.776297
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000217s) +++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> SIG_AVE 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 59.776297
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_NO_TARGET_SIG_AVE_spec*] 
 
}

[2016-03-31 23:44:51.351]
JUDGE_SPEC =>  value is [59.776297], spec is [Item0=20 ; Item1=300 ; ], mode is [1]

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 59.776297
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000618s) +++++++++++++++

[2016-03-31 23:44:51.351]
============ END TEST PROX_CG_NO_TARGET_SIG_AVE (TestResult : PASS ; Duration : 0.004998s) ============

[2016-03-31 23:44:51.351]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_NO_TARGET_SIG_AVE,,,59.776297,20,300,,)

[2016-03-31 23:44:51.351]
Item Name:PROX_CG_NO_TARGET_SIG_AVE, [20,300]

[2016-03-31 23:44:51.351]
============================ START TEST PROX_CG_NO_TARGET_SIG_STD (Item30) ============================

[2016-03-31 23:44:51.351]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_STD 
REGEX ==> std-dev: signalrateperspad =\s(.*?), 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.350684
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000173s) +++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> SIG_STD 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.350684
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_NO_TARGET_SIG_STD_spec*] 
 
}

[2016-03-31 23:44:51.351]
JUDGE_SPEC =>  value is [0.350684], spec is [Item0=0.01 ; Item1=3 ; ], mode is [1]

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.350684
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000530s) +++++++++++++++

[2016-03-31 23:44:51.351]
============ END TEST PROX_CG_NO_TARGET_SIG_STD (TestResult : PASS ; Duration : 0.003862s) ============

[2016-03-31 23:44:51.351]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_NO_TARGET_SIG_STD,,,0.350684,0.01,3,,)

[2016-03-31 23:44:51.351]
Item Name:PROX_CG_NO_TARGET_SIG_STD, [0.01,3]

[2016-03-31 23:44:51.351]
============================ START TEST PROX_CG_NO_TARGET_AMB_AVE (Item31) ============================

[2016-03-31 23:44:51.351]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_AVE 
REGEX ==> ambientrateperspad =\s(.*?)\s 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.913306
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000215s) +++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AMB_AVE 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.913306
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_NO_TARGET_AMB_AVE_spec*] 
 
}

[2016-03-31 23:44:51.351]
JUDGE_SPEC =>  value is [0.913306], spec is [Item0=0.5 ; Item1=3 ; ], mode is [1]

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.913306
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000588s) +++++++++++++++

[2016-03-31 23:44:51.351]
============ END TEST PROX_CG_NO_TARGET_AMB_AVE (TestResult : PASS ; Duration : 0.004801s) ============

[2016-03-31 23:44:51.351]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_NO_TARGET_AMB_AVE,,,0.913306,0.5,3,,)

[2016-03-31 23:44:51.351]
Item Name:PROX_CG_NO_TARGET_AMB_AVE, [0.5,3]

[2016-03-31 23:44:51.351]
============================ START TEST PROX_CG_NO_TARGET_AMB_STD (Item32) ============================

[2016-03-31 23:44:51.351]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_No_Target_STD 
REGEX ==> ambientrateperspad =\s(.*?)\s 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.144354
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000213s) +++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> AMB_STD 
}

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.144354
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_NO_TARGET_AMB_STD_spec*] 
 
}

[2016-03-31 23:44:51.351]
JUDGE_SPEC =>  value is [0.144354], spec is [Item0=0.01 ; Item1=0.5 ; ], mode is [1]

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 0.144354
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000587s) +++++++++++++++

[2016-03-31 23:44:51.351]
============ END TEST PROX_CG_NO_TARGET_AMB_STD (TestResult : PASS ; Duration : 0.004720s) ============

[2016-03-31 23:44:51.351]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_NO_TARGET_AMB_STD,,,0.144354,0.01,0.5,,)

[2016-03-31 23:44:51.351]
Item Name:PROX_CG_NO_TARGET_AMB_STD, [0.01,0.5]

[2016-03-31 23:44:51.351]
=========================== START TEST PROX_CG_TARGET_RAW_DIST_AVE (Item33) ===========================

[2016-03-31 23:44:51.351]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> gray card out 
TARGET ==> FIXTURE 
}

[2016-03-31 23:44:51.351]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:51.351]
Write to ---> FIXTURE , command[gray card out(STRING)]

[2016-03-31 23:44:51.351]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:gray card out,2,0;return value:0!

[2016-03-31 23:44:51.351]
PostTXToUI ===> 
{
Info ==> gray card out 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:51.351 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:44:51.351]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:44:51.351]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004395s) +++++++++++++++++++++

[2016-03-31 23:44:51.351]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> gray card out 
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-03-31 23:44:52.352]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:gray card out
gray card out Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:52.352]
PostRXToUI ===> 
{
Info ==> gray card out
gray card out Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:52.352 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:44:52.352]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:44:52.352]
CATCH_VALUE => Catch OK : gray card out Pass

[2016-03-31 23:44:52.352]
READ_COMMAND => Catch string between gray card out and @_@ == gray card out Pass

[2016-03-31 23:44:52.352]
RETURN_VALUE ===> gray card out Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.611534s) ++++++++++++++

[2016-03-31 23:44:52.352]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel prox --sample 32 --stats 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:52.352]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:52.352]
Write to ---> MOBILE , command[sensor --sel prox --sample 32 --stats(STRING)]

[2016-03-31 23:44:52.352]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel prox --sample 32 --stats,2,0;return value:0!

[2016-03-31 23:44:52.352]
PostTXToUI ===> 
{
Info ==> sensor --sel prox --sample 32 --stats 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:52.352 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:52.352]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:52.352]
RETURN_VALUE ===> gray card out Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004632s) +++++++++++++++++++++

[2016-03-31 23:44:52.352]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel prox --sample 32 --stats 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:53.353]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel prox --sample 32 --stats
Capturing 32 samples from:
prox @ 60.00 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
prox:		 16s:286603us (+00s:000000us) = -28.497095, 831.595310, 5.772214, 71017.739540, 492.943635, 9968.685353
prox:		 16s:298326us (+00s:011723us) = -29.014153, 838.313702, 5.788072, 71591.486207, 494.297876, 9968.685353
prox:		 16s:310044us (+00s:011718us) = -27.696847, 833.795570, 5.930791, 71205.640445, 506.486043, 9968.685353
prox:		 16s:321761us (+00s:011717us) = -29.681629, 834.399485, 5.613637, 71257.214447, 479.401227, 9968.685353
prox:		 16s:333477us (+00s:011716us) = -28.627408, 835.496312, 5.201336, 71350.882766, 444.190968, 9968.685353
prox:		 16s:345194us (+00s:011717us) = -27.915241, 833.451986, 5.692925, 71176.298562, 486.172431, 9968.685353
prox:		 16s:356906us (+00s:011712us) = -26.620208, 834.766856, 5.534348, 71288.587691, 472.630024, 9968.685353
prox:		 16s:368618us (+00s:011712us) = -29.128268, 834.650566, 6.105226, 71278.656592, 521.382691, 9968.685353
prox:		 16s:380327us (+00s:011709us) = -29.861696, 837.433598, 5.994222, 71516.325845, 511.903006, 9968.685353
prox:		 16s:392034us (+00s:011707us) = -27.570005, 837.763967, 5.375771, 71544.539194, 459.087616, 9968.685353
prox:		 16s:403745us (+00s:011711us) = -27.826726, 838.303130, 5.645352, 71590.583380, 482.109709, 9968.685353
prox:		 16s:415454us (+00s:011709us) = -27.698293, 838.087729, 5.788072, 71572.188276, 494.297876, 9968.685353
prox:		 16s:427160us (+00s:011706us) = -28.945164, 839.495103, 5.740498, 71692.377143, 490.235154, 9968.685353
prox:		 16s:438867us (+00s:011707us) = -29.864010, 839.522854, 6.105226, 71694.747065, 521.382691, 9968.685353
prox:		 16s:450574us (+00s:011707us) = -27.428989, 839.846616, 5.312340, 71722.396147, 453.670653, 9968.685353
prox:		 16s:462281us (+00s:011707us) = -29.730081, 840.726720, 5.772214, 71797.556509, 492.943635, 9968.685353
prox:		 16s:473986us (+00s:011705us) = -28.898014, 841.605503, 5.740498, 71872.604017, 490.235154, 9968.685353
prox:		 16s:485689us (+00s:011703us) = -28.314714, 840.437317, 5.946649, 71772.841615, 507.840283, 9968.685353
prox:		 16s:497396us (+00s:011707us) = -29.127545, 841.914729, 5.581921, 71899.011712, 476.692746, 9968.685353
prox:		 16s:509099us (+00s:011703us) = -29.751342, 842.156559, 5.566063, 71919.663884, 475.338505, 9968.685353
prox:		 16s:520803us (+00s:011704us) = -29.366621, 843.130488, 6.247946, 72002.836837, 533.570858, 9968.685353
prox:		 16s:532507us (+00s:011704us) = -29.265668, 842.317779, 5.899076, 71933.431998, 503.777561, 9968.685353
prox:		 16s:544209us (+00s:011702us) = -30.708949, 841.816939, 6.010080, 71890.660561, 513.257246, 9968.685353
prox:		 16s:555911us (+00s:011702us) = -29.270730, 842.543752, 5.470917, 71952.729929, 467.213061, 9968.685353
prox:		 16s:567613us (+00s:011702us) = -29.631297, 841.090127, 5.756356, 71828.591193, 491.589394, 9968.685353
prox:		 16s:579315us (+00s:011702us) = -27.891377, 841.602860, 5.914933, 71872.378311, 505.131802, 9968.685353
prox:		 16s:591018us (+00s:011703us) = -28.325417, 842.798797, 5.788072, 71974.510634, 494.297876, 9968.685353
prox:		 16s:602720us (+00s:011702us) = -29.983476, 845.395501, 5.518490, 72196.267558, 471.275783, 9968.685353
prox:		 16s:614421us (+00s:011701us) = -28.640714, 842.324387, 6.184515, 71933.996265, 528.153895, 9968.685353
prox:		 16s:626120us (+00s:011699us) = -28.842476, 842.560931, 5.740498, 71954.197023, 490.235154, 9968.685353
prox:		 16s:637822us (+00s:011702us) = -30.391627, 841.970231, 5.914933, 71903.751555, 505.131802, 9968.685353
prox:		 16s:649523us (+00s:011701us) = -30.150960, 842.516001, 5.930791, 71950.360008, 506.486043, 9968.685353


Stats:

prox:
	# of samples captured: 32
	# of bad samples (corrupted/lost): 0
	calculated odr: 85.422141Hz
	average: rawrange = -28.895836
	average: signalrateperspad = 839.494731, ambientrateperspad = 5.768249
	average: totalsignalrate = 71692.345403, totalambientrate = 492.605075
	average: integrationtime = 9968.685353
	std-dev: rawrange = 0.958479
	std-dev: signalrateperspad = 3.411366, ambientrateperspad = 0.243514
	std-dev: totalsignalrate = 291.328652, totalambientrate = 20.795975
	std-dev: integrationtime = 0.000000
	rms: rawrange = 28.911728
	rms: signalrateperspad = 839.501663, ambientrateperspad = 5.773387
	rms: totalsignalrate = 71692.937322, totalambientrate = 493.043844
	rms: integrationtime = 9968.685353
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:53.353]
PostRXToUI ===> 
{
Info ==> sensor --sel prox --sample 32 --stats
Capturing 32 samples from:
prox @ 60.00 Hz

Output format = abstime : relativetime : sample
Waiting for capture to finish...
prox:		 16s:286603us (+00s:000000us) = -28.497095, 831.595310, 5.772214, 71017.739540, 492.943635, 9968.685353
prox:		 16s:298326us (+00s:011723us) = -29.014153, 838.313702, 5.788072, 71591.486207, 494.297876, 9968.685353
prox:		 16s:310044us (+00s:011718us) = -27.696847, 833.795570, 5.930791, 71205.640445, 506.486043, 9968.685353
prox:		 16s:321761us (+00s:011717us) = -29.681629, 834.399485, 5.613637, 71257.214447, 479.401227, 9968.685353
prox:		 16s:333477us (+00s:011716us) = -28.627408, 835.496312, 5.201336, 71350.882766, 444.190968, 9968.685353
prox:		 16s:345194us (+00s:011717us) = -27.915241, 833.451986, 5.692925, 71176.298562, 486.172431, 9968.685353
prox:		 16s:356906us (+00s:011712us) = -26.620208, 834.766856, 5.534348, 71288.587691, 472.630024, 9968.685353
prox:		 16s:368618us (+00s:011712us) = -29.128268, 834.650566, 6.105226, 71278.656592, 521.382691, 9968.685353
prox:		 16s:380327us (+00s:011709us) = -29.861696, 837.433598, 5.994222, 71516.325845, 511.903006, 9968.685353
prox:		 16s:392034us (+00s:011707us) = -27.570005, 837.763967, 5.375771, 71544.539194, 459.087616, 9968.685353
prox:		 16s:403745us (+00s:011711us) = -27.826726, 838.303130, 5.645352, 71590.583380, 482.109709, 9968.685353
prox:		 16s:415454us (+00s:011709us) = -27.698293, 838.087729, 5.788072, 71572.188276, 494.297876, 9968.685353
prox:		 16s:427160us (+00s:011706us) = -28.945164, 839.495103, 5.740498, 71692.377143, 490.235154, 9968.685353
prox:		 16s:438867us (+00s:011707us) = -29.864010, 839.522854, 6.105226, 71694.747065, 521.382691, 9968.685353
prox:		 16s:450574us (+00s:011707us) = -27.428989, 839.846616, 5.312340, 71722.396147, 453.670653, 9968.685353
prox:		 16s:462281us (+00s:011707us) = -29.730081, 840.726720, 5.772214, 71797.556509, 492.943635, 9968.685353
prox:		 16s:473986us (+00s:011705us) = -28.898014, 841.605503, 5.740498, 71872.604017, 490.235154, 9968.685353
prox:		 16s:485689us (+00s:011703us) = -28.314714, 840.437317, 5.946649, 71772.841615, 507.840283, 9968.685353
prox:		 16s:497396us (+00s:011707us) = -29.127545, 841.914729, 5.581921, 71899.011712, 476.692746, 9968.685353
prox:		 16s:509099us (+00s:011703us) = -29.751342, 842.156559, 5.566063, 71919.663884, 475.338505, 9968.685353
prox:		 16s:520803us (+00s:011704us) = -29.366621, 843.130488, 6.247946, 72002.836837, 533.570858, 9968.685353
prox:		 16s:532507us (+00s:011704us) = -29.265668, 842.317779, 5.899076, 71933.431998, 503.777561, 9968.685353
prox:		 16s:544209us (+00s:011702us) = -30.708949, 841.816939, 6.010080, 71890.660561, 513.257246, 9968.685353
prox:		 16s:555911us (+00s:011702us) = -29.270730, 842.543752, 5.470917, 71952.729929, 467.213061, 9968.685353
prox:		 16s:567613us (+00s:011702us) = -29.631297, 841.090127, 5.756356, 71828.591193, 491.589394, 9968.685353
prox:		 16s:579315us (+00s:011702us) = -27.891377, 841.602860, 5.914933, 71872.378311, 505.131802, 9968.685353
prox:		 16s:591018us (+00s:011703us) = -28.325417, 842.798797, 5.788072, 71974.510634, 494.297876, 9968.685353
prox:		 16s:602720us (+00s:011702us) = -29.983476, 845.395501, 5.518490, 72196.267558, 471.275783, 9968.685353
prox:		 16s:614421us (+00s:011701us) = -28.640714, 842.324387, 6.184515, 71933.996265, 528.153895, 9968.685353
prox:		 16s:626120us (+00s:011699us) = -28.842476, 842.560931, 5.740498, 71954.197023, 490.235154, 9968.685353
prox:		 16s:637822us (+00s:011702us) = -30.391627, 841.970231, 5.914933, 71903.751555, 505.131802, 9968.685353
prox:		 16s:649523us (+00s:011701us) = -30.150960, 842.516001, 5.930791, 71950.360008, 506.486043, 9968.685353


Stats:

prox:
	# of samples captured: 32
	# of bad samples (corrupted/lost): 0
	calculated odr: 85.422141Hz
	average: rawrange = -28.895836
	average: signalrateperspad = 839.494731, ambientrateperspad = 5.768249
	average: totalsignalrate = 71692.345403, totalambientrate = 492.605075
	average: integrationtime = 9968.685353
	std-dev: rawrange = 0.958479
	std-dev: signalrateperspad = 3.411366, ambientrateperspad = 0.243514
	std-dev: totalsignalrate = 291.328652, totalambientrate = 20.795975
	std-dev: integrationtime = 0.000000
	rms: rawrange = 28.911728
	rms: signalrateperspad = 839.501663, ambientrateperspad = 5.773387
	rms: totalsignalrate = 71692.937322, totalambientrate = 493.043844
	rms: integrationtime = 9968.685353
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:53.353 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:53.353]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:53.353]
CATCH_VALUE => Catch OK : Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 16s:286603us (+00s:000000us) = -28.497095, 831.595310, 5.772214, 71017.739540, 492.943635, 9968.685353prox:		 16s:298326us (+00s:011723us) = -29.014153, 838.313702, 5.788072, 71591.486207, 494.297876, 9968.685353prox:		 16s:310044us (+00s:011718us) = -27.696847, 833.795570, 5.930791, 71205.640445, 506.486043, 9968.685353prox:		 16s:321761us (+00s:011717us) = -29.681629, 834.399485, 5.613637, 71257.214447, 479.401227, 9968.685353prox:		 16s:333477us (+00s:011716us) = -28.627408, 835.496312, 5.201336, 71350.882766, 444.190968, 9968.685353prox:		 16s:345194us (+00s:011717us) = -27.915241, 833.451986, 5.692925, 71176.298562, 486.172431, 9968.685353prox:		 16s:356906us (+00s:011712us) = -26.620208, 834.766856, 5.534348, 71288.587691, 472.630024, 9968.685353prox:		 16s:368618us (+00s:011712us) = -29.128268, 834.650566, 6.105226, 71278.656592, 521.382691, 9968.685353prox:		 16s:380327us (+00s:011709us) = -29.861696, 837.433598, 5.994222, 71516.325845, 511.903006, 9968.685353prox:		 16s:392034us (+00s:011707us) = -27.570005, 837.763967, 5.375771, 71544.539194, 459.087616, 9968.685353prox:		 16s:403745us (+00s:011711us) = -27.826726, 838.303130, 5.645352, 71590.583380, 482.109709, 9968.685353prox:		 16s:415454us (+00s:011709us) = -27.698293, 838.087729, 5.788072, 71572.188276, 494.297876, 9968.685353prox:		 16s:427160us (+00s:011706us) = -28.945164, 839.495103, 5.740498, 71692.377143, 490.235154, 9968.685353prox:		 16s:438867us (+00s:011707us) = -29.864010, 839.522854, 6.105226, 71694.747065, 521.382691, 9968.685353prox:		 16s:450574us (+00s:011707us) = -27.428989, 839.846616, 5.312340, 71722.396147, 453.670653, 9968.685353prox:		 16s:462281us (+00s:011707us) = -29.730081, 840.726720, 5.772214, 71797.556509, 492.943635, 9968.685353prox:		 16s:473986us (+00s:011705us) = -28.898014, 841.605503, 5.740498, 71872.604017, 490.235154, 9968.685353prox:		 16s:485689us (+00s:011703us) = -28.314714, 840.437317, 5.946649, 71772.841615, 507.840283, 9968.685353prox:		 16s:497396us (+00s:011707us) = -29.127545, 841.914729, 5.581921, 71899.011712, 476.692746, 9968.685353prox:		 16s:509099us (+00s:011703us) = -29.751342, 842.156559, 5.566063, 71919.663884, 475.338505, 9968.685353prox:		 16s:520803us (+00s:011704us) = -29.366621, 843.130488, 6.247946, 72002.836837, 533.570858, 9968.685353prox:		 16s:532507us (+00s:011704us) = -29.265668, 842.317779, 5.899076, 71933.431998, 503.777561, 9968.685353prox:		 16s:544209us (+00s:011702us) = -30.708949, 841.816939, 6.010080, 71890.660561, 513.257246, 9968.685353prox:		 16s:555911us (+00s:011702us) = -29.270730, 842.543752, 5.470917, 71952.729929, 467.213061, 9968.685353prox:		 16s:567613us (+00s:011702us) = -29.631297, 841.090127, 5.756356, 71828.591193, 491.589394, 9968.685353prox:		 16s:579315us (+00s:011702us) = -27.891377, 841.602860, 5.914933, 71872.378311, 505.131802, 9968.685353prox:		 16s:591018us (+00s:011703us) = -28.325417, 842.798797, 5.788072, 71974.510634, 494.297876, 9968.685353prox:		 16s:602720us (+00s:011702us) = -29.983476, 845.395501, 5.518490, 72196.267558, 471.275783, 9968.685353prox:		 16s:614421us (+00s:011701us) = -28.640714, 842.324387, 6.184515, 71933.996265, 528.153895, 9968.685353prox:		 16s:626120us (+00s:011699us) = -28.842476, 842.560931, 5.740498, 71954.197023, 490.235154, 9968.685353prox:		 16s:637822us (+00s:011702us) = -30.391627, 841.970231, 5.914933, 71903.751555, 505.131802, 9968.685353prox:		 16s:649523us (+00s:011701us) = -30.150960, 842.516001, 5.930791, 71950.360008, 506.486043, 9968.685353Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.422141Hz	average: rawrange = -28.895836	average: signalrateperspad = 839.494731, ambientrateperspad = 5.768249	average: totalsignalrate = 71692.345403, totalambientrate = 492.605075	average: integrationtime = 9968.685353	std-dev: rawrange = 0.958479	std-dev: signalrateperspad = 3.411366, ambientrateperspad = 0.243514	std-dev: totalsignalrate = 291.328652, totalambientrate = 20.795975	std-dev: integrationtime = 0.000000	rms: rawrange = 28.911728	rms: signalrateperspad = 839.501663, ambientrateperspad = 5.773387	rms: totalsignalrate = 71692.937322, totalambientrate = 493.043844	rms: integrationtime = 9968.685353OK

[2016-03-31 23:44:53.353]
READ_COMMAND => Catch string between sensor --sel prox --sample 32 --stats and [0006451C:3020213A] :-) == Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 16s:286603us (+00s:000000us) = -28.497095, 831.595310, 5.772214, 71017.739540, 492.943635, 9968.685353prox:		 16s:298326us (+00s:011723us) = -29.014153, 838.313702, 5.788072, 71591.486207, 494.297876, 9968.685353prox:		 16s:310044us (+00s:011718us) = -27.696847, 833.795570, 5.930791, 71205.640445, 506.486043, 9968.685353prox:		 16s:321761us (+00s:011717us) = -29.681629, 834.399485, 5.613637, 71257.214447, 479.401227, 9968.685353prox:		 16s:333477us (+00s:011716us) = -28.627408, 835.496312, 5.201336, 71350.882766, 444.190968, 9968.685353prox:		 16s:345194us (+00s:011717us) = -27.915241, 833.451986, 5.692925, 71176.298562, 486.172431, 9968.685353prox:		 16s:356906us (+00s:011712us) = -26.620208, 834.766856, 5.534348, 71288.587691, 472.630024, 9968.685353prox:		 16s:368618us (+00s:011712us) = -29.128268, 834.650566, 6.105226, 71278.656592, 521.382691, 9968.685353prox:		 16s:380327us (+00s:011709us) = -29.861696, 837.433598, 5.994222, 71516.325845, 511.903006, 9968.685353prox:		 16s:392034us (+00s:011707us) = -27.570005, 837.763967, 5.375771, 71544.539194, 459.087616, 9968.685353prox:		 16s:403745us (+00s:011711us) = -27.826726, 838.303130, 5.645352, 71590.583380, 482.109709, 9968.685353prox:		 16s:415454us (+00s:011709us) = -27.698293, 838.087729, 5.788072, 71572.188276, 494.297876, 9968.685353prox:		 16s:427160us (+00s:011706us) = -28.945164, 839.495103, 5.740498, 71692.377143, 490.235154, 9968.685353prox:		 16s:438867us (+00s:011707us) = -29.864010, 839.522854, 6.105226, 71694.747065, 521.382691, 9968.685353prox:		 16s:450574us (+00s:011707us) = -27.428989, 839.846616, 5.312340, 71722.396147, 453.670653, 9968.685353prox:		 16s:462281us (+00s:011707us) = -29.730081, 840.726720, 5.772214, 71797.556509, 492.943635, 9968.685353prox:		 16s:473986us (+00s:011705us) = -28.898014, 841.605503, 5.740498, 71872.604017, 490.235154, 9968.685353prox:		 16s:485689us (+00s:011703us) = -28.314714, 840.437317, 5.946649, 71772.841615, 507.840283, 9968.685353prox:		 16s:497396us (+00s:011707us) = -29.127545, 841.914729, 5.581921, 71899.011712, 476.692746, 9968.685353prox:		 16s:509099us (+00s:011703us) = -29.751342, 842.156559, 5.566063, 71919.663884, 475.338505, 9968.685353prox:		 16s:520803us (+00s:011704us) = -29.366621, 843.130488, 6.247946, 72002.836837, 533.570858, 9968.685353prox:		 16s:532507us (+00s:011704us) = -29.265668, 842.317779, 5.899076, 71933.431998, 503.777561, 9968.685353prox:		 16s:544209us (+00s:011702us) = -30.708949, 841.816939, 6.010080, 71890.660561, 513.257246, 9968.685353prox:		 16s:555911us (+00s:011702us) = -29.270730, 842.543752, 5.470917, 71952.729929, 467.213061, 9968.685353prox:		 16s:567613us (+00s:011702us) = -29.631297, 841.090127, 5.756356, 71828.591193, 491.589394, 9968.685353prox:		 16s:579315us (+00s:011702us) = -27.891377, 841.602860, 5.914933, 71872.378311, 505.131802, 9968.685353prox:		 16s:591018us (+00s:011703us) = -28.325417, 842.798797, 5.788072, 71974.510634, 494.297876, 9968.685353prox:		 16s:602720us (+00s:011702us) = -29.983476, 845.395501, 5.518490, 72196.267558, 471.275783, 9968.685353prox:		 16s:614421us (+00s:011701us) = -28.640714, 842.324387, 6.184515, 71933.996265, 528.153895, 9968.685353prox:		 16s:626120us (+00s:011699us) = -28.842476, 842.560931, 5.740498, 71954.197023, 490.235154, 9968.685353prox:		 16s:637822us (+00s:011702us) = -30.391627, 841.970231, 5.914933, 71903.751555, 505.131802, 9968.685353prox:		 16s:649523us (+00s:011701us) = -30.150960, 842.516001, 5.930791, 71950.360008, 506.486043, 9968.685353Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.422141Hz	average: rawrange = -28.895836	average: signalrateperspad = 839.494731, ambientrateperspad = 5.768249	average: totalsignalrate = 71692.345403, totalambientrate = 492.605075	average: integrationtime = 9968.685353	std-dev: rawrange = 0.958479	std-dev: signalrateperspad = 3.411366, ambientrateperspad = 0.243514	std-dev: totalsignalrate = 291.328652, totalambientrate = 20.795975	std-dev: integrationtime = 0.000000	rms: rawrange = 28.911728	rms: signalrateperspad = 839.501663, ambientrateperspad = 5.773387	rms: totalsignalrate = 71692.937322, totalambientrate = 493.043844	rms: integrationtime = 9968.685353OK

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 16s:286603us (+00s:000000us) = -28.497095, 831.595310, 5.772214, 71017.739540, 492.943635, 9968.685353prox:		 16s:298326us (+00s:011723us) = -29.014153, 838.313702, 5.788072, 71591.486207, 494.297876, 9968.685353prox:		 16s:310044us (+00s:011718us) = -27.696847, 833.795570, 5.930791, 71205.640445, 506.486043, 9968.685353prox:		 16s:321761us (+00s:011717us) = -29.681629, 834.399485, 5.613637, 71257.214447, 479.401227, 9968.685353prox:		 16s:333477us (+00s:011716us) = -28.627408, 835.496312, 5.201336, 71350.882766, 444.190968, 9968.685353prox:		 16s:345194us (+00s:011717us) = -27.915241, 833.451986, 5.692925, 71176.298562, 486.172431, 9968.685353prox:		 16s:356906us (+00s:011712us) = -26.620208, 834.766856, 5.534348, 71288.587691, 472.630024, 9968.685353prox:		 16s:368618us (+00s:011712us) = -29.128268, 834.650566, 6.105226, 71278.656592, 521.382691, 9968.685353prox:		 16s:380327us (+00s:011709us) = -29.861696, 837.433598, 5.994222, 71516.325845, 511.903006, 9968.685353prox:		 16s:392034us (+00s:011707us) = -27.570005, 837.763967, 5.375771, 71544.539194, 459.087616, 9968.685353prox:		 16s:403745us (+00s:011711us) = -27.826726, 838.303130, 5.645352, 71590.583380, 482.109709, 9968.685353prox:		 16s:415454us (+00s:011709us) = -27.698293, 838.087729, 5.788072, 71572.188276, 494.297876, 9968.685353prox:		 16s:427160us (+00s:011706us) = -28.945164, 839.495103, 5.740498, 71692.377143, 490.235154, 9968.685353prox:		 16s:438867us (+00s:011707us) = -29.864010, 839.522854, 6.105226, 71694.747065, 521.382691, 9968.685353prox:		 16s:450574us (+00s:011707us) = -27.428989, 839.846616, 5.312340, 71722.396147, 453.670653, 9968.685353prox:		 16s:462281us (+00s:011707us) = -29.730081, 840.726720, 5.772214, 71797.556509, 492.943635, 9968.685353prox:		 16s:473986us (+00s:011705us) = -28.898014, 841.605503, 5.740498, 71872.604017, 490.235154, 9968.685353prox:		 16s:485689us (+00s:011703us) = -28.314714, 840.437317, 5.946649, 71772.841615, 507.840283, 9968.685353prox:		 16s:497396us (+00s:011707us) = -29.127545, 841.914729, 5.581921, 71899.011712, 476.692746, 9968.685353prox:		 16s:509099us (+00s:011703us) = -29.751342, 842.156559, 5.566063, 71919.663884, 475.338505, 9968.685353prox:		 16s:520803us (+00s:011704us) = -29.366621, 843.130488, 6.247946, 72002.836837, 533.570858, 9968.685353prox:		 16s:532507us (+00s:011704us) = -29.265668, 842.317779, 5.899076, 71933.431998, 503.777561, 9968.685353prox:		 16s:544209us (+00s:011702us) = -30.708949, 841.816939, 6.010080, 71890.660561, 513.257246, 9968.685353prox:		 16s:555911us (+00s:011702us) = -29.270730, 842.543752, 5.470917, 71952.729929, 467.213061, 9968.685353prox:		 16s:567613us (+00s:011702us) = -29.631297, 841.090127, 5.756356, 71828.591193, 491.589394, 9968.685353prox:		 16s:579315us (+00s:011702us) = -27.891377, 841.602860, 5.914933, 71872.378311, 505.131802, 9968.685353prox:		 16s:591018us (+00s:011703us) = -28.325417, 842.798797, 5.788072, 71974.510634, 494.297876, 9968.685353prox:		 16s:602720us (+00s:011702us) = -29.983476, 845.395501, 5.518490, 72196.267558, 471.275783, 9968.685353prox:		 16s:614421us (+00s:011701us) = -28.640714, 842.324387, 6.184515, 71933.996265, 528.153895, 9968.685353prox:		 16s:626120us (+00s:011699us) = -28.842476, 842.560931, 5.740498, 71954.197023, 490.235154, 9968.685353prox:		 16s:637822us (+00s:011702us) = -30.391627, 841.970231, 5.914933, 71903.751555, 505.131802, 9968.685353prox:		 16s:649523us (+00s:011701us) = -30.150960, 842.516001, 5.930791, 71950.360008, 506.486043, 9968.685353Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.422141Hz	average: rawrange = -28.895836	average: signalrateperspad = 839.494731, ambientrateperspad = 5.768249	average: totalsignalrate = 71692.345403, totalambientrate = 492.605075	average: integrationtime = 9968.685353	std-dev: rawrange = 0.958479	std-dev: signalrateperspad = 3.411366, ambientrateperspad = 0.243514	std-dev: totalsignalrate = 291.328652, totalambientrate = 20.795975	std-dev: integrationtime = 0.000000	rms: rawrange = 28.911728	rms: signalrateperspad = 839.501663, ambientrateperspad = 5.773387	rms: totalsignalrate = 71692.937322, totalambientrate = 493.043844	rms: integrationtime = 9968.685353OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.786626s) ++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_stats 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> Capturing 32 samples from:prox @ 60.00 HzOutput format = abstime : relativetime : sampleWaiting for capture to finish...prox:		 16s:286603us (+00s:000000us) = -28.497095, 831.595310, 5.772214, 71017.739540, 492.943635, 9968.685353prox:		 16s:298326us (+00s:011723us) = -29.014153, 838.313702, 5.788072, 71591.486207, 494.297876, 9968.685353prox:		 16s:310044us (+00s:011718us) = -27.696847, 833.795570, 5.930791, 71205.640445, 506.486043, 9968.685353prox:		 16s:321761us (+00s:011717us) = -29.681629, 834.399485, 5.613637, 71257.214447, 479.401227, 9968.685353prox:		 16s:333477us (+00s:011716us) = -28.627408, 835.496312, 5.201336, 71350.882766, 444.190968, 9968.685353prox:		 16s:345194us (+00s:011717us) = -27.915241, 833.451986, 5.692925, 71176.298562, 486.172431, 9968.685353prox:		 16s:356906us (+00s:011712us) = -26.620208, 834.766856, 5.534348, 71288.587691, 472.630024, 9968.685353prox:		 16s:368618us (+00s:011712us) = -29.128268, 834.650566, 6.105226, 71278.656592, 521.382691, 9968.685353prox:		 16s:380327us (+00s:011709us) = -29.861696, 837.433598, 5.994222, 71516.325845, 511.903006, 9968.685353prox:		 16s:392034us (+00s:011707us) = -27.570005, 837.763967, 5.375771, 71544.539194, 459.087616, 9968.685353prox:		 16s:403745us (+00s:011711us) = -27.826726, 838.303130, 5.645352, 71590.583380, 482.109709, 9968.685353prox:		 16s:415454us (+00s:011709us) = -27.698293, 838.087729, 5.788072, 71572.188276, 494.297876, 9968.685353prox:		 16s:427160us (+00s:011706us) = -28.945164, 839.495103, 5.740498, 71692.377143, 490.235154, 9968.685353prox:		 16s:438867us (+00s:011707us) = -29.864010, 839.522854, 6.105226, 71694.747065, 521.382691, 9968.685353prox:		 16s:450574us (+00s:011707us) = -27.428989, 839.846616, 5.312340, 71722.396147, 453.670653, 9968.685353prox:		 16s:462281us (+00s:011707us) = -29.730081, 840.726720, 5.772214, 71797.556509, 492.943635, 9968.685353prox:		 16s:473986us (+00s:011705us) = -28.898014, 841.605503, 5.740498, 71872.604017, 490.235154, 9968.685353prox:		 16s:485689us (+00s:011703us) = -28.314714, 840.437317, 5.946649, 71772.841615, 507.840283, 9968.685353prox:		 16s:497396us (+00s:011707us) = -29.127545, 841.914729, 5.581921, 71899.011712, 476.692746, 9968.685353prox:		 16s:509099us (+00s:011703us) = -29.751342, 842.156559, 5.566063, 71919.663884, 475.338505, 9968.685353prox:		 16s:520803us (+00s:011704us) = -29.366621, 843.130488, 6.247946, 72002.836837, 533.570858, 9968.685353prox:		 16s:532507us (+00s:011704us) = -29.265668, 842.317779, 5.899076, 71933.431998, 503.777561, 9968.685353prox:		 16s:544209us (+00s:011702us) = -30.708949, 841.816939, 6.010080, 71890.660561, 513.257246, 9968.685353prox:		 16s:555911us (+00s:011702us) = -29.270730, 842.543752, 5.470917, 71952.729929, 467.213061, 9968.685353prox:		 16s:567613us (+00s:011702us) = -29.631297, 841.090127, 5.756356, 71828.591193, 491.589394, 9968.685353prox:		 16s:579315us (+00s:011702us) = -27.891377, 841.602860, 5.914933, 71872.378311, 505.131802, 9968.685353prox:		 16s:591018us (+00s:011703us) = -28.325417, 842.798797, 5.788072, 71974.510634, 494.297876, 9968.685353prox:		 16s:602720us (+00s:011702us) = -29.983476, 845.395501, 5.518490, 72196.267558, 471.275783, 9968.685353prox:		 16s:614421us (+00s:011701us) = -28.640714, 842.324387, 6.184515, 71933.996265, 528.153895, 9968.685353prox:		 16s:626120us (+00s:011699us) = -28.842476, 842.560931, 5.740498, 71954.197023, 490.235154, 9968.685353prox:		 16s:637822us (+00s:011702us) = -30.391627, 841.970231, 5.914933, 71903.751555, 505.131802, 9968.685353prox:		 16s:649523us (+00s:011701us) = -30.150960, 842.516001, 5.930791, 71950.360008, 506.486043, 9968.685353Stats:prox:	# of samples captured: 32	# of bad samples (corrupted/lost): 0	calculated odr: 85.422141Hz	average: rawrange = -28.895836	average: signalrateperspad = 839.494731, ambientrateperspad = 5.768249	average: totalsignalrate = 71692.345403, totalambientrate = 492.605075	average: integrationtime = 9968.685353	std-dev: rawrange = 0.958479	std-dev: signalrateperspad = 3.411366, ambientrateperspad = 0.243514	std-dev: totalsignalrate = 291.328652, totalambientrate = 20.795975	std-dev: integrationtime = 0.000000	rms: rawrange = 28.911728	rms: signalrateperspad = 839.501663, ambientrateperspad = 5.773387	rms: totalsignalrate = 71692.937322, totalambientrate = 493.043844	rms: integrationtime = 9968.685353OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_stats 
REGEX ==> average:\s*(.*?)std-dev: 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> rawrange = -28.895836	average: signalrateperspad = 839.494731, ambientrateperspad = 5.768249	average: totalsignalrate = 71692.345403, totalambientrate = 492.605075	average: integrationtime = 9968.685353
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000819s) +++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_AVE 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> rawrange = -28.895836	average: signalrateperspad = 839.494731, ambientrateperspad = 5.768249	average: totalsignalrate = 71692.345403, totalambientrate = 492.605075	average: integrationtime = 9968.685353
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_stats 
REGEX ==> std-dev:\s*(.*?)rms: 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> rawrange = 0.958479	std-dev: signalrateperspad = 3.411366, ambientrateperspad = 0.243514	std-dev: totalsignalrate = 291.328652, totalambientrate = 20.795975	std-dev: integrationtime = 0.000000
+++++++++++++++ [8] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000811s) +++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_STD 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> rawrange = 0.958479	std-dev: signalrateperspad = 3.411366, ambientrateperspad = 0.243514	std-dev: totalsignalrate = 291.328652, totalambientrate = 20.795975	std-dev: integrationtime = 0.000000
++++++++++ [9] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_AVE 
REGEX ==> rawrange =\s(.*?)\s 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> -28.895836
++++++++++++++ [10] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000144s) ++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_RAW_DIST_AVE 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> -28.895836
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000005s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_TARGET_RAW_DIST_AVE_spec*] 
 
}

[2016-03-31 23:44:53.353]
JUDGE_SPEC =>  value is [-28.895836], spec is [Item0=-70 ; Item1=0 ; ], mode is [1]

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> -28.895836
+++++++++++++++ [12] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000527s) +++++++++++++++

[2016-03-31 23:44:53.353]
=========== END TEST PROX_CG_TARGET_RAW_DIST_AVE (TestResult : PASS ; Duration : 1.424035s) ===========

[2016-03-31 23:44:53.353]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_TARGET_RAW_DIST_AVE,,,-28.895836,-70,0,,)

[2016-03-31 23:44:53.353]
Item Name:PROX_CG_TARGET_RAW_DIST_AVE, [-70,0]

[2016-03-31 23:44:53.353]
=========================== START TEST PROX_CG_TARGET_RAW_DIST_STD (Item34) ===========================

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_STD 
REGEX ==> rawrange =\s(.*?)\s 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 0.958479
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000180s) +++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_RAW_DIST_STD 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 0.958479
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_TARGET_RAW_DIST_STD_spec*] 
 
}

[2016-03-31 23:44:53.353]
JUDGE_SPEC =>  value is [0.958479], spec is [Item0=0.01 ; Item1=3 ; ], mode is [1]

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 0.958479
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000541s) +++++++++++++++

[2016-03-31 23:44:53.353]
=========== END TEST PROX_CG_TARGET_RAW_DIST_STD (TestResult : PASS ; Duration : 0.003909s) ===========

[2016-03-31 23:44:53.353]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_TARGET_RAW_DIST_STD,,,0.958479,0.01,3,,)

[2016-03-31 23:44:53.353]
Item Name:PROX_CG_TARGET_RAW_DIST_STD, [0.01,3]

[2016-03-31 23:44:53.353]
============================== START TEST PROX_CG_TARGET_SIG_AVE (Item35) ==============================

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_AVE 
REGEX ==> average: signalrateperspad =\s(.*?), 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 839.494731
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000224s) +++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_SIG_AVE 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 839.494731
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_TARGET_SIG_AVE_spec*] 
 
}

[2016-03-31 23:44:53.353]
JUDGE_SPEC =>  value is [839.494731], spec is [Item0=500 ; Item1=1200 ; ], mode is [1]

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 839.494731
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000584s) +++++++++++++++

[2016-03-31 23:44:53.353]
============== END TEST PROX_CG_TARGET_SIG_AVE (TestResult : PASS ; Duration : 0.004932s) ==============

[2016-03-31 23:44:53.353]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_TARGET_SIG_AVE,,,839.494731,500,1200,,)

[2016-03-31 23:44:53.353]
Item Name:PROX_CG_TARGET_SIG_AVE, [500,1200]

[2016-03-31 23:44:53.353]
============================== START TEST PROX_CG_TARGET_SIG_STD (Item36) ==============================

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_STD 
REGEX ==> std-dev: signalrateperspad =\s(.*?), 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 3.411366
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000230s) +++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_SIG_STD 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 3.411366
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_TARGET_SIG_STD_spec*] 
 
}

[2016-03-31 23:44:53.353]
JUDGE_SPEC =>  value is [3.411366], spec is [Item0=0.01 ; Item1=15 ; ], mode is [1]

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 3.411366
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000596s) +++++++++++++++

[2016-03-31 23:44:53.353]
============== END TEST PROX_CG_TARGET_SIG_STD (TestResult : PASS ; Duration : 0.004775s) ==============

[2016-03-31 23:44:53.353]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_TARGET_SIG_STD,,,3.411366,0.01,15,,)

[2016-03-31 23:44:53.353]
Item Name:PROX_CG_TARGET_SIG_STD, [0.01,15]

[2016-03-31 23:44:53.353]
============================== START TEST PROX_CG_TARGET_AMB_AVE (Item37) ==============================

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_AVE 
REGEX ==> ambientrateperspad =\s(.*?)\s 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 5.768249
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000164s) +++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_AMB_AVE 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 5.768249
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_TARGET_AMB_AVE_spec*] 
 
}

[2016-03-31 23:44:53.353]
JUDGE_SPEC =>  value is [5.768249], spec is [Item0=3 ; Item1=9 ; ], mode is [1]

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 5.768249
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000522s) +++++++++++++++

[2016-03-31 23:44:53.353]
============== END TEST PROX_CG_TARGET_AMB_AVE (TestResult : PASS ; Duration : 0.003770s) ==============

[2016-03-31 23:44:53.353]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_TARGET_AMB_AVE,,,5.768249,3,9,,)

[2016-03-31 23:44:53.353]
Item Name:PROX_CG_TARGET_AMB_AVE, [3,9]

[2016-03-31 23:44:53.353]
============================== START TEST PROX_CG_TARGET_AMB_STD (Item38) ==============================

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Prox_With_Target_STD 
REGEX ==> ambientrateperspad =\s(.*?)\s 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 0.243514
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000165s) +++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> TARGET_AMB_STD 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 0.243514
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*PROX_CG_TARGET_AMB_STD_spec*] 
 
}

[2016-03-31 23:44:53.353]
JUDGE_SPEC =>  value is [0.243514], spec is [Item0=0.01 ; Item1=0.5 ; ], mode is [1]

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 0.243514
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000538s) +++++++++++++++

[2016-03-31 23:44:53.353]
============== END TEST PROX_CG_TARGET_AMB_STD (TestResult : PASS ; Duration : 0.003799s) ==============

[2016-03-31 23:44:53.353]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(PROX_CG_TARGET_AMB_STD,,,0.243514,0.01,0.5,,)

[2016-03-31 23:44:53.353]
Item Name:PROX_CG_TARGET_AMB_STD, [0.01,0.5]

[2016-03-31 23:44:53.353]
============================== START TEST CONVOY DEVICE ID CHECK (Item39) ==============================

[2016-03-31 23:44:53.353]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> gray card in 
TARGET ==> FIXTURE 
}

[2016-03-31 23:44:53.353]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:53.353]
Write to ---> FIXTURE , command[gray card in(STRING)]

[2016-03-31 23:44:53.353]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:gray card in,2,0;return value:0!

[2016-03-31 23:44:53.353]
PostTXToUI ===> 
{
Info ==> gray card in 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:53.353 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:44:53.353]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005289s) +++++++++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> gray card in 
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-03-31 23:44:53.353]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:gray card in
gray card in Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:53.353]
PostRXToUI ===> 
{
Info ==> gray card in
gray card in Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:53.353 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:44:53.353]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:44:53.353]
CATCH_VALUE => Catch OK : gray card in Pass

[2016-03-31 23:44:53.353]
READ_COMMAND => Catch string between gray card in and @_@ == gray card in Pass

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> gray card in Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.314209s) ++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -d 2 0x21 0x01 1 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:53.353]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:53.353]
Write to ---> MOBILE , command[i2c -d 2 0x21 0x01 1(STRING)]

[2016-03-31 23:44:53.353]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -d 2 0x21 0x01 1,2,0;return value:0!

[2016-03-31 23:44:53.353]
PostTXToUI ===> 
{
Info ==> i2c -d 2 0x21 0x01 1 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:53.353 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:53.353]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> gray card in Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004272s) +++++++++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -d 2 0x21 0x01 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:53.353]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -d 2 0x21 0x01 1
Reading 1 bytes from register offset 0x01 into 0x7A1FA518, buffer read:	
Data:  0xCD 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:53.353]
PostRXToUI ===> 
{
Info ==> i2c -d 2 0x21 0x01 1
Reading 1 bytes from register offset 0x01 into 0x7A1FA518, buffer read:	
Data:  0xCD 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:53.353 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:53.353]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:53.353]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x01 into 0x7A1FA518, buffer read:	Data:  0xCD

[2016-03-31 23:44:53.353]
READ_COMMAND => Catch string between i2c -d 2 0x21 0x01 1 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x01 into 0x7A1FA518, buffer read:	Data:  0xCD

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x01 into 0x7A1FA518, buffer read:	Data:  0xCD
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.027275s) ++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Convoy Device ID Check 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x01 into 0x7A1FA518, buffer read:	Data:  0xCD
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Convoy Device ID Check 
REGEX ==> Data:\s*(.*?)$ 
}

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 0xCD
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000135s) +++++++++++++++

[2016-03-31 23:44:53.353]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Convoy Device ID Check_spec*] 
 
}

[2016-03-31 23:44:53.353]
JUDGE_SPEC =>  value is [0xCD], spec is [Item0=0xCD ; ], mode is [5]

[2016-03-31 23:44:53.353]
RETURN_VALUE ===> 0xCD
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000497s) +++++++++++++++

[2016-03-31 23:44:53.353]
============== END TEST Convoy Device ID Check (TestResult : PASS ; Duration : 0.359311s) ==============

[2016-03-31 23:44:53.353]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Convoy Device ID Check,,,0xCD,0xCD,0xCD,,)

[2016-03-31 23:44:53.353]
Item Name:Convoy Device ID Check, <0xCD>

[2016-03-31 23:44:53.353]
============================== START TEST CONVOY EXTCAPACITANCE (Item40) ==============================

[2016-03-31 23:44:53.353]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> smokey --run ConvoyTest --test PowerOn 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:54.354]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:54.354]
Write to ---> MOBILE , command[smokey --run ConvoyTest --test PowerOn(STRING)]

[2016-03-31 23:44:54.354]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:smokey --run ConvoyTest --test PowerOn,2,0;return value:0!

[2016-03-31 23:44:54.354]
PostTXToUI ===> 
{
Info ==> smokey --run ConvoyTest --test PowerOn 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:54.354 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:54.354]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:54.354]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005751s) +++++++++++++++++++++

[2016-03-31 23:44:54.354]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> smokey --run ConvoyTest --test PowerOn 
PASS_RECEIVE ==> Item0=Passed ;  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:54.354]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:smokey --run ConvoyTest --test PowerOn
Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "PowerOn"
[31 23:44:54] .... 			pmuset --ldo 3 --off
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --off
Turning LDO Off
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x05 0xB
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x05 0xB
Set  bytes:	0x0B 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x06 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x06 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x07 0x2
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x07 0x2
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x08 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x08 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x09 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x09 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0A 0x33
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0A 0x33
Set  bytes:	0x33 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0B 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0B 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0C 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0C 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0D 0x64
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0D 0x64
Set  bytes:	0x64 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 0x
[31 23:44:54] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:54.354]
PostRXToUI ===> 
{
Info ==> smokey --run ConvoyTest --test PowerOn
Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "PowerOn"
[31 23:44:54] .... 			pmuset --ldo 3 --off
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --off
Turning LDO Off
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x05 0xB
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x05 0xB
Set  bytes:	0x0B 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x06 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x06 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x07 0x2
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x07 0x2
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x08 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x08 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x09 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x09 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0A 0x33
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0A 0x33
Set  bytes:	0x33 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0B 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0B 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0C 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0C 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0D 0x64
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0D 0x64
Set  bytes:	0x64 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 0x
[31 23:44:54] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:54.354 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:54.354]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:54.354]
CATCH_VALUE => Catch OK : Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "PowerOn"
[31 23:44:54] .... 			pmuset --ldo 3 --off
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --off
Turning LDO Off
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x05 0xB
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x05 0xB
Set  bytes:	0x0B 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x06 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x06 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x07 0x2
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x07 0x2
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x08 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x08 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x09 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x09 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0A 0x33
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0A 0x33
Set  bytes:	0x33 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0B 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0B 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0C 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0C 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0D 0x64
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0D 0x64
Set  bytes:	0x64 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 0x
[31 23:44:54] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

[2016-03-31 23:44:54.354]
READ_COMMAND => Catch string between smokey --run ConvoyTest --test PowerOn and [0006451C:3020213A] :-) == Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "PowerOn"
[31 23:44:54] .... 			pmuset --ldo 3 --off
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --off
Turning LDO Off
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x05 0xB
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x05 0xB
Set  bytes:	0x0B 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x06 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x06 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x07 0x2
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x07 0x2
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x08 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x08 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x09 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x09 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0A 0x33
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0A 0x33
Set  bytes:	0x33 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0B 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0B 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0C 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0C 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0D 0x64
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0D 0x64
Set  bytes:	0x64 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 0x
[31 23:44:54] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

[2016-03-31 23:44:54.354]
RETURN_VALUE ===> Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "PowerOn"
[31 23:44:54] .... 			pmuset --ldo 3 --off
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --off
Turning LDO Off
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x05 0xB
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x05 0xB
Set  bytes:	0x0B 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x06 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x06 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x07 0x2
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x07 0x2
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x08 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x08 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x09 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x09 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0A 0x33
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0A 0x33
Set  bytes:	0x33 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0B 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0B 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0C 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0C 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0D 0x64
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0D 0x64
Set  bytes:	0x64 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 0x
[31 23:44:54] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.776830s) ++++++++++++++

[2016-03-31 23:44:54.354]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> smokey --run ConvoyTest --test GetExtCapacitance;cbcolor 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:54.354]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:54.354]
Write to ---> MOBILE , command[smokey --run ConvoyTest --test GetExtCapacitance;cbcolor(STRING)]

[2016-03-31 23:44:54.354]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:smokey --run ConvoyTest --test GetExtCapacitance;cbcolor,2,0;return value:0!

[2016-03-31 23:44:54.354]
PostTXToUI ===> 
{
Info ==> smokey --run ConvoyTest --test GetExtCapacitance;cbcolor 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:54.354 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:54.354]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:54.354]
RETURN_VALUE ===> Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "PowerOn"
[31 23:44:54] .... 			pmuset --ldo 3 --off
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --off
Turning LDO Off
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x05 0xB
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x05 0xB
Set  bytes:	0x0B 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x06 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x06 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x07 0x2
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x07 0x2
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x08 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x08 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x09 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x09 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0A 0x33
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0A 0x33
Set  bytes:	0x33 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0B 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0B 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0C 0x9
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0C 0x9
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x0D 0x64
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x0D 0x64
Set  bytes:	0x64 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 0x
[31 23:44:54] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004366s) +++++++++++++++++++++

[2016-03-31 23:44:54.354]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> smokey --run ConvoyTest --test GetExtCapacitance;cbcolor 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:smokey --run ConvoyTest --test GetExtCapacitance;cbcolor
Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 0x
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "GetExtCapacitance"
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -m 2 0x21 0x07 0x018 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x07 0x018 0x0
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -m 2 0x21 0x09 0x020 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x09 0x020 0x0
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --reset
------------------------------------------------------------------------------
:-) audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Firmware loaded successfully
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff botspeaker
------------------------------------------------------------------------------
:-) audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff arc
------------------------------------------------------------------------------
:-) audio --turnoff arc
Turning-off power to arc...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff codec
------------------------------------------------------------------------------
:-) audio --turnoff codec
Turning-off power to codec...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audioparam --set --block topspeaker --param enable-mon --value true
------------------------------------------------------------------------------
:-) audioparam --set --block topspeaker --param enable-mon --value true
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0E 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0E 1
Reading 1 bytes from register offset 0x0E into 0x7A030B98, buffer read:	
Data:  0x02 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0F 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0F 1
Reading 1 bytes from register offset 0x0F into 0x7A051D18, buffer read:	
Data:  0x4D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x010 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x010 1
Reading 1 bytes from register offset 0x10 into 0x7A027B18, buffer read:	
Data:  0x1D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
Cmeasured=1.2292pF
[31 23:44:55] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

Setting Screen Color based on iPX Control Bits:
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:55.355]
PostRXToUI ===> 
{
Info ==> smokey --run ConvoyTest --test GetExtCapacitance;cbcolor
Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 0x
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "GetExtCapacitance"
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -m 2 0x21 0x07 0x018 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x07 0x018 0x0
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -m 2 0x21 0x09 0x020 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x09 0x020 0x0
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --reset
------------------------------------------------------------------------------
:-) audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Firmware loaded successfully
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff botspeaker
------------------------------------------------------------------------------
:-) audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff arc
------------------------------------------------------------------------------
:-) audio --turnoff arc
Turning-off power to arc...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff codec
------------------------------------------------------------------------------
:-) audio --turnoff codec
Turning-off power to codec...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audioparam --set --block topspeaker --param enable-mon --value true
------------------------------------------------------------------------------
:-) audioparam --set --block topspeaker --param enable-mon --value true
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0E 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0E 1
Reading 1 bytes from register offset 0x0E into 0x7A030B98, buffer read:	
Data:  0x02 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0F 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0F 1
Reading 1 bytes from register offset 0x0F into 0x7A051D18, buffer read:	
Data:  0x4D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x010 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x010 1
Reading 1 bytes from register offset 0x10 into 0x7A027B18, buffer read:	
Data:  0x1D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
Cmeasured=1.2292pF
[31 23:44:55] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

Setting Screen Color based on iPX Control Bits:
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:55.355]
CATCH_VALUE => Catch OK : Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 0x
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "GetExtCapacitance"
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -m 2 0x21 0x07 0x018 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x07 0x018 0x0
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -m 2 0x21 0x09 0x020 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x09 0x020 0x0
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --reset
------------------------------------------------------------------------------
:-) audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Firmware loaded successfully
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff botspeaker
------------------------------------------------------------------------------
:-) audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff arc
------------------------------------------------------------------------------
:-) audio --turnoff arc
Turning-off power to arc...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff codec
------------------------------------------------------------------------------
:-) audio --turnoff codec
Turning-off power to codec...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audioparam --set --block topspeaker --param enable-mon --value true
------------------------------------------------------------------------------
:-) audioparam --set --block topspeaker --param enable-mon --value true
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0E 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0E 1
Reading 1 bytes from register offset 0x0E into 0x7A030B98, buffer read:	
Data:  0x02 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0F 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0F 1
Reading 1 bytes from register offset 0x0F into 0x7A051D18, buffer read:	
Data:  0x4D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x010 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x010 1
Reading 1 bytes from register offset 0x10 into 0x7A027B18, buffer read:	
Data:  0x1D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
Cmeasured=1.2292pF
[31 23:44:55] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

Setting Screen Color based on iPX Control Bits:

[2016-03-31 23:44:55.355]
READ_COMMAND => Catch string between smokey --run ConvoyTest --test GetExtCapacitance;cbcolor and [0006451C:3020213A] :-) == Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 0x
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "GetExtCapacitance"
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -m 2 0x21 0x07 0x018 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x07 0x018 0x0
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -m 2 0x21 0x09 0x020 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x09 0x020 0x0
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --reset
------------------------------------------------------------------------------
:-) audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Firmware loaded successfully
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff botspeaker
------------------------------------------------------------------------------
:-) audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff arc
------------------------------------------------------------------------------
:-) audio --turnoff arc
Turning-off power to arc...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff codec
------------------------------------------------------------------------------
:-) audio --turnoff codec
Turning-off power to codec...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audioparam --set --block topspeaker --param enable-mon --value true
------------------------------------------------------------------------------
:-) audioparam --set --block topspeaker --param enable-mon --value true
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0E 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0E 1
Reading 1 bytes from register offset 0x0E into 0x7A030B98, buffer read:	
Data:  0x02 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0F 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0F 1
Reading 1 bytes from register offset 0x0F into 0x7A051D18, buffer read:	
Data:  0x4D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x010 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x010 1
Reading 1 bytes from register offset 0x10 into 0x7A027B18, buffer read:	
Data:  0x1D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
Cmeasured=1.2292pF
[31 23:44:55] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

Setting Screen Color based on iPX Control Bits:

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 0x
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "GetExtCapacitance"
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -m 2 0x21 0x07 0x018 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x07 0x018 0x0
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -m 2 0x21 0x09 0x020 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x09 0x020 0x0
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --reset
------------------------------------------------------------------------------
:-) audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Firmware loaded successfully
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff botspeaker
------------------------------------------------------------------------------
:-) audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff arc
------------------------------------------------------------------------------
:-) audio --turnoff arc
Turning-off power to arc...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff codec
------------------------------------------------------------------------------
:-) audio --turnoff codec
Turning-off power to codec...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audioparam --set --block topspeaker --param enable-mon --value true
------------------------------------------------------------------------------
:-) audioparam --set --block topspeaker --param enable-mon --value true
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0E 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0E 1
Reading 1 bytes from register offset 0x0E into 0x7A030B98, buffer read:	
Data:  0x02 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0F 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0F 1
Reading 1 bytes from register offset 0x0F into 0x7A051D18, buffer read:	
Data:  0x4D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x010 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x010 1
Reading 1 bytes from register offset 0x10 into 0x7A027B18, buffer read:	
Data:  0x1D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
Cmeasured=1.2292pF
[31 23:44:55] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

Setting Screen Color based on iPX Control Bits:
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.049961s) ++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Convoy_Ext 
}

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> Smokey 24C210af (commit 6648dab) 2016/03/28 17:42:45
D10 factory_d10_evt 24C210af (revision 6648dab) 2016/03/28 17:43:08

SrNm: undefined
MLB#: C7H6104003QH6TF41
CFG#: D10/EVT-DOE/2BU02/00126/*/*
ECID: 0006451C3020213A

Control File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.plist
Script File:    nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\D10\Main.lua
Log File:       nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\Smokey.log
Results File:   nandfs:\AppleInternal\Diags\Logs\Smokey\ConvoyTest\PDCA.plist
Signature File: undefined
Control Bit:    none

SequenceName:          ConvoyTest
SequenceVersion:       20151106
BehaviorOnFail:        StopAfterFailedAction
ResultsBehavior:       NoFile
ResultsActionBehavior: NoAction
ResultsAction:         undefined
LogBehavior:           ConsoleOnly
LogFileBuffering:      WriteThrough
BrickRequired:         None
LogCollectorControl:   None
ControlBitAccess:      Default

Sequence syntax and sanity check passed

Writing default results
Skipping control bit write
Skipping PDCA plist write

Initializing display
Continuing without charger
Device ready

Sequence execution...

Day/Time      Node
------------- ----
[31 23:44:54] N001 Repeating 1x
[31 23:44:54] .... 	[1] Periodic tasks
[31 23:44:54] N002 	[1] Repeating 0x
[31 23:44:54] N003 	[1] Repeating 0x
[31 23:44:54] N004 	[1] Repeating 0x
[31 23:44:54] N005 	[1] Repeating 0x
[31 23:44:54] N006 	[1] Repeating 0x
[31 23:44:54] N007 	[1] Repeating 0x
[31 23:44:54] N008 	[1] Repeating 0x
[31 23:44:54] N009 	[1] Repeating 0x
[31 23:44:54] N010 	[1] Repeating 0x
[31 23:44:54] N011 	[1] Repeating 1x
[31 23:44:54] .... 		[1] Action "GetExtCapacitance"
[31 23:44:54] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -v 2 0x21 0x00 0x1
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x1
Set  bytes:	0x01 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:54] .... 			Exit code = 0x00000000
[31 23:44:54] .... 			i2c -m 2 0x21 0x07 0x018 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x07 0x018 0x0
Set  bytes:	0x02 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -m 2 0x21 0x09 0x020 0x0
------------------------------------------------------------------------------
:-) i2c -m 2 0x21 0x09 0x020 0x0
Set  bytes:	0x09 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			pmuset --ldo 3 --on
------------------------------------------------------------------------------
:-) pmuset --ldo 3 --on
Turning LDO On
Done
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -v 2 0x21 0x00 0x0
------------------------------------------------------------------------------
:-) i2c -v 2 0x21 0x00 0x0
Set  bytes:	0x00 	Writing 1 bytes
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			wait 10
------------------------------------------------------------------------------
:-) wait 10
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --reset
------------------------------------------------------------------------------
:-) audio --reset
Resetting arc...
Speaker already powered off.
Resetting audmux...
Resetting baseband...
Resetting bluetooth...
Resetting botspeaker...
Speaker already powered off.
Resetting codec...
Resetting fpga...
Firmware loaded successfully
Resetting mikeybus...
Resetting socmca...
Resetting topspeaker...
Speaker already powered off.
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff botspeaker
------------------------------------------------------------------------------
:-) audio --turnoff botspeaker
Turning-off power to botspeaker...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff arc
------------------------------------------------------------------------------
:-) audio --turnoff arc
Turning-off power to arc...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audio --turnoff codec
------------------------------------------------------------------------------
:-) audio --turnoff codec
Turning-off power to codec...
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			audioparam --set --block topspeaker --param enable-mon --value true
------------------------------------------------------------------------------
:-) audioparam --set --block topspeaker --param enable-mon --value true
OK
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0E 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0E 1
Reading 1 bytes from register offset 0x0E into 0x7A030B98, buffer read:	
Data:  0x02 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x0F 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x0F 1
Reading 1 bytes from register offset 0x0F into 0x7A051D18, buffer read:	
Data:  0x4D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
[31 23:44:55] .... 			i2c -d 2 0x21 0x010 1
------------------------------------------------------------------------------
:-) i2c -d 2 0x21 0x010 1
Reading 1 bytes from register offset 0x10 into 0x7A027B18, buffer read:	
Data:  0x1D 
------------------------------------------------------------------------------
[31 23:44:55] .... 			Exit code = 0x00000000
Cmeasured=1.2292pF
[31 23:44:55] N001 Sequence done

Passed

Writing final results
Skipping control bit write
Skipping PDCA plist write

Setting Screen Color based on iPX Control Bits:
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Convoy_Ext 
REGEX ==> Cmeasured=([0-9\.]{1,10})pF 
}

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> 1.2292
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001230s) +++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Convoy ExtCapacitance_spec*] 
 
}

[2016-03-31 23:44:55.355]
JUDGE_SPEC =>  value is [1.2292], spec is [Item0=0.5 ; Item1=2 ; ], mode is [1]

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> 1.2292
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000530s) +++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*Convoy ExtCapacitance_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> 1.2292
+++++++++++ [8] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) +++++++++++

[2016-03-31 23:44:55.355]
============== END TEST Convoy ExtCapacitance (TestResult : PASS ; Duration : 1.852109s) ==============

[2016-03-31 23:44:55.355]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Convoy ExtCapacitance,,,1.2292,0.5,2,pF,)

[2016-03-31 23:44:55.355]
Item Name:Convoy ExtCapacitance, [0.5,2]

[2016-03-31 23:44:55.355]
=============================== START TEST MUON FAULT REGISTER (Item41) ===============================

[2016-03-31 23:44:55.355]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -h 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:55.355]
Write to ---> MOBILE , command[bl -h(STRING)]

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -h,2,0;return value:0!

[2016-03-31 23:44:55.355]
PostTXToUI ===> 
{
Info ==> bl -h 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005844s) +++++++++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -h 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -h
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:55.355]
PostRXToUI ===> 
{
Info ==> bl -h
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:55.355]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:44:55.355]
READ_COMMAND => Catch string between bl -h and [0006451C:3020213A] :-) == OK

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.017233s) ++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -d 0 0x62 0x17 1 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:55.355]
Write to ---> MOBILE , command[i2c -d 0 0x62 0x17 1(STRING)]

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -d 0 0x62 0x17 1,2,0;return value:0!

[2016-03-31 23:44:55.355]
PostTXToUI ===> 
{
Info ==> i2c -d 0 0x62 0x17 1 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004540s) +++++++++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -d 0 0x62 0x17 1 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -d 0 0x62 0x17 1
Reading 1 bytes from register offset 0x17 into 0x7A03AB98, buffer read:	
Data:  0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:55.355]
PostRXToUI ===> 
{
Info ==> i2c -d 0 0x62 0x17 1
Reading 1 bytes from register offset 0x17 into 0x7A03AB98, buffer read:	
Data:  0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:55.355]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x17 into 0x7A03AB98, buffer read:	Data:  0x00

[2016-03-31 23:44:55.355]
READ_COMMAND => Catch string between i2c -d 0 0x62 0x17 1 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x17 into 0x7A03AB98, buffer read:	Data:  0x00

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x17 into 0x7A03AB98, buffer read:	Data:  0x00
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.027735s) ++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Fault_Register 
}

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x17 into 0x7A03AB98, buffer read:	Data:  0x00
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -m 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:55.355]
Write to ---> MOBILE , command[bl -m(STRING)]

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -m,2,0;return value:0!

[2016-03-31 23:44:55.355]
PostTXToUI ===> 
{
Info ==> bl -m 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x17 into 0x7A03AB98, buffer read:	Data:  0x00
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004158s) +++++++++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -m 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -m
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:55.355]
PostRXToUI ===> 
{
Info ==> bl -m
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:55.355]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:44:55.355]
READ_COMMAND => Catch string between bl -m and [0006451C:3020213A] :-) == OK

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> OK
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.008550s) ++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Fault_Register 
REGEX ==> Data: *?(0x.{2}) 
}

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> 0x00
+++++++++++++++ [8] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000152s) +++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Muon Fault Register_spec*] 
 
}

[2016-03-31 23:44:55.355]
JUDGE_SPEC =>  value is [0x00], spec is [Item0=0x00 ; ], mode is [5]

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> 0x00
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000512s) +++++++++++++++

[2016-03-31 23:44:55.355]
=============== END TEST Muon Fault Register (TestResult : PASS ; Duration : 0.078450s) ===============

[2016-03-31 23:44:55.355]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Muon Fault Register,,,0x00,0x00,0x00,,)

[2016-03-31 23:44:55.355]
Item Name:Muon Fault Register, <0x00>

[2016-03-31 23:44:55.355]
=============================== START TEST LOAD TOUCH FIRMWARE (Item42) ===============================

[2016-03-31 23:44:55.355]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --sel grape 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:55.355]
Write to ---> MOBILE , command[touch --sel grape(STRING)]

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --sel grape,2,0;return value:0!

[2016-03-31 23:44:55.355]
PostTXToUI ===> 
{
Info ==> touch --sel grape 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:55.355]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005521s) +++++++++++++++++++++

[2016-03-31 23:44:55.355]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --sel grape 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:55.355]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --sel grape
Setting active Touch controller to "grape"
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:55.355]
PostRXToUI ===> 
{
Info ==> touch --sel grape
Setting active Touch controller to "grape"
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:55.355 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:55.355]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:56.356]
CATCH_VALUE => Catch OK : Setting active Touch controller to "grape"
OK

[2016-03-31 23:44:56.356]
READ_COMMAND => Catch string between touch --sel grape and [0006451C:3020213A] :-) == Setting active Touch controller to "grape"
OK

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> Setting active Touch controller to "grape"
OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.021028s) ++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --off 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:56.356]
Write to ---> MOBILE , command[touch --off(STRING)]

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --off,2,0;return value:0!

[2016-03-31 23:44:56.356]
PostTXToUI ===> 
{
Info ==> touch --off 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> Setting active Touch controller to "grape"
OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004659s) +++++++++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --off 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --off
Touch is already off.
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:56.356]
PostRXToUI ===> 
{
Info ==> touch --off
Touch is already off.
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:56.356]
CATCH_VALUE => Catch OK : Touch is already off.
OK

[2016-03-31 23:44:56.356]
READ_COMMAND => Catch string between touch --off and [0006451C:3020213A] :-) == Touch is already off.
OK

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> Touch is already off.
OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.009389s) ++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --on 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:56.356]
Write to ---> MOBILE , command[touch --on(STRING)]

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --on,2,0;return value:0!

[2016-03-31 23:44:56.356]
PostTXToUI ===> 
{
Info ==> touch --on 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> Touch is already off.
OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004365s) +++++++++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --on 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --on
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:44:56.356]
PostRXToUI ===> 
{
Info ==> touch --on
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:56.356]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:44:56.356]
READ_COMMAND => Catch string between touch --on and [0006451C:3020213A] :-) == OK

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.041618s) ++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --load_firmware 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:56.356]
Write to ---> MOBILE , command[touch --load_firmware(STRING)]

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --load_firmware,2,0;return value:0!

[2016-03-31 23:44:56.356]
PostTXToUI ===> 
{
Info ==> touch --load_firmware 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004293s) +++++++++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --load_firmware 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --load_firmware
Reading in firmware file: D10-GrapeFW.mihu
Setting up calibration...
Skipping Grape calibration blob loading...
Calibration Type: Orb Gap
	Loading calibration blob...
	Done.
Calibration Type: Orb Accel
WARNING: Could not read SystemConfig entry for FDAC
Skipping calibration blob loading...
Calibration Type: Orb Force
WARNING: Could not read SystemConfig entry for OFCl
Skipping calibration blob loading...
Calibration Type: Shape Inertial
WARNING: Could not read SystemConfig entry for SDAC
Skipping calibration blob loading...
Done.
Transferring firmware...Processing chunk	0	1	Done.
Performing calibration...
Done.
Booting firmware...
Done.
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:44:56.356]
PostRXToUI ===> 
{
Info ==> touch --load_firmware
Reading in firmware file: D10-GrapeFW.mihu
Setting up calibration...
Skipping Grape calibration blob loading...
Calibration Type: Orb Gap
	Loading calibration blob...
	Done.
Calibration Type: Orb Accel
WARNING: Could not read SystemConfig entry for FDAC
Skipping calibration blob loading...
Calibration Type: Orb Force
WARNING: Could not read SystemConfig entry for OFCl
Skipping calibration blob loading...
Calibration Type: Shape Inertial
WARNING: Could not read SystemConfig entry for SDAC
Skipping calibration blob loading...
Done.
Transferring firmware...Processing chunk	0	1	Done.
Performing calibration...
Done.
Booting firmware...
Done.
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:56.356]
CATCH_VALUE => Catch OK : Reading in firmware file: D10-GrapeFW.mihu
Setting up calibration...
Skipping Grape calibration blob loading...
Calibration Type: Orb Gap
	Loading calibration blob...
	Done.
Calibration Type: Orb Accel
WARNING: Could not read SystemConfig entry for FDAC
Skipping calibration blob loading...
Calibration Type: Orb Force
WARNING: Could not read SystemConfig entry for OFCl
Skipping calibration blob loading...
Calibration Type: Shape Inertial
WARNING: Could not read SystemConfig entry for SDAC
Skipping calibration blob loading...
Done.
Transferring firmware...Processing chunk	0	1	Done.
Performing calibration...
Done.
Booting firmware...
Done.
OK

[2016-03-31 23:44:56.356]
READ_COMMAND => Catch string between touch --load_firmware and [0006451C:3020213A] :-) == Reading in firmware file: D10-GrapeFW.mihu
Setting up calibration...
Skipping Grape calibration blob loading...
Calibration Type: Orb Gap
	Loading calibration blob...
	Done.
Calibration Type: Orb Accel
WARNING: Could not read SystemConfig entry for FDAC
Skipping calibration blob loading...
Calibration Type: Orb Force
WARNING: Could not read SystemConfig entry for OFCl
Skipping calibration blob loading...
Calibration Type: Shape Inertial
WARNING: Could not read SystemConfig entry for SDAC
Skipping calibration blob loading...
Done.
Transferring firmware...Processing chunk	0	1	Done.
Performing calibration...
Done.
Booting firmware...
Done.
OK

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> Reading in firmware file: D10-GrapeFW.mihu
Setting up calibration...
Skipping Grape calibration blob loading...
Calibration Type: Orb Gap
	Loading calibration blob...
	Done.
Calibration Type: Orb Accel
WARNING: Could not read SystemConfig entry for FDAC
Skipping calibration blob loading...
Calibration Type: Orb Force
WARNING: Could not read SystemConfig entry for OFCl
Skipping calibration blob loading...
Calibration Type: Shape Inertial
WARNING: Could not read SystemConfig entry for SDAC
Skipping calibration blob loading...
Done.
Transferring firmware...Processing chunk	0	1	Done.
Performing calibration...
Done.
Booting firmware...
Done.
OK
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.380184s) ++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Load Touch Firmware_spec*] 
 
}

[2016-03-31 23:44:56.356]
JUDGE_SPEC =>  value is [Reading in firmware file: D10-GrapeFW.mihu
Setting up calibration...
Skipping Grape calibration blob loading...
Calibration Type: Orb Gap
	Loading calibration blob...
	Done.
Calibration Type: Orb Accel
WARNING: Could not read SystemConfig entry for FDAC
Skipping calibration blob loading...
Calibration Type: Orb Force
WARNING: Could not read SystemConfig entry for OFCl
Skipping calibration blob loading...
Calibration Type: Shape Inertial
WARNING: Could not read SystemConfig entry for SDAC
Skipping calibration blob loading...
Done.
Transferring firmware...Processing chunk	0	1	Done.
Performing calibration...
Done.
Booting firmware...
Done.
OK], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> Reading in firmware file: D10-GrapeFW.mihu
Setting up calibration...
Skipping Grape calibration blob loading...
Calibration Type: Orb Gap
	Loading calibration blob...
	Done.
Calibration Type: Orb Accel
WARNING: Could not read SystemConfig entry for FDAC
Skipping calibration blob loading...
Calibration Type: Orb Force
WARNING: Could not read SystemConfig entry for OFCl
Skipping calibration blob loading...
Calibration Type: Shape Inertial
WARNING: Could not read SystemConfig entry for SDAC
Skipping calibration blob loading...
Done.
Transferring firmware...Processing chunk	0	1	Done.
Performing calibration...
Done.
Booting firmware...
Done.
OK
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000669s) +++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> PASS
++++ [10] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) ++++

[2016-03-31 23:44:56.356]
=============== END TEST Load Touch Firmware (TestResult : PASS ; Duration : 0.482943s) ===============

[2016-03-31 23:44:56.356]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Load Touch Firmware,,,PASS,NA,NA,,)

[2016-03-31 23:44:56.356]
Item Name:Load Touch Firmware, {NA}

[2016-03-31 23:44:56.356]
================================= START TEST ORB VALUE CHECK (Item43) =================================

[2016-03-31 23:44:56.356]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test orb --options="--conn" --run 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:56.356]
Write to ---> MOBILE , command[touch --test orb --options="--conn" --run(STRING)]

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test orb --options="--conn" --run,2,0;return value:0!

[2016-03-31 23:44:56.356]
PostTXToUI ===> 
{
Info ==> touch --test orb --options="--conn" --run 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005792s) +++++++++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test orb --options="--conn" --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==>  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 30 
END ==> :-) 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test orb --options="--conn" --run
Mamba register 0 has value 0x81B0 

OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-03-31 23:44:56.356]
PostRXToUI ===> 
{
Info ==> touch --test orb --options="--conn" --run
Mamba register 0 has value 0x81B0 

OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:56.356]
CATCH_VALUE => Catch OK : Mamba register 0 has value 0x81B0 OK

[2016-03-31 23:44:56.356]
READ_COMMAND => Catch string between touch --test orb --options="--conn" --run and [0006451C:3020213A] :-) == Mamba register 0 has value 0x81B0 OK

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> Mamba register 0 has value 0x81B0 OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.112936s) ++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ORB_VALUE 
}

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> Mamba register 0 has value 0x81B0 OK
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> ORB_VALUE 
REGEX ==> Mamba register 0 has value (0x.*).*OK 
}

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> 0x81B0
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000140s) +++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Orb Value Check_spec*] 
 
}

[2016-03-31 23:44:56.356]
JUDGE_SPEC =>  value is [0x81B0], spec is [Item0=0x81B0 ; ], mode is [5]

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> 0x81B0
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000505s) +++++++++++++++

[2016-03-31 23:44:56.356]
================= END TEST Orb Value Check (TestResult : PASS ; Duration : 0.124909s) =================

[2016-03-31 23:44:56.356]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Orb Value Check,,,0x81B0,0x81B0,0x81B0,,)

[2016-03-31 23:44:56.356]
Item Name:Orb Value Check, <0x81B0>

[2016-03-31 23:44:56.356]
================================= START TEST CSIG_ROW_AVG_MED (Item44) =================================

[2016-03-31 23:44:56.356]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> touch --test csig_single_stim --run 
TARGET ==> MOBILE 
}

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:44:56.356]
Write to ---> MOBILE , command[touch --test csig_single_stim --run(STRING)]

[2016-03-31 23:44:56.356]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:touch --test csig_single_stim --run,2,0;return value:0!

[2016-03-31 23:44:56.356]
PostTXToUI ===> 
{
Info ==> touch --test csig_single_stim --run 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:56.356 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:44:56.356]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:44:56.356]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004656s) +++++++++++++++++++++

[2016-03-31 23:44:56.356]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> touch --test csig_single_stim --run 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 20 
END ==> :-) 
}

[2016-03-31 23:44:59.359]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:touch --test csig_single_stim --run
Getting inphase image
Getting quad image
Getting inphase image again 

In Phase Ref frame:

	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-482
	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485
	-438	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480
	-447	-448	-445	-443	-445	-452	-424	-443	-439	-429	-453	-461
	-435	-434	-433	-429	-432	-440	-430	-442	-437	-427	-455	-476
	-440	-451	-450	-441	-440	-449	-438	-454	-443	-432	-462	-478
	-450	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500
	-436	-440	-438	-433	-439	-450	-445	-456	-448	-440	-460	-474
	-440	-446	-446	-442	-445	-458	-428	-446	-440	-428	-454	-467
	-444	-452	-451	-447	-447	-457	-451	-466	-446	-434	-462	-475
	-446	-449	-444	-442	-444	-451	-445	-463	-447	-438	-465	-486
	-441	-447	-451	-447	-446	-454	-431	-451	-444	-433	-461	-475
	-487	-488	-486	-486	-486	-496	-452	-469	-462	-453	-480	-510
	-451	-459	-449	-447	-448	-455	-427	-446	-441	-431	-456	-464
	-463	-474	-468	-459	-460	-468	-439	-459	-452	-443	-468	-475
	-468	-478	-475	-469	-464	-471	-442	-462	-457	-447	-471	-482
	-443	-451	-448	-448	-450	-456	-427	-450	-443	-429	-456	-468
	-449	-453	-448	-444	-447	-453	-425	-448	-442	-428	-457	-472
	-457	-466	-463	-460	-463	-470	-464	-486	-479	-470	-496	-511
	-440	-451	-454	-443	-439	-447	-424	-446	-436	-424	-453	-469
	-442	-453	-451	-449	-451	-458	-451	-470	-459	-452	-484	-490
	-434	-444	-443	-441	-442	-450	-443	-461	-448	-436	-470	-481
	-439	-446	-449	-440	-440	-457	-426	-443	-441	-434	-459	-472
	-432	-432	-431	-426	-430	-440	-413	-433	-428	-421	-443	-460


In Phase frame:

	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-481
	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485
	-437	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480
	-447	-447	-445	-443	-445	-452	-424	-443	-438	-429	-453	-461
	-435	-434	-433	-430	-432	-440	-430	-442	-437	-427	-455	-476
	-440	-450	-450	-442	-441	-449	-438	-454	-443	-432	-462	-478
	-451	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500
	-436	-440	-438	-434	-440	-451	-445	-456	-448	-440	-460	-474
	-440	-446	-446	-442	-445	-458	-428	-446	-440	-427	-454	-467
	-444	-452	-451	-447	-447	-457	-450	-466	-446	-434	-462	-475
	-446	-448	-443	-441	-443	-451	-444	-463	-447	-438	-465	-485
	-441	-446	-451	-447	-446	-454	-431	-450	-444	-433	-461	-474
	-487	-488	-486	-485	-486	-496	-452	-468	-462	-453	-480	-510
	-451	-458	-449	-447	-448	-455	-427	-446	-441	-430	-456	-464
	-463	-473	-467	-459	-459	-468	-438	-458	-452	-442	-468	-474
	-468	-477	-475	-468	-463	-470	-442	-461	-456	-446	-471	-481
	-442	-449	-447	-447	-449	-455	-426	-449	-442	-428	-455	-467
	-448	-452	-447	-443	-446	-452	-424	-447	-441	-427	-456	-471
	-456	-465	-462	-460	-462	-469	-463	-485	-478	-469	-495	-510
	-439	-450	-453	-442	-438	-446	-423	-445	-435	-423	-452	-467
	-442	-453	-450	-449	-451	-458	-452	-470	-459	-452	-483	-490
	-434	-444	-443	-440	-442	-449	-443	-460	-448	-436	-470	-481
	-439	-446	-449	-440	-440	-457	-426	-443	-440	-434	-459	-471
	-432	-432	-431	-426	-430	-440	-413	-433	-428	-420	-443	-460


Quad Image frame:

	-624	-634	-637	-639	-640	-643	-644	-653	-641	-633	-642	-654
	-618	-624	-627	-634	-637	-637	-639	-650	-642	-634	-642	-651
	-639	-645	-650	-657	-661	-665	-662	-666	-662	-655	-662	-673
	-604	-605	-606	-614	-616	-617	-603	-610	-607	-601	-607	-615
	-696	-699	-701	-708	-711	-714	-712	-716	-713	-704	-714	-729
	-630	-640	-641	-644	-645	-648	-646	-653	-645	-637	-647	-660
	-584	-593	-594	-601	-603	-605	-608	-615	-613	-609	-614	-622
	-650	-656	-657	-662	-668	-672	-673	-676	-671	-665	-670	-680
	-639	-646	-648	-654	-657	-662	-648	-657	-653	-644	-652	-663
	-614	-622	-624	-630	-632	-635	-639	-644	-630	-622	-631	-641
	-604	-609	-609	-616	-619	-621	-625	-633	-621	-615	-622	-639
	-625	-632	-637	-642	-643	-645	-634	-644	-640	-632	-641	-652
	-621	-623	-623	-632	-632	-634	-611	-617	-614	-608	-614	-639
	-596	-602	-597	-604	-607	-608	-594	-602	-599	-592	-599	-607
	-598	-607	-604	-605	-607	-609	-594	-604	-600	-594	-600	-607
	-597	-605	-605	-609	-605	-606	-592	-600	-598	-592	-597	-607
	-619	-627	-628	-637	-640	-641	-625	-636	-631	-622	-630	-639
	-615	-621	-620	-627	-631	-631	-617	-627	-624	-614	-623	-634
	-587	-594	-593	-601	-603	-604	-608	-617	-614	-609	-614	-629
	-631	-641	-645	-646	-645	-647	-636	-647	-640	-632	-642	-653
	-588	-597	-597	-604	-607	-608	-612	-619	-612	-607	-619	-626
	-590	-599	-600	-608	-610	-611	-615	-621	-612	-604	-617	-628
	-652	-660	-664	-667	-670	-676	-661	-669	-667	-661	-668	-679
	-658	-663	-664	-669	-673	-677	-663	-673	-670	-663	-670	-682


Mag Image:
764.682, 778.626, 782.230, 778.682, 778.932, 786.548, 783.929, 802.225, 782.039, 768.625, 791.538, 811.835, 
759.794, 766.420, 768.865, 774.010, 777.041, 780.493, 778.111, 800.951, 788.624, 775.735, 797.428, 811.804, 
774.138, 781.348, 788.865, 792.959, 798.514, 808.594, 797.107, 807.150, 801.027, 790.182, 810.720, 826.637, 
751.415, 752.219, 751.838, 757.129, 759.921, 764.848, 737.146, 753.889, 748.527, 738.405, 757.402, 768.600, 
820.756, 822.773, 823.947, 828.350, 831.952, 838.687, 831.771, 841.439, 836.264, 823.374, 846.652, 870.641, 
768.439, 782.368, 783.186, 781.088, 781.348, 788.355, 780.487, 795.314, 782.479, 769.670, 795.017, 814.913, 
737.873, 751.112, 751.902, 755.622, 758.425, 764.884, 764.220, 780.144, 775.495, 767.443, 786.803, 798.050, 
782.685, 789.896, 789.615, 791.580, 799.889, 809.311, 806.817, 815.421, 806.811, 797.386, 812.711, 828.900, 
775.835, 785.004, 786.651, 789.354, 793.520, 804.989, 776.587, 794.081, 787.406, 772.699, 794.493, 810.961, 
757.714, 768.887, 769.920, 772.469, 774.101, 782.351, 781.550, 794.916, 771.891, 758.445, 782.051, 797.813, 
750.820, 756.032, 753.080, 757.586, 761.189, 767.490, 766.655, 784.256, 765.147, 755.029, 776.600, 802.213, 
764.922, 773.524, 780.493, 782.287, 782.537, 788.759, 766.627, 785.643, 778.932, 766.102, 789.558, 806.089, 
789.183, 791.374, 790.142, 796.648, 797.257, 804.967, 760.016, 774.411, 768.400, 758.203, 779.356, 817.570, 
747.406, 756.417, 747.000, 751.415, 754.422, 759.400, 731.549, 749.212, 743.829, 731.685, 752.819, 764.032, 
756.288, 769.531, 763.482, 759.411, 761.005, 768.052, 738.024, 758.010, 751.201, 740.405, 760.936, 770.146, 
758.573, 770.424, 769.187, 768.052, 761.835, 766.900, 738.801, 756.651, 752.023, 741.201, 760.427, 774.474, 
760.608, 771.187, 770.839, 778.188, 781.793, 786.069, 756.373, 778.522, 770.405, 755.028, 777.126, 791.460, 
760.873, 768.078, 764.335, 767.709, 772.707, 776.186, 748.642, 770.024, 764.105, 747.880, 772.052, 789.808, 
743.306, 754.361, 751.726, 756.836, 759.640, 764.707, 764.220, 784.801, 778.125, 768.662, 788.683, 809.778, 
768.688, 783.186, 788.183, 782.738, 779.659, 785.827, 763.822, 785.260, 773.837, 760.495, 785.154, 802.806, 
735.600, 749.411, 747.602, 752.606, 756.207, 761.201, 760.820, 777.213, 765.000, 756.804, 785.143, 794.969, 
732.431, 745.611, 745.821, 750.509, 753.302, 758.236, 757.940, 772.813, 758.451, 744.924, 775.621, 791.040, 
786.018, 796.565, 801.559, 799.055, 801.560, 815.981, 786.382, 802.377, 799.055, 790.744, 810.496, 826.366, 
787.139, 791.323, 791.616, 793.118, 798.641, 807.421, 781.113, 800.261, 795.037, 784.836, 803.211, 822.632, 

Col Avgs:
763.966, 773.153, 773.420, 775.725, 778.142, 785.011, 769.113, 786.041, 776.838, 765.165, 787.167, 804.314, 
Row Avgs:
784.158, 781.606, 798.103, 753.445, 834.717, 785.222, 765.998, 802.585, 789.298, 776.009, 766.341, 780.456, 785.627, 749.099, 758.041, 759.879, 773.133, 766.867, 768.737, 779.971, 761.881, 757.225, 801.346, 796.362, 
Row Avg median = 777.990
Col Avg median = 776.281
Col Diffs Percent Median:
1.586, 0.402, 0.368, 0.071, 0.239, 1.124, 0.923, 1.257, 0.071, 1.431, 1.402, 3.611, 
Row Diffs Percent Median:
0.792, 0.464, 2.585, 3.154, 7.291, 0.929, 1.541, 3.161, 1.453, 0.254, 1.497, 0.316, 0.981, 3.713, 2.564, 2.327, 0.624, 1.429, 1.189, 0.254, 2.070, 2.669, 3.002, 2.361, 
Applying Csig Median limits: [400, 1200]
Median failures: None
Applying Csig Col single stim limits: [0, 20]
Column failures:  None
Applying Csig Row single stim limits: [0, 25]
Row failures:  None

PASS
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:20.000000);return value:0!

[2016-03-31 23:44:59.359]
PostRXToUI ===> 
{
Info ==> touch --test csig_single_stim --run
Getting inphase image
Getting quad image
Getting inphase image again 

In Phase Ref frame:

	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-482
	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485
	-438	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480
	-447	-448	-445	-443	-445	-452	-424	-443	-439	-429	-453	-461
	-435	-434	-433	-429	-432	-440	-430	-442	-437	-427	-455	-476
	-440	-451	-450	-441	-440	-449	-438	-454	-443	-432	-462	-478
	-450	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500
	-436	-440	-438	-433	-439	-450	-445	-456	-448	-440	-460	-474
	-440	-446	-446	-442	-445	-458	-428	-446	-440	-428	-454	-467
	-444	-452	-451	-447	-447	-457	-451	-466	-446	-434	-462	-475
	-446	-449	-444	-442	-444	-451	-445	-463	-447	-438	-465	-486
	-441	-447	-451	-447	-446	-454	-431	-451	-444	-433	-461	-475
	-487	-488	-486	-486	-486	-496	-452	-469	-462	-453	-480	-510
	-451	-459	-449	-447	-448	-455	-427	-446	-441	-431	-456	-464
	-463	-474	-468	-459	-460	-468	-439	-459	-452	-443	-468	-475
	-468	-478	-475	-469	-464	-471	-442	-462	-457	-447	-471	-482
	-443	-451	-448	-448	-450	-456	-427	-450	-443	-429	-456	-468
	-449	-453	-448	-444	-447	-453	-425	-448	-442	-428	-457	-472
	-457	-466	-463	-460	-463	-470	-464	-486	-479	-470	-496	-511
	-440	-451	-454	-443	-439	-447	-424	-446	-436	-424	-453	-469
	-442	-453	-451	-449	-451	-458	-451	-470	-459	-452	-484	-490
	-434	-444	-443	-441	-442	-450	-443	-461	-448	-436	-470	-481
	-439	-446	-449	-440	-440	-457	-426	-443	-441	-434	-459	-472
	-432	-432	-431	-426	-430	-440	-413	-433	-428	-421	-443	-460


In Phase frame:

	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-481
	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485
	-437	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480
	-447	-447	-445	-443	-445	-452	-424	-443	-438	-429	-453	-461
	-435	-434	-433	-430	-432	-440	-430	-442	-437	-427	-455	-476
	-440	-450	-450	-442	-441	-449	-438	-454	-443	-432	-462	-478
	-451	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500
	-436	-440	-438	-434	-440	-451	-445	-456	-448	-440	-460	-474
	-440	-446	-446	-442	-445	-458	-428	-446	-440	-427	-454	-467
	-444	-452	-451	-447	-447	-457	-450	-466	-446	-434	-462	-475
	-446	-448	-443	-441	-443	-451	-444	-463	-447	-438	-465	-485
	-441	-446	-451	-447	-446	-454	-431	-450	-444	-433	-461	-474
	-487	-488	-486	-485	-486	-496	-452	-468	-462	-453	-480	-510
	-451	-458	-449	-447	-448	-455	-427	-446	-441	-430	-456	-464
	-463	-473	-467	-459	-459	-468	-438	-458	-452	-442	-468	-474
	-468	-477	-475	-468	-463	-470	-442	-461	-456	-446	-471	-481
	-442	-449	-447	-447	-449	-455	-426	-449	-442	-428	-455	-467
	-448	-452	-447	-443	-446	-452	-424	-447	-441	-427	-456	-471
	-456	-465	-462	-460	-462	-469	-463	-485	-478	-469	-495	-510
	-439	-450	-453	-442	-438	-446	-423	-445	-435	-423	-452	-467
	-442	-453	-450	-449	-451	-458	-452	-470	-459	-452	-483	-490
	-434	-444	-443	-440	-442	-449	-443	-460	-448	-436	-470	-481
	-439	-446	-449	-440	-440	-457	-426	-443	-440	-434	-459	-471
	-432	-432	-431	-426	-430	-440	-413	-433	-428	-420	-443	-460


Quad Image frame:

	-624	-634	-637	-639	-640	-643	-644	-653	-641	-633	-642	-654
	-618	-624	-627	-634	-637	-637	-639	-650	-642	-634	-642	-651
	-639	-645	-650	-657	-661	-665	-662	-666	-662	-655	-662	-673
	-604	-605	-606	-614	-616	-617	-603	-610	-607	-601	-607	-615
	-696	-699	-701	-708	-711	-714	-712	-716	-713	-704	-714	-729
	-630	-640	-641	-644	-645	-648	-646	-653	-645	-637	-647	-660
	-584	-593	-594	-601	-603	-605	-608	-615	-613	-609	-614	-622
	-650	-656	-657	-662	-668	-672	-673	-676	-671	-665	-670	-680
	-639	-646	-648	-654	-657	-662	-648	-657	-653	-644	-652	-663
	-614	-622	-624	-630	-632	-635	-639	-644	-630	-622	-631	-641
	-604	-609	-609	-616	-619	-621	-625	-633	-621	-615	-622	-639
	-625	-632	-637	-642	-643	-645	-634	-644	-640	-632	-641	-652
	-621	-623	-623	-632	-632	-634	-611	-617	-614	-608	-614	-639
	-596	-602	-597	-604	-607	-608	-594	-602	-599	-592	-599	-607
	-598	-607	-604	-605	-607	-609	-594	-604	-600	-594	-600	-607
	-597	-605	-605	-609	-605	-606	-592	-600	-598	-592	-597	-607
	-619	-627	-628	-637	-640	-641	-625	-636	-631	-622	-630	-639
	-615	-621	-620	-627	-631	-631	-617	-627	-624	-614	-623	-634
	-587	-594	-593	-601	-603	-604	-608	-617	-614	-609	-614	-629
	-631	-641	-645	-646	-645	-647	-636	-647	-640	-632	-642	-653
	-588	-597	-597	-604	-607	-608	-612	-619	-612	-607	-619	-626
	-590	-599	-600	-608	-610	-611	-615	-621	-612	-604	-617	-628
	-652	-660	-664	-667	-670	-676	-661	-669	-667	-661	-668	-679
	-658	-663	-664	-669	-673	-677	-663	-673	-670	-663	-670	-682


Mag Image:
764.682, 778.626, 782.230, 778.682, 778.932, 786.548, 783.929, 802.225, 782.039, 768.625, 791.538, 811.835, 
759.794, 766.420, 768.865, 774.010, 777.041, 780.493, 778.111, 800.951, 788.624, 775.735, 797.428, 811.804, 
774.138, 781.348, 788.865, 792.959, 798.514, 808.594, 797.107, 807.150, 801.027, 790.182, 810.720, 826.637, 
751.415, 752.219, 751.838, 757.129, 759.921, 764.848, 737.146, 753.889, 748.527, 738.405, 757.402, 768.600, 
820.756, 822.773, 823.947, 828.350, 831.952, 838.687, 831.771, 841.439, 836.264, 823.374, 846.652, 870.641, 
768.439, 782.368, 783.186, 781.088, 781.348, 788.355, 780.487, 795.314, 782.479, 769.670, 795.017, 814.913, 
737.873, 751.112, 751.902, 755.622, 758.425, 764.884, 764.220, 780.144, 775.495, 767.443, 786.803, 798.050, 
782.685, 789.896, 789.615, 791.580, 799.889, 809.311, 806.817, 815.421, 806.811, 797.386, 812.711, 828.900, 
775.835, 785.004, 786.651, 789.354, 793.520, 804.989, 776.587, 794.081, 787.406, 772.699, 794.493, 810.961, 
757.714, 768.887, 769.920, 772.469, 774.101, 782.351, 781.550, 794.916, 771.891, 758.445, 782.051, 797.813, 
750.820, 756.032, 753.080, 757.586, 761.189, 767.490, 766.655, 784.256, 765.147, 755.029, 776.600, 802.213, 
764.922, 773.524, 780.493, 782.287, 782.537, 788.759, 766.627, 785.643, 778.932, 766.102, 789.558, 806.089, 
789.183, 791.374, 790.142, 796.648, 797.257, 804.967, 760.016, 774.411, 768.400, 758.203, 779.356, 817.570, 
747.406, 756.417, 747.000, 751.415, 754.422, 759.400, 731.549, 749.212, 743.829, 731.685, 752.819, 764.032, 
756.288, 769.531, 763.482, 759.411, 761.005, 768.052, 738.024, 758.010, 751.201, 740.405, 760.936, 770.146, 
758.573, 770.424, 769.187, 768.052, 761.835, 766.900, 738.801, 756.651, 752.023, 741.201, 760.427, 774.474, 
760.608, 771.187, 770.839, 778.188, 781.793, 786.069, 756.373, 778.522, 770.405, 755.028, 777.126, 791.460, 
760.873, 768.078, 764.335, 767.709, 772.707, 776.186, 748.642, 770.024, 764.105, 747.880, 772.052, 789.808, 
743.306, 754.361, 751.726, 756.836, 759.640, 764.707, 764.220, 784.801, 778.125, 768.662, 788.683, 809.778, 
768.688, 783.186, 788.183, 782.738, 779.659, 785.827, 763.822, 785.260, 773.837, 760.495, 785.154, 802.806, 
735.600, 749.411, 747.602, 752.606, 756.207, 761.201, 760.820, 777.213, 765.000, 756.804, 785.143, 794.969, 
732.431, 745.611, 745.821, 750.509, 753.302, 758.236, 757.940, 772.813, 758.451, 744.924, 775.621, 791.040, 
786.018, 796.565, 801.559, 799.055, 801.560, 815.981, 786.382, 802.377, 799.055, 790.744, 810.496, 826.366, 
787.139, 791.323, 791.616, 793.118, 798.641, 807.421, 781.113, 800.261, 795.037, 784.836, 803.211, 822.632, 

Col Avgs:
763.966, 773.153, 773.420, 775.725, 778.142, 785.011, 769.113, 786.041, 776.838, 765.165, 787.167, 804.314, 
Row Avgs:
784.158, 781.606, 798.103, 753.445, 834.717, 785.222, 765.998, 802.585, 789.298, 776.009, 766.341, 780.456, 785.627, 749.099, 758.041, 759.879, 773.133, 766.867, 768.737, 779.971, 761.881, 757.225, 801.346, 796.362, 
Row Avg median = 777.990
Col Avg median = 776.281
Col Diffs Percent Median:
1.586, 0.402, 0.368, 0.071, 0.239, 1.124, 0.923, 1.257, 0.071, 1.431, 1.402, 3.611, 
Row Diffs Percent Median:
0.792, 0.464, 2.585, 3.154, 7.291, 0.929, 1.541, 3.161, 1.453, 0.254, 1.497, 0.316, 0.981, 3.713, 2.564, 2.327, 0.624, 1.429, 1.189, 0.254, 2.070, 2.669, 3.002, 2.361, 
Applying Csig Median limits: [400, 1200]
Median failures: None
Applying Csig Col single stim limits: [0, 20]
Column failures:  None
Applying Csig Row single stim limits: [0, 25]
Row failures:  None

PASS
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:44:59.359 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:44:59.359]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:44:59.359]
CATCH_VALUE => Catch OK : Getting inphase imageGetting quad imageGetting inphase image again In Phase Ref frame:	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-482	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485	-438	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480	-447	-448	-445	-443	-445	-452	-424	-443	-439	-429	-453	-461	-435	-434	-433	-429	-432	-440	-430	-442	-437	-427	-455	-476	-440	-451	-450	-441	-440	-449	-438	-454	-443	-432	-462	-478	-450	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500	-436	-440	-438	-433	-439	-450	-445	-456	-448	-440	-460	-474	-440	-446	-446	-442	-445	-458	-428	-446	-440	-428	-454	-467	-444	-452	-451	-447	-447	-457	-451	-466	-446	-434	-462	-475	-446	-449	-444	-442	-444	-451	-445	-463	-447	-438	-465	-486	-441	-447	-451	-447	-446	-454	-431	-451	-444	-433	-461	-475	-487	-488	-486	-486	-486	-496	-452	-469	-462	-453	-480	-510	-451	-459	-449	-447	-448	-455	-427	-446	-441	-431	-456	-464	-463	-474	-468	-459	-460	-468	-439	-459	-452	-443	-468	-475	-468	-478	-475	-469	-464	-471	-442	-462	-457	-447	-471	-482	-443	-451	-448	-448	-450	-456	-427	-450	-443	-429	-456	-468	-449	-453	-448	-444	-447	-453	-425	-448	-442	-428	-457	-472	-457	-466	-463	-460	-463	-470	-464	-486	-479	-470	-496	-511	-440	-451	-454	-443	-439	-447	-424	-446	-436	-424	-453	-469	-442	-453	-451	-449	-451	-458	-451	-470	-459	-452	-484	-490	-434	-444	-443	-441	-442	-450	-443	-461	-448	-436	-470	-481	-439	-446	-449	-440	-440	-457	-426	-443	-441	-434	-459	-472	-432	-432	-431	-426	-430	-440	-413	-433	-428	-421	-443	-460In Phase frame:	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-481	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485	-437	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480	-447	-447	-445	-443	-445	-452	-424	-443	-438	-429	-453	-461	-435	-434	-433	-430	-432	-440	-430	-442	-437	-427	-455	-476	-440	-450	-450	-442	-441	-449	-438	-454	-443	-432	-462	-478	-451	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500	-436	-440	-438	-434	-440	-451	-445	-456	-448	-440	-460	-474	-440	-446	-446	-442	-445	-458	-428	-446	-440	-427	-454	-467	-444	-452	-451	-447	-447	-457	-450	-466	-446	-434	-462	-475	-446	-448	-443	-441	-443	-451	-444	-463	-447	-438	-465	-485	-441	-446	-451	-447	-446	-454	-431	-450	-444	-433	-461	-474	-487	-488	-486	-485	-486	-496	-452	-468	-462	-453	-480	-510	-451	-458	-449	-447	-448	-455	-427	-446	-441	-430	-456	-464	-463	-473	-467	-459	-459	-468	-438	-458	-452	-442	-468	-474	-468	-477	-475	-468	-463	-470	-442	-461	-456	-446	-471	-481	-442	-449	-447	-447	-449	-455	-426	-449	-442	-428	-455	-467	-448	-452	-447	-443	-446	-452	-424	-447	-441	-427	-456	-471	-456	-465	-462	-460	-462	-469	-463	-485	-478	-469	-495	-510	-439	-450	-453	-442	-438	-446	-423	-445	-435	-423	-452	-467	-442	-453	-450	-449	-451	-458	-452	-470	-459	-452	-483	-490	-434	-444	-443	-440	-442	-449	-443	-460	-448	-436	-470	-481	-439	-446	-449	-440	-440	-457	-426	-443	-440	-434	-459	-471	-432	-432	-431	-426	-430	-440	-413	-433	-428	-420	-443	-460Quad Image frame:	-624	-634	-637	-639	-640	-643	-644	-653	-641	-633	-642	-654	-618	-624	-627	-634	-637	-637	-639	-650	-642	-634	-642	-651	-639	-645	-650	-657	-661	-665	-662	-666	-662	-655	-662	-673	-604	-605	-606	-614	-616	-617	-603	-610	-607	-601	-607	-615	-696	-699	-701	-708	-711	-714	-712	-716	-713	-704	-714	-729	-630	-640	-641	-644	-645	-648	-646	-653	-645	-637	-647	-660	-584	-593	-594	-601	-603	-605	-608	-615	-613	-609	-614	-622	-650	-656	-657	-662	-668	-672	-673	-676	-671	-665	-670	-680	-639	-646	-648	-654	-657	-662	-648	-657	-653	-644	-652	-663	-614	-622	-624	-630	-632	-635	-639	-644	-630	-622	-631	-641	-604	-609	-609	-616	-619	-621	-625	-633	-621	-615	-622	-639	-625	-632	-637	-642	-643	-645	-634	-644	-640	-632	-641	-652	-621	-623	-623	-632	-632	-634	-611	-617	-614	-608	-614	-639	-596	-602	-597	-604	-607	-608	-594	-602	-599	-592	-599	-607	-598	-607	-604	-605	-607	-609	-594	-604	-600	-594	-600	-607	-597	-605	-605	-609	-605	-606	-592	-600	-598	-592	-597	-607	-619	-627	-628	-637	-640	-641	-625	-636	-631	-622	-630	-639	-615	-621	-620	-627	-631	-631	-617	-627	-624	-614	-623	-634	-587	-594	-593	-601	-603	-604	-608	-617	-614	-609	-614	-629	-631	-641	-645	-646	-645	-647	-636	-647	-640	-632	-642	-653	-588	-597	-597	-604	-607	-608	-612	-619	-612	-607	-619	-626	-590	-599	-600	-608	-610	-611	-615	-621	-612	-604	-617	-628	-652	-660	-664	-667	-670	-676	-661	-669	-667	-661	-668	-679	-658	-663	-664	-669	-673	-677	-663	-673	-670	-663	-670	-682Mag Image:764.682, 778.626, 782.230, 778.682, 778.932, 786.548, 783.929, 802.225, 782.039, 768.625, 791.538, 811.835, 759.794, 766.420, 768.865, 774.010, 777.041, 780.493, 778.111, 800.951, 788.624, 775.735, 797.428, 811.804, 774.138, 781.348, 788.865, 792.959, 798.514, 808.594, 797.107, 807.150, 801.027, 790.182, 810.720, 826.637, 751.415, 752.219, 751.838, 757.129, 759.921, 764.848, 737.146, 753.889, 748.527, 738.405, 757.402, 768.600, 820.756, 822.773, 823.947, 828.350, 831.952, 838.687, 831.771, 841.439, 836.264, 823.374, 846.652, 870.641, 768.439, 782.368, 783.186, 781.088, 781.348, 788.355, 780.487, 795.314, 782.479, 769.670, 795.017, 814.913, 737.873, 751.112, 751.902, 755.622, 758.425, 764.884, 764.220, 780.144, 775.495, 767.443, 786.803, 798.050, 782.685, 789.896, 789.615, 791.580, 799.889, 809.311, 806.817, 815.421, 806.811, 797.386, 812.711, 828.900, 775.835, 785.004, 786.651, 789.354, 793.520, 804.989, 776.587, 794.081, 787.406, 772.699, 794.493, 810.961, 757.714, 768.887, 769.920, 772.469, 774.101, 782.351, 781.550, 794.916, 771.891, 758.445, 782.051, 797.813, 750.820, 756.032, 753.080, 757.586, 761.189, 767.490, 766.655, 784.256, 765.147, 755.029, 776.600, 802.213, 764.922, 773.524, 780.493, 782.287, 782.537, 788.759, 766.627, 785.643, 778.932, 766.102, 789.558, 806.089, 789.183, 791.374, 790.142, 796.648, 797.257, 804.967, 760.016, 774.411, 768.400, 758.203, 779.356, 817.570, 747.406, 756.417, 747.000, 751.415, 754.422, 759.400, 731.549, 749.212, 743.829, 731.685, 752.819, 764.032, 756.288, 769.531, 763.482, 759.411, 761.005, 768.052, 738.024, 758.010, 751.201, 740.405, 760.936, 770.146, 758.573, 770.424, 769.187, 768.052, 761.835, 766.900, 738.801, 756.651, 752.023, 741.201, 760.427, 774.474, 760.608, 771.187, 770.839, 778.188, 781.793, 786.069, 756.373, 778.522, 770.405, 755.028, 777.126, 791.460, 760.873, 768.078, 764.335, 767.709, 772.707, 776.186, 748.642, 770.024, 764.105, 747.880, 772.052, 789.808, 743.306, 754.361, 751.726, 756.836, 759.640, 764.707, 764.220, 784.801, 778.125, 768.662, 788.683, 809.778, 768.688, 783.186, 788.183, 782.738, 779.659, 785.827, 763.822, 785.260, 773.837, 760.495, 785.154, 802.806, 735.600, 749.411, 747.602, 752.606, 756.207, 761.201, 760.820, 777.213, 765.000, 756.804, 785.143, 794.969, 732.431, 745.611, 745.821, 750.509, 753.302, 758.236, 757.940, 772.813, 758.451, 744.924, 775.621, 791.040, 786.018, 796.565, 801.559, 799.055, 801.560, 815.981, 786.382, 802.377, 799.055, 790.744, 810.496, 826.366, 787.139, 791.323, 791.616, 793.118, 798.641, 807.421, 781.113, 800.261, 795.037, 784.836, 803.211, 822.632, Col Avgs:763.966, 773.153, 773.420, 775.725, 778.142, 785.011, 769.113, 786.041, 776.838, 765.165, 787.167, 804.314, Row Avgs:784.158, 781.606, 798.103, 753.445, 834.717, 785.222, 765.998, 802.585, 789.298, 776.009, 766.341, 780.456, 785.627, 749.099, 758.041, 759.879, 773.133, 766.867, 768.737, 779.971, 761.881, 757.225, 801.346, 796.362, Row Avg median = 777.990Col Avg median = 776.281Col Diffs Percent Median:1.586, 0.402, 0.368, 0.071, 0.239, 1.124, 0.923, 1.257, 0.071, 1.431, 1.402, 3.611, Row Diffs Percent Median:0.792, 0.464, 2.585, 3.154, 7.291, 0.929, 1.541, 3.161, 1.453, 0.254, 1.497, 0.316, 0.981, 3.713, 2.564, 2.327, 0.624, 1.429, 1.189, 0.254, 2.070, 2.669, 3.002, 2.361, Applying Csig Median limits: [400, 1200]Median failures: NoneApplying Csig Col single stim limits: [0, 20]Column failures:  NoneApplying Csig Row single stim limits: [0, 25]Row failures:  NonePASS

[2016-03-31 23:44:59.359]
READ_COMMAND => Catch string between touch --test csig_single_stim --run and [0006451C:3020213A] :-) == Getting inphase imageGetting quad imageGetting inphase image again In Phase Ref frame:	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-482	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485	-438	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480	-447	-448	-445	-443	-445	-452	-424	-443	-439	-429	-453	-461	-435	-434	-433	-429	-432	-440	-430	-442	-437	-427	-455	-476	-440	-451	-450	-441	-440	-449	-438	-454	-443	-432	-462	-478	-450	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500	-436	-440	-438	-433	-439	-450	-445	-456	-448	-440	-460	-474	-440	-446	-446	-442	-445	-458	-428	-446	-440	-428	-454	-467	-444	-452	-451	-447	-447	-457	-451	-466	-446	-434	-462	-475	-446	-449	-444	-442	-444	-451	-445	-463	-447	-438	-465	-486	-441	-447	-451	-447	-446	-454	-431	-451	-444	-433	-461	-475	-487	-488	-486	-486	-486	-496	-452	-469	-462	-453	-480	-510	-451	-459	-449	-447	-448	-455	-427	-446	-441	-431	-456	-464	-463	-474	-468	-459	-460	-468	-439	-459	-452	-443	-468	-475	-468	-478	-475	-469	-464	-471	-442	-462	-457	-447	-471	-482	-443	-451	-448	-448	-450	-456	-427	-450	-443	-429	-456	-468	-449	-453	-448	-444	-447	-453	-425	-448	-442	-428	-457	-472	-457	-466	-463	-460	-463	-470	-464	-486	-479	-470	-496	-511	-440	-451	-454	-443	-439	-447	-424	-446	-436	-424	-453	-469	-442	-453	-451	-449	-451	-458	-451	-470	-459	-452	-484	-490	-434	-444	-443	-441	-442	-450	-443	-461	-448	-436	-470	-481	-439	-446	-449	-440	-440	-457	-426	-443	-441	-434	-459	-472	-432	-432	-431	-426	-430	-440	-413	-433	-428	-421	-443	-460In Phase frame:	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-481	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485	-437	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480	-447	-447	-445	-443	-445	-452	-424	-443	-438	-429	-453	-461	-435	-434	-433	-430	-432	-440	-430	-442	-437	-427	-455	-476	-440	-450	-450	-442	-441	-449	-438	-454	-443	-432	-462	-478	-451	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500	-436	-440	-438	-434	-440	-451	-445	-456	-448	-440	-460	-474	-440	-446	-446	-442	-445	-458	-428	-446	-440	-427	-454	-467	-444	-452	-451	-447	-447	-457	-450	-466	-446	-434	-462	-475	-446	-448	-443	-441	-443	-451	-444	-463	-447	-438	-465	-485	-441	-446	-451	-447	-446	-454	-431	-450	-444	-433	-461	-474	-487	-488	-486	-485	-486	-496	-452	-468	-462	-453	-480	-510	-451	-458	-449	-447	-448	-455	-427	-446	-441	-430	-456	-464	-463	-473	-467	-459	-459	-468	-438	-458	-452	-442	-468	-474	-468	-477	-475	-468	-463	-470	-442	-461	-456	-446	-471	-481	-442	-449	-447	-447	-449	-455	-426	-449	-442	-428	-455	-467	-448	-452	-447	-443	-446	-452	-424	-447	-441	-427	-456	-471	-456	-465	-462	-460	-462	-469	-463	-485	-478	-469	-495	-510	-439	-450	-453	-442	-438	-446	-423	-445	-435	-423	-452	-467	-442	-453	-450	-449	-451	-458	-452	-470	-459	-452	-483	-490	-434	-444	-443	-440	-442	-449	-443	-460	-448	-436	-470	-481	-439	-446	-449	-440	-440	-457	-426	-443	-440	-434	-459	-471	-432	-432	-431	-426	-430	-440	-413	-433	-428	-420	-443	-460Quad Image frame:	-624	-634	-637	-639	-640	-643	-644	-653	-641	-633	-642	-654	-618	-624	-627	-634	-637	-637	-639	-650	-642	-634	-642	-651	-639	-645	-650	-657	-661	-665	-662	-666	-662	-655	-662	-673	-604	-605	-606	-614	-616	-617	-603	-610	-607	-601	-607	-615	-696	-699	-701	-708	-711	-714	-712	-716	-713	-704	-714	-729	-630	-640	-641	-644	-645	-648	-646	-653	-645	-637	-647	-660	-584	-593	-594	-601	-603	-605	-608	-615	-613	-609	-614	-622	-650	-656	-657	-662	-668	-672	-673	-676	-671	-665	-670	-680	-639	-646	-648	-654	-657	-662	-648	-657	-653	-644	-652	-663	-614	-622	-624	-630	-632	-635	-639	-644	-630	-622	-631	-641	-604	-609	-609	-616	-619	-621	-625	-633	-621	-615	-622	-639	-625	-632	-637	-642	-643	-645	-634	-644	-640	-632	-641	-652	-621	-623	-623	-632	-632	-634	-611	-617	-614	-608	-614	-639	-596	-602	-597	-604	-607	-608	-594	-602	-599	-592	-599	-607	-598	-607	-604	-605	-607	-609	-594	-604	-600	-594	-600	-607	-597	-605	-605	-609	-605	-606	-592	-600	-598	-592	-597	-607	-619	-627	-628	-637	-640	-641	-625	-636	-631	-622	-630	-639	-615	-621	-620	-627	-631	-631	-617	-627	-624	-614	-623	-634	-587	-594	-593	-601	-603	-604	-608	-617	-614	-609	-614	-629	-631	-641	-645	-646	-645	-647	-636	-647	-640	-632	-642	-653	-588	-597	-597	-604	-607	-608	-612	-619	-612	-607	-619	-626	-590	-599	-600	-608	-610	-611	-615	-621	-612	-604	-617	-628	-652	-660	-664	-667	-670	-676	-661	-669	-667	-661	-668	-679	-658	-663	-664	-669	-673	-677	-663	-673	-670	-663	-670	-682Mag Image:764.682, 778.626, 782.230, 778.682, 778.932, 786.548, 783.929, 802.225, 782.039, 768.625, 791.538, 811.835, 759.794, 766.420, 768.865, 774.010, 777.041, 780.493, 778.111, 800.951, 788.624, 775.735, 797.428, 811.804, 774.138, 781.348, 788.865, 792.959, 798.514, 808.594, 797.107, 807.150, 801.027, 790.182, 810.720, 826.637, 751.415, 752.219, 751.838, 757.129, 759.921, 764.848, 737.146, 753.889, 748.527, 738.405, 757.402, 768.600, 820.756, 822.773, 823.947, 828.350, 831.952, 838.687, 831.771, 841.439, 836.264, 823.374, 846.652, 870.641, 768.439, 782.368, 783.186, 781.088, 781.348, 788.355, 780.487, 795.314, 782.479, 769.670, 795.017, 814.913, 737.873, 751.112, 751.902, 755.622, 758.425, 764.884, 764.220, 780.144, 775.495, 767.443, 786.803, 798.050, 782.685, 789.896, 789.615, 791.580, 799.889, 809.311, 806.817, 815.421, 806.811, 797.386, 812.711, 828.900, 775.835, 785.004, 786.651, 789.354, 793.520, 804.989, 776.587, 794.081, 787.406, 772.699, 794.493, 810.961, 757.714, 768.887, 769.920, 772.469, 774.101, 782.351, 781.550, 794.916, 771.891, 758.445, 782.051, 797.813, 750.820, 756.032, 753.080, 757.586, 761.189, 767.490, 766.655, 784.256, 765.147, 755.029, 776.600, 802.213, 764.922, 773.524, 780.493, 782.287, 782.537, 788.759, 766.627, 785.643, 778.932, 766.102, 789.558, 806.089, 789.183, 791.374, 790.142, 796.648, 797.257, 804.967, 760.016, 774.411, 768.400, 758.203, 779.356, 817.570, 747.406, 756.417, 747.000, 751.415, 754.422, 759.400, 731.549, 749.212, 743.829, 731.685, 752.819, 764.032, 756.288, 769.531, 763.482, 759.411, 761.005, 768.052, 738.024, 758.010, 751.201, 740.405, 760.936, 770.146, 758.573, 770.424, 769.187, 768.052, 761.835, 766.900, 738.801, 756.651, 752.023, 741.201, 760.427, 774.474, 760.608, 771.187, 770.839, 778.188, 781.793, 786.069, 756.373, 778.522, 770.405, 755.028, 777.126, 791.460, 760.873, 768.078, 764.335, 767.709, 772.707, 776.186, 748.642, 770.024, 764.105, 747.880, 772.052, 789.808, 743.306, 754.361, 751.726, 756.836, 759.640, 764.707, 764.220, 784.801, 778.125, 768.662, 788.683, 809.778, 768.688, 783.186, 788.183, 782.738, 779.659, 785.827, 763.822, 785.260, 773.837, 760.495, 785.154, 802.806, 735.600, 749.411, 747.602, 752.606, 756.207, 761.201, 760.820, 777.213, 765.000, 756.804, 785.143, 794.969, 732.431, 745.611, 745.821, 750.509, 753.302, 758.236, 757.940, 772.813, 758.451, 744.924, 775.621, 791.040, 786.018, 796.565, 801.559, 799.055, 801.560, 815.981, 786.382, 802.377, 799.055, 790.744, 810.496, 826.366, 787.139, 791.323, 791.616, 793.118, 798.641, 807.421, 781.113, 800.261, 795.037, 784.836, 803.211, 822.632, Col Avgs:763.966, 773.153, 773.420, 775.725, 778.142, 785.011, 769.113, 786.041, 776.838, 765.165, 787.167, 804.314, Row Avgs:784.158, 781.606, 798.103, 753.445, 834.717, 785.222, 765.998, 802.585, 789.298, 776.009, 766.341, 780.456, 785.627, 749.099, 758.041, 759.879, 773.133, 766.867, 768.737, 779.971, 761.881, 757.225, 801.346, 796.362, Row Avg median = 777.990Col Avg median = 776.281Col Diffs Percent Median:1.586, 0.402, 0.368, 0.071, 0.239, 1.124, 0.923, 1.257, 0.071, 1.431, 1.402, 3.611, Row Diffs Percent Median:0.792, 0.464, 2.585, 3.154, 7.291, 0.929, 1.541, 3.161, 1.453, 0.254, 1.497, 0.316, 0.981, 3.713, 2.564, 2.327, 0.624, 1.429, 1.189, 0.254, 2.070, 2.669, 3.002, 2.361, Applying Csig Median limits: [400, 1200]Median failures: NoneApplying Csig Col single stim limits: [0, 20]Column failures:  NoneApplying Csig Row single stim limits: [0, 25]Row failures:  NonePASS

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> Getting inphase imageGetting quad imageGetting inphase image again In Phase Ref frame:	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-482	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485	-438	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480	-447	-448	-445	-443	-445	-452	-424	-443	-439	-429	-453	-461	-435	-434	-433	-429	-432	-440	-430	-442	-437	-427	-455	-476	-440	-451	-450	-441	-440	-449	-438	-454	-443	-432	-462	-478	-450	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500	-436	-440	-438	-433	-439	-450	-445	-456	-448	-440	-460	-474	-440	-446	-446	-442	-445	-458	-428	-446	-440	-428	-454	-467	-444	-452	-451	-447	-447	-457	-451	-466	-446	-434	-462	-475	-446	-449	-444	-442	-444	-451	-445	-463	-447	-438	-465	-486	-441	-447	-451	-447	-446	-454	-431	-451	-444	-433	-461	-475	-487	-488	-486	-486	-486	-496	-452	-469	-462	-453	-480	-510	-451	-459	-449	-447	-448	-455	-427	-446	-441	-431	-456	-464	-463	-474	-468	-459	-460	-468	-439	-459	-452	-443	-468	-475	-468	-478	-475	-469	-464	-471	-442	-462	-457	-447	-471	-482	-443	-451	-448	-448	-450	-456	-427	-450	-443	-429	-456	-468	-449	-453	-448	-444	-447	-453	-425	-448	-442	-428	-457	-472	-457	-466	-463	-460	-463	-470	-464	-486	-479	-470	-496	-511	-440	-451	-454	-443	-439	-447	-424	-446	-436	-424	-453	-469	-442	-453	-451	-449	-451	-458	-451	-470	-459	-452	-484	-490	-434	-444	-443	-441	-442	-450	-443	-461	-448	-436	-470	-481	-439	-446	-449	-440	-440	-457	-426	-443	-441	-434	-459	-472	-432	-432	-431	-426	-430	-440	-413	-433	-428	-421	-443	-460In Phase frame:	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-481	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485	-437	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480	-447	-447	-445	-443	-445	-452	-424	-443	-438	-429	-453	-461	-435	-434	-433	-430	-432	-440	-430	-442	-437	-427	-455	-476	-440	-450	-450	-442	-441	-449	-438	-454	-443	-432	-462	-478	-451	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500	-436	-440	-438	-434	-440	-451	-445	-456	-448	-440	-460	-474	-440	-446	-446	-442	-445	-458	-428	-446	-440	-427	-454	-467	-444	-452	-451	-447	-447	-457	-450	-466	-446	-434	-462	-475	-446	-448	-443	-441	-443	-451	-444	-463	-447	-438	-465	-485	-441	-446	-451	-447	-446	-454	-431	-450	-444	-433	-461	-474	-487	-488	-486	-485	-486	-496	-452	-468	-462	-453	-480	-510	-451	-458	-449	-447	-448	-455	-427	-446	-441	-430	-456	-464	-463	-473	-467	-459	-459	-468	-438	-458	-452	-442	-468	-474	-468	-477	-475	-468	-463	-470	-442	-461	-456	-446	-471	-481	-442	-449	-447	-447	-449	-455	-426	-449	-442	-428	-455	-467	-448	-452	-447	-443	-446	-452	-424	-447	-441	-427	-456	-471	-456	-465	-462	-460	-462	-469	-463	-485	-478	-469	-495	-510	-439	-450	-453	-442	-438	-446	-423	-445	-435	-423	-452	-467	-442	-453	-450	-449	-451	-458	-452	-470	-459	-452	-483	-490	-434	-444	-443	-440	-442	-449	-443	-460	-448	-436	-470	-481	-439	-446	-449	-440	-440	-457	-426	-443	-440	-434	-459	-471	-432	-432	-431	-426	-430	-440	-413	-433	-428	-420	-443	-460Quad Image frame:	-624	-634	-637	-639	-640	-643	-644	-653	-641	-633	-642	-654	-618	-624	-627	-634	-637	-637	-639	-650	-642	-634	-642	-651	-639	-645	-650	-657	-661	-665	-662	-666	-662	-655	-662	-673	-604	-605	-606	-614	-616	-617	-603	-610	-607	-601	-607	-615	-696	-699	-701	-708	-711	-714	-712	-716	-713	-704	-714	-729	-630	-640	-641	-644	-645	-648	-646	-653	-645	-637	-647	-660	-584	-593	-594	-601	-603	-605	-608	-615	-613	-609	-614	-622	-650	-656	-657	-662	-668	-672	-673	-676	-671	-665	-670	-680	-639	-646	-648	-654	-657	-662	-648	-657	-653	-644	-652	-663	-614	-622	-624	-630	-632	-635	-639	-644	-630	-622	-631	-641	-604	-609	-609	-616	-619	-621	-625	-633	-621	-615	-622	-639	-625	-632	-637	-642	-643	-645	-634	-644	-640	-632	-641	-652	-621	-623	-623	-632	-632	-634	-611	-617	-614	-608	-614	-639	-596	-602	-597	-604	-607	-608	-594	-602	-599	-592	-599	-607	-598	-607	-604	-605	-607	-609	-594	-604	-600	-594	-600	-607	-597	-605	-605	-609	-605	-606	-592	-600	-598	-592	-597	-607	-619	-627	-628	-637	-640	-641	-625	-636	-631	-622	-630	-639	-615	-621	-620	-627	-631	-631	-617	-627	-624	-614	-623	-634	-587	-594	-593	-601	-603	-604	-608	-617	-614	-609	-614	-629	-631	-641	-645	-646	-645	-647	-636	-647	-640	-632	-642	-653	-588	-597	-597	-604	-607	-608	-612	-619	-612	-607	-619	-626	-590	-599	-600	-608	-610	-611	-615	-621	-612	-604	-617	-628	-652	-660	-664	-667	-670	-676	-661	-669	-667	-661	-668	-679	-658	-663	-664	-669	-673	-677	-663	-673	-670	-663	-670	-682Mag Image:764.682, 778.626, 782.230, 778.682, 778.932, 786.548, 783.929, 802.225, 782.039, 768.625, 791.538, 811.835, 759.794, 766.420, 768.865, 774.010, 777.041, 780.493, 778.111, 800.951, 788.624, 775.735, 797.428, 811.804, 774.138, 781.348, 788.865, 792.959, 798.514, 808.594, 797.107, 807.150, 801.027, 790.182, 810.720, 826.637, 751.415, 752.219, 751.838, 757.129, 759.921, 764.848, 737.146, 753.889, 748.527, 738.405, 757.402, 768.600, 820.756, 822.773, 823.947, 828.350, 831.952, 838.687, 831.771, 841.439, 836.264, 823.374, 846.652, 870.641, 768.439, 782.368, 783.186, 781.088, 781.348, 788.355, 780.487, 795.314, 782.479, 769.670, 795.017, 814.913, 737.873, 751.112, 751.902, 755.622, 758.425, 764.884, 764.220, 780.144, 775.495, 767.443, 786.803, 798.050, 782.685, 789.896, 789.615, 791.580, 799.889, 809.311, 806.817, 815.421, 806.811, 797.386, 812.711, 828.900, 775.835, 785.004, 786.651, 789.354, 793.520, 804.989, 776.587, 794.081, 787.406, 772.699, 794.493, 810.961, 757.714, 768.887, 769.920, 772.469, 774.101, 782.351, 781.550, 794.916, 771.891, 758.445, 782.051, 797.813, 750.820, 756.032, 753.080, 757.586, 761.189, 767.490, 766.655, 784.256, 765.147, 755.029, 776.600, 802.213, 764.922, 773.524, 780.493, 782.287, 782.537, 788.759, 766.627, 785.643, 778.932, 766.102, 789.558, 806.089, 789.183, 791.374, 790.142, 796.648, 797.257, 804.967, 760.016, 774.411, 768.400, 758.203, 779.356, 817.570, 747.406, 756.417, 747.000, 751.415, 754.422, 759.400, 731.549, 749.212, 743.829, 731.685, 752.819, 764.032, 756.288, 769.531, 763.482, 759.411, 761.005, 768.052, 738.024, 758.010, 751.201, 740.405, 760.936, 770.146, 758.573, 770.424, 769.187, 768.052, 761.835, 766.900, 738.801, 756.651, 752.023, 741.201, 760.427, 774.474, 760.608, 771.187, 770.839, 778.188, 781.793, 786.069, 756.373, 778.522, 770.405, 755.028, 777.126, 791.460, 760.873, 768.078, 764.335, 767.709, 772.707, 776.186, 748.642, 770.024, 764.105, 747.880, 772.052, 789.808, 743.306, 754.361, 751.726, 756.836, 759.640, 764.707, 764.220, 784.801, 778.125, 768.662, 788.683, 809.778, 768.688, 783.186, 788.183, 782.738, 779.659, 785.827, 763.822, 785.260, 773.837, 760.495, 785.154, 802.806, 735.600, 749.411, 747.602, 752.606, 756.207, 761.201, 760.820, 777.213, 765.000, 756.804, 785.143, 794.969, 732.431, 745.611, 745.821, 750.509, 753.302, 758.236, 757.940, 772.813, 758.451, 744.924, 775.621, 791.040, 786.018, 796.565, 801.559, 799.055, 801.560, 815.981, 786.382, 802.377, 799.055, 790.744, 810.496, 826.366, 787.139, 791.323, 791.616, 793.118, 798.641, 807.421, 781.113, 800.261, 795.037, 784.836, 803.211, 822.632, Col Avgs:763.966, 773.153, 773.420, 775.725, 778.142, 785.011, 769.113, 786.041, 776.838, 765.165, 787.167, 804.314, Row Avgs:784.158, 781.606, 798.103, 753.445, 834.717, 785.222, 765.998, 802.585, 789.298, 776.009, 766.341, 780.456, 785.627, 749.099, 758.041, 759.879, 773.133, 766.867, 768.737, 779.971, 761.881, 757.225, 801.346, 796.362, Row Avg median = 777.990Col Avg median = 776.281Col Diffs Percent Median:1.586, 0.402, 0.368, 0.071, 0.239, 1.124, 0.923, 1.257, 0.071, 1.431, 1.402, 3.611, Row Diffs Percent Median:0.792, 0.464, 2.585, 3.154, 7.291, 0.929, 1.541, 3.161, 1.453, 0.254, 1.497, 0.316, 0.981, 3.713, 2.564, 2.327, 0.624, 1.429, 1.189, 0.254, 2.070, 2.669, 3.002, 2.361, Applying Csig Median limits: [400, 1200]Median failures: NoneApplying Csig Col single stim limits: [0, 20]Column failures:  NoneApplying Csig Row single stim limits: [0, 25]Row failures:  NonePASS
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 3.292373s) ++++++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> Getting inphase imageGetting quad imageGetting inphase image again In Phase Ref frame:	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-482	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485	-438	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480	-447	-448	-445	-443	-445	-452	-424	-443	-439	-429	-453	-461	-435	-434	-433	-429	-432	-440	-430	-442	-437	-427	-455	-476	-440	-451	-450	-441	-440	-449	-438	-454	-443	-432	-462	-478	-450	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500	-436	-440	-438	-433	-439	-450	-445	-456	-448	-440	-460	-474	-440	-446	-446	-442	-445	-458	-428	-446	-440	-428	-454	-467	-444	-452	-451	-447	-447	-457	-451	-466	-446	-434	-462	-475	-446	-449	-444	-442	-444	-451	-445	-463	-447	-438	-465	-486	-441	-447	-451	-447	-446	-454	-431	-451	-444	-433	-461	-475	-487	-488	-486	-486	-486	-496	-452	-469	-462	-453	-480	-510	-451	-459	-449	-447	-448	-455	-427	-446	-441	-431	-456	-464	-463	-474	-468	-459	-460	-468	-439	-459	-452	-443	-468	-475	-468	-478	-475	-469	-464	-471	-442	-462	-457	-447	-471	-482	-443	-451	-448	-448	-450	-456	-427	-450	-443	-429	-456	-468	-449	-453	-448	-444	-447	-453	-425	-448	-442	-428	-457	-472	-457	-466	-463	-460	-463	-470	-464	-486	-479	-470	-496	-511	-440	-451	-454	-443	-439	-447	-424	-446	-436	-424	-453	-469	-442	-453	-451	-449	-451	-458	-451	-470	-459	-452	-484	-490	-434	-444	-443	-441	-442	-450	-443	-461	-448	-436	-470	-481	-439	-446	-449	-440	-440	-457	-426	-443	-441	-434	-459	-472	-432	-432	-431	-426	-430	-440	-413	-433	-428	-421	-443	-460In Phase frame:	-442	-452	-454	-445	-444	-453	-447	-466	-448	-436	-463	-481	-442	-445	-445	-444	-445	-451	-444	-468	-458	-447	-473	-485	-437	-441	-447	-444	-448	-460	-444	-456	-451	-442	-468	-480	-447	-447	-445	-443	-445	-452	-424	-443	-438	-429	-453	-461	-435	-434	-433	-430	-432	-440	-430	-442	-437	-427	-455	-476	-440	-450	-450	-442	-441	-449	-438	-454	-443	-432	-462	-478	-451	-461	-461	-458	-460	-468	-463	-480	-475	-467	-492	-500	-436	-440	-438	-434	-440	-451	-445	-456	-448	-440	-460	-474	-440	-446	-446	-442	-445	-458	-428	-446	-440	-427	-454	-467	-444	-452	-451	-447	-447	-457	-450	-466	-446	-434	-462	-475	-446	-448	-443	-441	-443	-451	-444	-463	-447	-438	-465	-485	-441	-446	-451	-447	-446	-454	-431	-450	-444	-433	-461	-474	-487	-488	-486	-485	-486	-496	-452	-468	-462	-453	-480	-510	-451	-458	-449	-447	-448	-455	-427	-446	-441	-430	-456	-464	-463	-473	-467	-459	-459	-468	-438	-458	-452	-442	-468	-474	-468	-477	-475	-468	-463	-470	-442	-461	-456	-446	-471	-481	-442	-449	-447	-447	-449	-455	-426	-449	-442	-428	-455	-467	-448	-452	-447	-443	-446	-452	-424	-447	-441	-427	-456	-471	-456	-465	-462	-460	-462	-469	-463	-485	-478	-469	-495	-510	-439	-450	-453	-442	-438	-446	-423	-445	-435	-423	-452	-467	-442	-453	-450	-449	-451	-458	-452	-470	-459	-452	-483	-490	-434	-444	-443	-440	-442	-449	-443	-460	-448	-436	-470	-481	-439	-446	-449	-440	-440	-457	-426	-443	-440	-434	-459	-471	-432	-432	-431	-426	-430	-440	-413	-433	-428	-420	-443	-460Quad Image frame:	-624	-634	-637	-639	-640	-643	-644	-653	-641	-633	-642	-654	-618	-624	-627	-634	-637	-637	-639	-650	-642	-634	-642	-651	-639	-645	-650	-657	-661	-665	-662	-666	-662	-655	-662	-673	-604	-605	-606	-614	-616	-617	-603	-610	-607	-601	-607	-615	-696	-699	-701	-708	-711	-714	-712	-716	-713	-704	-714	-729	-630	-640	-641	-644	-645	-648	-646	-653	-645	-637	-647	-660	-584	-593	-594	-601	-603	-605	-608	-615	-613	-609	-614	-622	-650	-656	-657	-662	-668	-672	-673	-676	-671	-665	-670	-680	-639	-646	-648	-654	-657	-662	-648	-657	-653	-644	-652	-663	-614	-622	-624	-630	-632	-635	-639	-644	-630	-622	-631	-641	-604	-609	-609	-616	-619	-621	-625	-633	-621	-615	-622	-639	-625	-632	-637	-642	-643	-645	-634	-644	-640	-632	-641	-652	-621	-623	-623	-632	-632	-634	-611	-617	-614	-608	-614	-639	-596	-602	-597	-604	-607	-608	-594	-602	-599	-592	-599	-607	-598	-607	-604	-605	-607	-609	-594	-604	-600	-594	-600	-607	-597	-605	-605	-609	-605	-606	-592	-600	-598	-592	-597	-607	-619	-627	-628	-637	-640	-641	-625	-636	-631	-622	-630	-639	-615	-621	-620	-627	-631	-631	-617	-627	-624	-614	-623	-634	-587	-594	-593	-601	-603	-604	-608	-617	-614	-609	-614	-629	-631	-641	-645	-646	-645	-647	-636	-647	-640	-632	-642	-653	-588	-597	-597	-604	-607	-608	-612	-619	-612	-607	-619	-626	-590	-599	-600	-608	-610	-611	-615	-621	-612	-604	-617	-628	-652	-660	-664	-667	-670	-676	-661	-669	-667	-661	-668	-679	-658	-663	-664	-669	-673	-677	-663	-673	-670	-663	-670	-682Mag Image:764.682, 778.626, 782.230, 778.682, 778.932, 786.548, 783.929, 802.225, 782.039, 768.625, 791.538, 811.835, 759.794, 766.420, 768.865, 774.010, 777.041, 780.493, 778.111, 800.951, 788.624, 775.735, 797.428, 811.804, 774.138, 781.348, 788.865, 792.959, 798.514, 808.594, 797.107, 807.150, 801.027, 790.182, 810.720, 826.637, 751.415, 752.219, 751.838, 757.129, 759.921, 764.848, 737.146, 753.889, 748.527, 738.405, 757.402, 768.600, 820.756, 822.773, 823.947, 828.350, 831.952, 838.687, 831.771, 841.439, 836.264, 823.374, 846.652, 870.641, 768.439, 782.368, 783.186, 781.088, 781.348, 788.355, 780.487, 795.314, 782.479, 769.670, 795.017, 814.913, 737.873, 751.112, 751.902, 755.622, 758.425, 764.884, 764.220, 780.144, 775.495, 767.443, 786.803, 798.050, 782.685, 789.896, 789.615, 791.580, 799.889, 809.311, 806.817, 815.421, 806.811, 797.386, 812.711, 828.900, 775.835, 785.004, 786.651, 789.354, 793.520, 804.989, 776.587, 794.081, 787.406, 772.699, 794.493, 810.961, 757.714, 768.887, 769.920, 772.469, 774.101, 782.351, 781.550, 794.916, 771.891, 758.445, 782.051, 797.813, 750.820, 756.032, 753.080, 757.586, 761.189, 767.490, 766.655, 784.256, 765.147, 755.029, 776.600, 802.213, 764.922, 773.524, 780.493, 782.287, 782.537, 788.759, 766.627, 785.643, 778.932, 766.102, 789.558, 806.089, 789.183, 791.374, 790.142, 796.648, 797.257, 804.967, 760.016, 774.411, 768.400, 758.203, 779.356, 817.570, 747.406, 756.417, 747.000, 751.415, 754.422, 759.400, 731.549, 749.212, 743.829, 731.685, 752.819, 764.032, 756.288, 769.531, 763.482, 759.411, 761.005, 768.052, 738.024, 758.010, 751.201, 740.405, 760.936, 770.146, 758.573, 770.424, 769.187, 768.052, 761.835, 766.900, 738.801, 756.651, 752.023, 741.201, 760.427, 774.474, 760.608, 771.187, 770.839, 778.188, 781.793, 786.069, 756.373, 778.522, 770.405, 755.028, 777.126, 791.460, 760.873, 768.078, 764.335, 767.709, 772.707, 776.186, 748.642, 770.024, 764.105, 747.880, 772.052, 789.808, 743.306, 754.361, 751.726, 756.836, 759.640, 764.707, 764.220, 784.801, 778.125, 768.662, 788.683, 809.778, 768.688, 783.186, 788.183, 782.738, 779.659, 785.827, 763.822, 785.260, 773.837, 760.495, 785.154, 802.806, 735.600, 749.411, 747.602, 752.606, 756.207, 761.201, 760.820, 777.213, 765.000, 756.804, 785.143, 794.969, 732.431, 745.611, 745.821, 750.509, 753.302, 758.236, 757.940, 772.813, 758.451, 744.924, 775.621, 791.040, 786.018, 796.565, 801.559, 799.055, 801.560, 815.981, 786.382, 802.377, 799.055, 790.744, 810.496, 826.366, 787.139, 791.323, 791.616, 793.118, 798.641, 807.421, 781.113, 800.261, 795.037, 784.836, 803.211, 822.632, Col Avgs:763.966, 773.153, 773.420, 775.725, 778.142, 785.011, 769.113, 786.041, 776.838, 765.165, 787.167, 804.314, Row Avgs:784.158, 781.606, 798.103, 753.445, 834.717, 785.222, 765.998, 802.585, 789.298, 776.009, 766.341, 780.456, 785.627, 749.099, 758.041, 759.879, 773.133, 766.867, 768.737, 779.971, 761.881, 757.225, 801.346, 796.362, Row Avg median = 777.990Col Avg median = 776.281Col Diffs Percent Median:1.586, 0.402, 0.368, 0.071, 0.239, 1.124, 0.923, 1.257, 0.071, 1.431, 1.402, 3.611, Row Diffs Percent Median:0.792, 0.464, 2.585, 3.154, 7.291, 0.929, 1.541, 3.161, 1.453, 0.254, 1.497, 0.316, 0.981, 3.713, 2.564, 2.327, 0.624, 1.429, 1.189, 0.254, 2.070, 2.669, 3.002, 2.361, Applying Csig Median limits: [400, 1200]Median failures: NoneApplying Csig Col single stim limits: [0, 20]Column failures:  NoneApplying Csig Row single stim limits: [0, 25]Row failures:  NonePASS
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Applying Csig Median limits: (.*?)Median failures 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> [400, 1200]
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001443s) +++++++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_avg_med_limits 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> [400, 1200]
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Applying Csig Col single stim limits: (.*?)Column failures 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> [0, 20]
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001419s) +++++++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_Col_Diff_Spec 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> [0, 20]
++++++++++ [7] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000005s) ++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Applying Csig Row single stim limits: (.*?)Row failures 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> [0, 25]
+++++++++++++++ [8] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001418s) +++++++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_Row_Diff_Spec 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> [0, 25]
++++++++++ [9] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Row Avg median = (.*?)Col Avg median 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> 777.990
++++++++++++++ [10] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001416s) ++++++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_avg_med_limits*] 
 
}

[2016-03-31 23:44:59.359]
JUDGE_SPEC =>  value is [777.990], spec is [Item0=400 ; Item1= 1200 ; ], mode is [1]

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> 777.990
+++++++++++++++ [11] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000519s) +++++++++++++++

[2016-03-31 23:44:59.359]
================= END TEST CSIG_row_avg_med (TestResult : PASS ; Duration : 3.317461s) =================

[2016-03-31 23:44:59.359]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_avg_med,,,777.990,400, 1200,,)

[2016-03-31 23:44:59.359]
Item Name:CSIG_row_avg_med, [400, 1200]

[2016-03-31 23:44:59.359]
================================= START TEST CSIG_COL_AVG_MED (Item45) =================================

[2016-03-31 23:44:59.359]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Col Avg median = (.*?)Col Diffs Percent Median: 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> 776.281
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.002160s) +++++++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_avg_med_limits*] 
 
}

[2016-03-31 23:44:59.359]
JUDGE_SPEC =>  value is [776.281], spec is [Item0=400 ; Item1= 1200 ; ], mode is [1]

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> 776.281
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000701s) +++++++++++++++

[2016-03-31 23:44:59.359]
================= END TEST CSIG_col_avg_med (TestResult : PASS ; Duration : 0.005714s) =================

[2016-03-31 23:44:59.359]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_avg_med,,,776.281,400, 1200,,)

[2016-03-31 23:44:59.359]
Item Name:CSIG_col_avg_med, [400, 1200]

[2016-03-31 23:44:59.359]
================================= START TEST CSIG_COL_DIFF_0 (Item46) =================================

[2016-03-31 23:44:59.359]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Col Diffs Percent Median:(.*?)Row Diffs Percent Median 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> 1.586, 0.402, 0.368, 0.071, 0.239, 1.124, 0.923, 1.257, 0.071, 1.431, 1.402, 3.611,
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001968s) +++++++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> 1.586, 0.402, 0.368, 0.071, 0.239, 1.124, 0.923, 1.257, 0.071, 1.431, 1.402, 3.611,
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 0 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> 1.586
++++++++++ [3] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) ++++++++++

[2016-03-31 23:44:59.359]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:44:59.359]
JUDGE_SPEC =>  value is [1.586], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:44:59.359]
RETURN_VALUE ===> 1.586
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000584s) +++++++++++++++

[2016-03-31 23:44:59.359]
================= END TEST CSIG_col_diff_0 (TestResult : PASS ; Duration : 0.007677s) =================

[2016-03-31 23:44:59.359]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_0,,,1.586,0, 20,,)

[2016-03-31 23:44:59.359]
Item Name:CSIG_col_diff_0, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_1 (Item47) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 1 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.402
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000033s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.402], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.402
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000709s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_1 (TestResult : PASS ; Duration : 0.003427s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_1,,,0.402,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_1, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_2 (Item48) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 2 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.368
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000047s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.368], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.368
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000691s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_2 (TestResult : PASS ; Duration : 0.003578s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_2,,,0.368,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_2, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_3 (Item49) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 3 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.071
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000032s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.071], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.071
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000707s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_3 (TestResult : PASS ; Duration : 0.003627s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_3,,,0.071,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_3, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_4 (Item50) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 4 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.239
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000032s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.239], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.239
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000718s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_4 (TestResult : PASS ; Duration : 0.003407s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_4,,,0.239,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_4, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_5 (Item51) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 5 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.124
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000038s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [1.124], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.124
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000705s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_5 (TestResult : PASS ; Duration : 0.003646s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_5,,,1.124,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_5, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_6 (Item52) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 6 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.923
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000033s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.923], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.923
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000708s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_6 (TestResult : PASS ; Duration : 0.003527s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_6,,,0.923,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_6, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_7 (Item53) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 7 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.257
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000026s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [1.257], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.257
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000557s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_7 (TestResult : PASS ; Duration : 0.002735s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_7,,,1.257,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_7, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_8 (Item54) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 8 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.071
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000033s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.071], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.071
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000703s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_8 (TestResult : PASS ; Duration : 0.003420s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_8,,,0.071,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_8, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_9 (Item55) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 9 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.431
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000032s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [1.431], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.431
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000689s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_9 (TestResult : PASS ; Duration : 0.003387s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_9,,,1.431,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_9, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_10 (Item56) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 10 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.402
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000034s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [1.402], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.402
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000711s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_10 (TestResult : PASS ; Duration : 0.003553s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_10,,,1.402,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_10, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_COL_DIFF_11 (Item57) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 11 
SeperateString ==> ,  
KEY ==> CSIG_COL_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 3.611,
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000032s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Col_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [3.611,], spec is [Item0=0 ; Item1= 20 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 3.611,
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000694s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_col_diff_11 (TestResult : PASS ; Duration : 0.003596s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_col_diff_11,,,3.611 ,0, 20,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_col_diff_11, [0, 20]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_0 (Item58) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Row Diffs Percent Median:(.*?)Applying Csig Median limits 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.792, 0.464, 2.585, 3.154, 7.291, 0.929, 1.541, 3.161, 1.453, 0.254, 1.497, 0.316, 0.981, 3.713, 2.564, 2.327, 0.624, 1.429, 1.189, 0.254, 2.070, 2.669, 3.002, 2.361,
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001511s) +++++++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.792, 0.464, 2.585, 3.154, 7.291, 0.929, 1.541, 3.161, 1.453, 0.254, 1.497, 0.316, 0.981, 3.713, 2.564, 2.327, 0.624, 1.429, 1.189, 0.254, 2.070, 2.669, 3.002, 2.361,
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 0 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.792
++++++++++ [3] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000032s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.792], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.792
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000530s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_0 (TestResult : PASS ; Duration : 0.006427s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_0,,,0.792,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_0, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_1 (Item59) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 1 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.464
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000043s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.464], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.464
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000684s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_1 (TestResult : PASS ; Duration : 0.003473s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_1,,,0.464,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_1, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_2 (Item60) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 2 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 2.585
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000050s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [2.585], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 2.585
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000694s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_2 (TestResult : PASS ; Duration : 0.003675s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_2,,,2.585,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_2, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_3 (Item61) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 3 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 3.154
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000044s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [3.154], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 3.154
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000729s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_3 (TestResult : PASS ; Duration : 0.003587s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_3,,,3.154,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_3, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_4 (Item62) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 4 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 7.291
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000043s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [7.291], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 7.291
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000695s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_4 (TestResult : PASS ; Duration : 0.003549s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_4,,,7.291,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_4, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_5 (Item63) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 5 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.929
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000050s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.929], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.929
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000712s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_5 (TestResult : PASS ; Duration : 0.003930s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_5,,,0.929,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_5, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_6 (Item64) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 6 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.541
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000049s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [1.541], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.541
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000707s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_6 (TestResult : PASS ; Duration : 0.003744s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_6,,,1.541,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_6, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_7 (Item65) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 7 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 3.161
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000043s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [3.161], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 3.161
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000694s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_7 (TestResult : PASS ; Duration : 0.003543s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_7,,,3.161,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_7, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_8 (Item66) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 8 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.453
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000043s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [1.453], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.453
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000699s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_8 (TestResult : PASS ; Duration : 0.003560s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_8,,,1.453,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_8, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_9 (Item67) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 9 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.254
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000042s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.254], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.254
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000707s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_9 (TestResult : PASS ; Duration : 0.003586s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_9,,,0.254,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_9, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_10 (Item68) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 10 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.497
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000050s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [1.497], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 1.497
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000730s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_10 (TestResult : PASS ; Duration : 0.003698s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_10,,,1.497,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_10, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_11 (Item69) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 11 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.316
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000035s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.316], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.316
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000569s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_11 (TestResult : PASS ; Duration : 0.002750s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_11,,,0.316,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_11, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_12 (Item70) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 12 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.981
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000050s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [0.981], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 0.981
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000699s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_12 (TestResult : PASS ; Duration : 0.003660s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_12,,,0.981,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_12, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_13 (Item71) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 13 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 3.713
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000043s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [3.713], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 3.713
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000697s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_13 (TestResult : PASS ; Duration : 0.003532s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_13,,,3.713,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_13, [0, 25]

[2016-03-31 23:45:00.30]
================================= START TEST CSIG_ROW_DIFF_14 (Item72) =================================

[2016-03-31 23:45:00.30]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 14 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 2.564
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000050s) ++++++++++

[2016-03-31 23:45:00.30]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:00.30]
JUDGE_SPEC =>  value is [2.564], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:00.30]
RETURN_VALUE ===> 2.564
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000813s) +++++++++++++++

[2016-03-31 23:45:00.30]
================= END TEST CSIG_row_diff_14 (TestResult : PASS ; Duration : 0.003848s) =================

[2016-03-31 23:45:00.30]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_14,,,2.564,0, 25,,)

[2016-03-31 23:45:00.30]
Item Name:CSIG_row_diff_14, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_15 (Item73) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 15 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 2.327
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000048s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [2.327], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 2.327
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000690s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_15 (TestResult : PASS ; Duration : 0.003480s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_15,,,2.327,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_15, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_16 (Item74) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 16 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 0.624
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000044s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [0.624], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 0.624
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000696s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_16 (TestResult : PASS ; Duration : 0.003509s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_16,,,0.624,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_16, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_17 (Item75) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 17 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 1.429
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000035s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [1.429], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 1.429
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000540s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_17 (TestResult : PASS ; Duration : 0.002724s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_17,,,1.429,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_17, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_18 (Item76) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 18 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 1.189
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000043s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [1.189], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 1.189
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000704s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_18 (TestResult : PASS ; Duration : 0.003606s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_18,,,1.189,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_18, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_19 (Item77) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 19 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 0.254
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000034s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [0.254], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 0.254
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000547s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_19 (TestResult : PASS ; Duration : 0.002752s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_19,,,0.254,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_19, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_20 (Item78) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 20 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 2.070
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000049s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [2.070], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 2.070
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000697s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_20 (TestResult : PASS ; Duration : 0.003685s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_20,,,2.070,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_20, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_21 (Item79) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 21 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 2.669
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000044s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [2.669], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 2.669
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000651s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_21 (TestResult : PASS ; Duration : 0.003360s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_21,,,2.669,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_21, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_22 (Item80) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 22 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 3.002
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000034s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [3.002], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 3.002
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000536s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_22 (TestResult : PASS ; Duration : 0.002736s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_22,,,3.002,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_22, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST CSIG_ROW_DIFF_23 (Item81) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 23 
SeperateString ==> ,  
KEY ==> CSIG_ROW_DIFF 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 2.361,
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000050s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*CSIG_Row_Diff_Spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [2.361,], spec is [Item0=0 ; Item1= 25 ; ], mode is [1]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 2.361,
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000702s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST CSIG_row_diff_23 (TestResult : PASS ; Duration : 0.003759s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(CSIG_row_diff_23,,,2.361 ,0, 25,,)

[2016-03-31 23:45:01.31]
Item Name:CSIG_row_diff_23, [0, 25]

[2016-03-31 23:45:01.31]
================================= START TEST COLUMN FAILURES (Item82) =================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Column failures:  (.*?)Applying 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> None
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001883s) +++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Column failures_spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [None], spec is [Item0=None ; ], mode is [5]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> None
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000567s) +++++++++++++++

[2016-03-31 23:45:01.31]
================= END TEST Column failures (TestResult : PASS ; Duration : 0.005051s) =================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Column failures,,,None,None,None,,)

[2016-03-31 23:45:01.31]
Item Name:Column failures, <None>

[2016-03-31 23:45:01.31]
=================================== START TEST ROW FAILURES (Item83) ===================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> CSIG_CATCH 
REGEX ==> Row failures: *?([None0-9]{1,4}) 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> None
+++++++++++++++ [1] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001901s) +++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Row failures_spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [None], spec is [Item0=None ; ], mode is [5]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> None
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000577s) +++++++++++++++

[2016-03-31 23:45:01.31]
=================== END TEST Row failures (TestResult : PASS ; Duration : 0.005176s) ===================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Row failures,,,None,None,None,,)

[2016-03-31 23:45:01.31]
Item Name:Row failures, <None>

[2016-03-31 23:45:01.31]
=================================== START TEST ALS ID CHECK (Item84) ===================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel als --init 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:01.31]
Write to ---> MOBILE , command[sensor --sel als --init(STRING)]

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --init,2,0;return value:0!

[2016-03-31 23:45:01.31]
PostTXToUI ===> 
{
Info ==> sensor --sel als --init 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005463s) +++++++++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel als --init 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --init
Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:45:01.31]
PostRXToUI ===> 
{
Info ==> sensor --sel als --init
Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:01.31]
CATCH_VALUE => Catch OK : Turning off power to 'als' sensor...Turning on power to 'als' sensor...Resetting 'als' sensor...OK

[2016-03-31 23:45:01.31]
READ_COMMAND => Catch string between sensor --sel als --init and [0006451C:3020213A] :-) == Turning off power to 'als' sensor...Turning on power to 'als' sensor...Resetting 'als' sensor...OK

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> Turning off power to 'als' sensor...Turning on power to 'als' sensor...Resetting 'als' sensor...OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.029997s) ++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel als --get chip_id 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:01.31]
Write to ---> MOBILE , command[sensor --sel als --get chip_id(STRING)]

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --get chip_id,2,0;return value:0!

[2016-03-31 23:45:01.31]
PostTXToUI ===> 
{
Info ==> sensor --sel als --get chip_id 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> Turning off power to 'als' sensor...Turning on power to 'als' sensor...Resetting 'als' sensor...OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004607s) +++++++++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel als --get chip_id 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --get chip_id
als:
	chip_id = 0x9B
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:45:01.31]
PostRXToUI ===> 
{
Info ==> sensor --sel als --get chip_id
als:
	chip_id = 0x9B
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:01.31]
CATCH_VALUE => Catch OK : als:	chip_id = 0x9BOK

[2016-03-31 23:45:01.31]
READ_COMMAND => Catch string between sensor --sel als --get chip_id and [0006451C:3020213A] :-) == als:	chip_id = 0x9BOK

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> als:	chip_id = 0x9BOK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.022358s) ++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_ID 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> als:	chip_id = 0x9BOK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_ID 
REGEX ==> chip_id =\s(0x.{2}) 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 0x9B
+++++++++++++++ [6] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000130s) +++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS ID check_spec*] 
 
}

[2016-03-31 23:45:01.31]
JUDGE_SPEC =>  value is [0x9B], spec is [Item0=0x9B ; ], mode is [5]

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 0x9B
+++++++++++++++ [7] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000501s) +++++++++++++++

[2016-03-31 23:45:01.31]
=================== END TEST ALS ID check (TestResult : PASS ; Duration : 0.070740s) ===================

[2016-03-31 23:45:01.31]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS ID check,,,0x9B,0x9B,0x9B,,)

[2016-03-31 23:45:01.31]
Item Name:ALS ID check, <0x9B>

[2016-03-31 23:45:01.31]
=================================== START TEST ALS CH0 DARK (Item85) ===================================

[2016-03-31 23:45:01.31]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --exit 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:01.31]
Write to ---> MOBILE , command[camisp --exit(STRING)]

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --exit,2,0;return value:0!

[2016-03-31 23:45:01.31]
PostTXToUI ===> 
{
Info ==> camisp --exit 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004339s) +++++++++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> RunExit 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --exit
RunExit
Pass
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-03-31 23:45:01.31]
PostRXToUI ===> 
{
Info ==> camisp --exit
RunExit
Pass
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:01.31]
CATCH_VALUE => Catch OK : Pass

[2016-03-31 23:45:01.31]
READ_COMMAND => Catch string between RunExit and [0006451C:3020213A] :-) == Pass

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.011081s) ++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -o 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:01.31]
Write to ---> MOBILE , command[bl -o(STRING)]

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -o,2,0;return value:0!

[2016-03-31 23:45:01.31]
PostTXToUI ===> 
{
Info ==> bl -o 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004213s) +++++++++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -o 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -o
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:01.31]
PostRXToUI ===> 
{
Info ==> bl -o
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:01.31]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:45:01.31]
READ_COMMAND => Catch string between bl -o and [0006451C:3020213A] :-) == OK

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.009630s) ++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> sensor --sel als --init 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:01.31]
Write to ---> MOBILE , command[sensor --sel als --init(STRING)]

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --init,2,0;return value:0!

[2016-03-31 23:45:01.31]
PostTXToUI ===> 
{
Info ==> sensor --sel als --init 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004455s) +++++++++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> sensor --sel als --init 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --init
Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-03-31 23:45:01.31]
PostRXToUI ===> 
{
Info ==> sensor --sel als --init
Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:01.31]
CATCH_VALUE => Catch OK : Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK

[2016-03-31 23:45:01.31]
READ_COMMAND => Catch string between sensor --sel als --init and [0006451C:3020213A] :-) == Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.029717s) ++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 100 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
+++++++++++++++++ [7] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.100122s) +++++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : MAPPING_TABLE:RETURN_VALUE: ===> parameters:
{
PRE_KEY ==> judgeColorKey_color 
MAPPING_TABLE ==> Black ==> sensor --sel als --set gain 140 integration_cycles 179 --sample 5 --stream 
White ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
 
POST_KEY ==> ALS_Command 
}

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
++++++++++++++ [8] MAPPING_TABLE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) ++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*ALS_Command*] 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:01.31]
Write to ---> MOBILE , command[sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-03-31 23:45:01.31]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-03-31 23:45:01.31]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:01.31 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:01.31]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:01.31]
RETURN_VALUE ===> Turning off power to 'als' sensor...
Turning on power to 'als' sensor...
Resetting 'als' sensor...
OK
+++++++++++++++++++++ [9] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005888s) +++++++++++++++++++++

[2016-03-31 23:45:01.31]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> [*ALS_Command*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 30 
PASS_RECEIVE ==> Item0=OK ;  
}

[2016-03-31 23:45:03.33]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 25s:746547us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000
als:		 26s:151416us (+00s:404869us) = ir = 0x00000000, clear = 0x00000000
als:		 26s:556213us (+00s:404797us) = ir = 0x00000000, clear = 0x00000000
als:		 26s:961075us (+00s:404862us) = ir = 0x00000000, clear = 0x00000000
als:		 27s:365892us (+00s:404817us) = ir = 0x00000000, clear = 0x00000000
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-03-31 23:45:03.33]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 25s:746547us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000
als:		 26s:151416us (+00s:404869us) = ir = 0x00000000, clear = 0x00000000
als:		 26s:556213us (+00s:404797us) = ir = 0x00000000, clear = 0x00000000
als:		 26s:961075us (+00s:404862us) = ir = 0x00000000, clear = 0x00000000
als:		 27s:365892us (+00s:404817us) = ir = 0x00000000, clear = 0x00000000
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:03.33 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:03.33]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 25s:746547us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000als:		 26s:151416us (+00s:404869us) = ir = 0x00000000, clear = 0x00000000als:		 26s:556213us (+00s:404797us) = ir = 0x00000000, clear = 0x00000000als:		 26s:961075us (+00s:404862us) = ir = 0x00000000, clear = 0x00000000als:		 27s:365892us (+00s:404817us) = ir = 0x00000000, clear = 0x00000000OK[0006451C:3020213A] :-) 
++++++++++++++ [10] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.071762s) ++++++++++++++

[2016-03-31 23:45:03.33]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_DARK_VALUE 
}

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 25s:746547us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000als:		 26s:151416us (+00s:404869us) = ir = 0x00000000, clear = 0x00000000als:		 26s:556213us (+00s:404797us) = ir = 0x00000000, clear = 0x00000000als:		 26s:961075us (+00s:404862us) = ir = 0x00000000, clear = 0x00000000als:		 27s:365892us (+00s:404817us) = ir = 0x00000000, clear = 0x00000000OK[0006451C:3020213A] :-) 
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:03.33]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
ALS_begin ==> 1 
}

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 25s:746547us (+00s:000000us) = ir = 0x00000000, clear = 0x00000000als:		 26s:151416us (+00s:404869us) = ir = 0x00000000, clear = 0x00000000als:		 26s:556213us (+00s:404797us) = ir = 0x00000000, clear = 0x00000000als:		 26s:961075us (+00s:404862us) = ir = 0x00000000, clear = 0x00000000als:		 27s:365892us (+00s:404817us) = ir = 0x00000000, clear = 0x00000000OK[0006451C:3020213A] :-) 
+++++++++ [12] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000050s) +++++++++

[2016-03-31 23:45:03.33]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> 0
+++++++ [13] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++

[2016-03-31 23:45:03.33]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel_CH0_Dark 
}

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> 0
++++++++++ [14] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:45:03.33]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS CH0 Dark_spec*] 
 
}

[2016-03-31 23:45:03.33]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; Item1=5 ; ], mode is [1]

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> 0
+++++++++++++++ [15] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000515s) +++++++++++++++

[2016-03-31 23:45:03.33]
=================== END TEST ALS CH0 Dark (TestResult : PASS ; Duration : 2.260212s) ===================

[2016-03-31 23:45:03.33]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS CH0 Dark,,,0,0,5,,)

[2016-03-31 23:45:03.33]
Item Name:ALS CH0 Dark, [0,5]

[2016-03-31 23:45:03.33]
=================================== START TEST ALS CH1 DARK (Item86) ===================================

[2016-03-31 23:45:03.33]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel 
}

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> 0
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000027s) ++++++++

[2016-03-31 23:45:03.33]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel_CH1_Dark 
}

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> 0
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000011s) ++++++++++

[2016-03-31 23:45:03.33]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS CH1 Dark_spec*] 
 
}

[2016-03-31 23:45:03.33]
JUDGE_SPEC =>  value is [0], spec is [Item0=0 ; Item1=5 ; ], mode is [1]

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> 0
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000672s) +++++++++++++++

[2016-03-31 23:45:03.33]
=================== END TEST ALS CH1 Dark (TestResult : PASS ; Duration : 0.005012s) ===================

[2016-03-31 23:45:03.33]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS CH1 Dark,,,0,0,5,,)

[2016-03-31 23:45:03.33]
Item Name:ALS CH1 Dark, [0,5]

[2016-03-31 23:45:03.33]
=================================== START TEST ALS CH0 LED1 (Item87) ===================================

[2016-03-31 23:45:03.33]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> LED Out 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:03.33]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:03.33]
Write to ---> FIXTURE , command[LED Out(STRING)]

[2016-03-31 23:45:03.33]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:LED Out,2,0;return value:0!

[2016-03-31 23:45:03.33]
PostTXToUI ===> 
{
Info ==> LED Out 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:03.33 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:03.33]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:03.33]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005195s) +++++++++++++++++++++

[2016-03-31 23:45:03.33]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> LED Out 
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:04.34]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:LED Out
LED Out Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:04.34]
PostRXToUI ===> 
{
Info ==> LED Out
LED Out Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:04.34 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:04.34]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:04.34]
RETURN_VALUE ===> LED Out
LED Out Pass
@_@
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.576573s) ++++++++++++++

[2016-03-31 23:45:04.34]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 300 
}

[2016-03-31 23:45:04.34]
RETURN_VALUE ===> LED Out
LED Out Pass
@_@
+++++++++++++++++ [3] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.305055s) +++++++++++++++++

[2016-03-31 23:45:04.34]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open LED1 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:04.34]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:04.34]
Write to ---> FIXTURE , command[Open LED1(STRING)]

[2016-03-31 23:45:04.34]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open LED1,2,0;return value:0!

[2016-03-31 23:45:04.34]
PostTXToUI ===> 
{
Info ==> Open LED1 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:04.34 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:04.34]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:04.34]
RETURN_VALUE ===> LED Out
LED Out Pass
@_@
+++++++++++++++++++++ [4] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005737s) +++++++++++++++++++++

[2016-03-31 23:45:04.34]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:04.34]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open LED1
Open LED1 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:04.34]
PostRXToUI ===> 
{
Info ==> Open LED1
Open LED1 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:04.34 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:04.34]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:04.34]
RETURN_VALUE ===> Open LED1
Open LED1 Pass
@_@
++++++++++++++ [5] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.115470s) ++++++++++++++

[2016-03-31 23:45:04.34]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 300 
}

[2016-03-31 23:45:05.35]
RETURN_VALUE ===> Open LED1
Open LED1 Pass
@_@
+++++++++++++++++ [6] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.300221s) +++++++++++++++++

[2016-03-31 23:45:05.35]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*ALS_Command*] 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:05.35]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:05.35]
Write to ---> MOBILE , command[sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-03-31 23:45:05.35]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-03-31 23:45:05.35]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:05.35 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:05.35]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:05.35]
RETURN_VALUE ===> Open LED1
Open LED1 Pass
@_@
+++++++++++++++++++++ [7] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006667s) +++++++++++++++++++++

[2016-03-31 23:45:05.35]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> [*ALS_Command*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 30 
PASS_RECEIVE ==> Item0=OK ;  
}

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 29s:200656us (+00s:000000us) = ir = 0x0000010C, clear = 0x00000D28
als:		 29s:605523us (+00s:404867us) = ir = 0x0000010C, clear = 0x00000D28
als:		 30s:010348us (+00s:404825us) = ir = 0x0000010C, clear = 0x00000D28
als:		 30s:415205us (+00s:404857us) = ir = 0x0000010C, clear = 0x00000D27
als:		 30s:820059us (+00s:404854us) = ir = 0x0000010C, clear = 0x00000D27
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-03-31 23:45:07.37]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 29s:200656us (+00s:000000us) = ir = 0x0000010C, clear = 0x00000D28
als:		 29s:605523us (+00s:404867us) = ir = 0x0000010C, clear = 0x00000D28
als:		 30s:010348us (+00s:404825us) = ir = 0x0000010C, clear = 0x00000D28
als:		 30s:415205us (+00s:404857us) = ir = 0x0000010C, clear = 0x00000D27
als:		 30s:820059us (+00s:404854us) = ir = 0x0000010C, clear = 0x00000D27
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:07.37 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:07.37]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 29s:200656us (+00s:000000us) = ir = 0x0000010C, clear = 0x00000D28als:		 29s:605523us (+00s:404867us) = ir = 0x0000010C, clear = 0x00000D28als:		 30s:010348us (+00s:404825us) = ir = 0x0000010C, clear = 0x00000D28als:		 30s:415205us (+00s:404857us) = ir = 0x0000010C, clear = 0x00000D27als:		 30s:820059us (+00s:404854us) = ir = 0x0000010C, clear = 0x00000D27OK[0006451C:3020213A] :-) 
++++++++++++++ [8] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.068601s) ++++++++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
ALS_begin ==> 1 
}

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 29s:200656us (+00s:000000us) = ir = 0x0000010C, clear = 0x00000D28als:		 29s:605523us (+00s:404867us) = ir = 0x0000010C, clear = 0x00000D28als:		 30s:010348us (+00s:404825us) = ir = 0x0000010C, clear = 0x00000D28als:		 30s:415205us (+00s:404857us) = ir = 0x0000010C, clear = 0x00000D27als:		 30s:820059us (+00s:404854us) = ir = 0x0000010C, clear = 0x00000D27OK[0006451C:3020213A] :-) 
+++++++++ [9] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000054s) +++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> 3367.6
+++++++ [10] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) +++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_LED1 
}

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> 3367.6
++++++++++ [11] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000005s) ++++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS CH0 LED1_spec*] 
 
}

[2016-03-31 23:45:07.37]
JUDGE_SPEC =>  value is [3367.6], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> 3367.6
+++++++++++++++ [12] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000503s) +++++++++++++++

[2016-03-31 23:45:07.37]
=================== END TEST ALS CH0 LED1 (TestResult : PASS ; Duration : 3.401777s) ===================

[2016-03-31 23:45:07.37]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS CH0 LED1,,,3367.6,NA,NA,,)

[2016-03-31 23:45:07.37]
Item Name:ALS CH0 LED1, {NA}

[2016-03-31 23:45:07.37]
=================================== START TEST ALS CH0 LED2 (Item88) ===================================

[2016-03-31 23:45:07.37]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close LED1 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:07.37]
Write to ---> FIXTURE , command[Close LED1(STRING)]

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close LED1,2,0;return value:0!

[2016-03-31 23:45:07.37]
PostTXToUI ===> 
{
Info ==> Close LED1 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:07.37 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:07.37]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004388s) +++++++++++++++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close LED1
Close LED1 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:07.37]
PostRXToUI ===> 
{
Info ==> Close LED1
Close LED1 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:07.37 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:07.37]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> Close LED1
Close LED1 Pass
@_@
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.014220s) ++++++++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open LED2 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:07.37]
Write to ---> FIXTURE , command[Open LED2(STRING)]

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open LED2,2,0;return value:0!

[2016-03-31 23:45:07.37]
PostTXToUI ===> 
{
Info ==> Open LED2 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:07.37 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:07.37]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> Close LED1
Close LED1 Pass
@_@
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004222s) +++++++++++++++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open LED2
Open LED2 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:07.37]
PostRXToUI ===> 
{
Info ==> Open LED2
Open LED2 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:07.37 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:07.37]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> Open LED2
Open LED2 Pass
@_@
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.106655s) ++++++++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 300 
}

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> Open LED2
Open LED2 Pass
@_@
+++++++++++++++++ [5] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.300527s) +++++++++++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*ALS_Command*] 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:07.37]
Write to ---> MOBILE , command[sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-03-31 23:45:07.37]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-03-31 23:45:07.37]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:07.37 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:07.37]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:07.37]
RETURN_VALUE ===> Open LED2
Open LED2 Pass
@_@
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006506s) +++++++++++++++++++++

[2016-03-31 23:45:07.37]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> [*ALS_Command*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 30 
PASS_RECEIVE ==> Item0=OK ;  
}

[2016-03-31 23:45:09.39]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 31s:727533us (+00s:000000us) = ir = 0x0000010F, clear = 0x00000D5A
als:		 32s:132347us (+00s:404814us) = ir = 0x0000010E, clear = 0x00000D59
als:		 32s:537212us (+00s:404865us) = ir = 0x0000010E, clear = 0x00000D59
als:		 32s:942030us (+00s:404818us) = ir = 0x0000010E, clear = 0x00000D58
als:		 33s:346909us (+00s:404879us) = ir = 0x0000010E, clear = 0x00000D59
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-03-31 23:45:09.39]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 31s:727533us (+00s:000000us) = ir = 0x0000010F, clear = 0x00000D5A
als:		 32s:132347us (+00s:404814us) = ir = 0x0000010E, clear = 0x00000D59
als:		 32s:537212us (+00s:404865us) = ir = 0x0000010E, clear = 0x00000D59
als:		 32s:942030us (+00s:404818us) = ir = 0x0000010E, clear = 0x00000D58
als:		 33s:346909us (+00s:404879us) = ir = 0x0000010E, clear = 0x00000D59
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:09.39 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:09.39]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 31s:727533us (+00s:000000us) = ir = 0x0000010F, clear = 0x00000D5Aals:		 32s:132347us (+00s:404814us) = ir = 0x0000010E, clear = 0x00000D59als:		 32s:537212us (+00s:404865us) = ir = 0x0000010E, clear = 0x00000D59als:		 32s:942030us (+00s:404818us) = ir = 0x0000010E, clear = 0x00000D58als:		 33s:346909us (+00s:404879us) = ir = 0x0000010E, clear = 0x00000D59OK[0006451C:3020213A] :-) 
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.070367s) ++++++++++++++

[2016-03-31 23:45:09.39]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
ALS_begin ==> 1 
}

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 31s:727533us (+00s:000000us) = ir = 0x0000010F, clear = 0x00000D5Aals:		 32s:132347us (+00s:404814us) = ir = 0x0000010E, clear = 0x00000D59als:		 32s:537212us (+00s:404865us) = ir = 0x0000010E, clear = 0x00000D59als:		 32s:942030us (+00s:404818us) = ir = 0x0000010E, clear = 0x00000D58als:		 33s:346909us (+00s:404879us) = ir = 0x0000010E, clear = 0x00000D59OK[0006451C:3020213A] :-) 
+++++++++ [8] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000069s) +++++++++

[2016-03-31 23:45:09.39]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> 3417
++++++++ [9] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) ++++++++

[2016-03-31 23:45:09.39]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_LED2 
}

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> 3417
++++++++++ [10] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:09.39]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS CH0 LED2_spec*] 
 
}

[2016-03-31 23:45:09.39]
JUDGE_SPEC =>  value is [3417], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> 3417
+++++++++++++++ [11] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000556s) +++++++++++++++

[2016-03-31 23:45:09.39]
=================== END TEST ALS CH0 LED2 (TestResult : PASS ; Duration : 2.522235s) ===================

[2016-03-31 23:45:09.39]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS CH0 LED2,,,3417,NA,NA,,)

[2016-03-31 23:45:09.39]
Item Name:ALS CH0 LED2, {NA}

[2016-03-31 23:45:09.39]
=================================== START TEST ALS CH0 LED3 (Item89) ===================================

[2016-03-31 23:45:09.39]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close LED2 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:09.39]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:09.39]
Write to ---> FIXTURE , command[Close LED2(STRING)]

[2016-03-31 23:45:09.39]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close LED2,2,0;return value:0!

[2016-03-31 23:45:09.39]
PostTXToUI ===> 
{
Info ==> Close LED2 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:09.39 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:09.39]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005753s) +++++++++++++++++++++

[2016-03-31 23:45:09.39]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:09.39]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close LED2
Close LED2 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:09.39]
PostRXToUI ===> 
{
Info ==> Close LED2
Close LED2 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:09.39 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:09.39]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> Close LED2
Close LED2 Pass
@_@
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.013448s) ++++++++++++++

[2016-03-31 23:45:09.39]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open LED3 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:09.39]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:09.39]
Write to ---> FIXTURE , command[Open LED3(STRING)]

[2016-03-31 23:45:09.39]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open LED3,2,0;return value:0!

[2016-03-31 23:45:09.39]
PostTXToUI ===> 
{
Info ==> Open LED3 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:09.39 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:09.39]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> Close LED2
Close LED2 Pass
@_@
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004184s) +++++++++++++++++++++

[2016-03-31 23:45:09.39]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:09.39]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open LED3
Open LED3 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:09.39]
PostRXToUI ===> 
{
Info ==> Open LED3
Open LED3 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:09.39 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:09.39]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:09.39]
RETURN_VALUE ===> Open LED3
Open LED3 Pass
@_@
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.107448s) ++++++++++++++

[2016-03-31 23:45:09.39]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 300 
}

[2016-03-31 23:45:10.310]
RETURN_VALUE ===> Open LED3
Open LED3 Pass
@_@
+++++++++++++++++ [5] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.304971s) +++++++++++++++++

[2016-03-31 23:45:10.310]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*ALS_Command*] 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:10.310]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:10.310]
Write to ---> MOBILE , command[sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-03-31 23:45:10.310]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-03-31 23:45:10.310]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:10.310 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:10.310]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:10.310]
RETURN_VALUE ===> Open LED3
Open LED3 Pass
@_@
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006750s) +++++++++++++++++++++

[2016-03-31 23:45:10.310]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> [*ALS_Command*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 30 
PASS_RECEIVE ==> Item0=OK ;  
}

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 34s:277469us (+00s:000000us) = ir = 0x00000115, clear = 0x00000DA2
als:		 34s:682327us (+00s:404858us) = ir = 0x00000115, clear = 0x00000DA1
als:		 35s:087180us (+00s:404853us) = ir = 0x00000114, clear = 0x00000DA1
als:		 35s:492051us (+00s:404871us) = ir = 0x00000114, clear = 0x00000DA0
als:		 35s:896860us (+00s:404809us) = ir = 0x00000114, clear = 0x00000DA0
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-03-31 23:45:12.312]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 34s:277469us (+00s:000000us) = ir = 0x00000115, clear = 0x00000DA2
als:		 34s:682327us (+00s:404858us) = ir = 0x00000115, clear = 0x00000DA1
als:		 35s:087180us (+00s:404853us) = ir = 0x00000114, clear = 0x00000DA1
als:		 35s:492051us (+00s:404871us) = ir = 0x00000114, clear = 0x00000DA0
als:		 35s:896860us (+00s:404809us) = ir = 0x00000114, clear = 0x00000DA0
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:12.312 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:12.312]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 34s:277469us (+00s:000000us) = ir = 0x00000115, clear = 0x00000DA2als:		 34s:682327us (+00s:404858us) = ir = 0x00000115, clear = 0x00000DA1als:		 35s:087180us (+00s:404853us) = ir = 0x00000114, clear = 0x00000DA1als:		 35s:492051us (+00s:404871us) = ir = 0x00000114, clear = 0x00000DA0als:		 35s:896860us (+00s:404809us) = ir = 0x00000114, clear = 0x00000DA0OK[0006451C:3020213A] :-) 
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.068608s) ++++++++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
ALS_begin ==> 1 
}

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 34s:277469us (+00s:000000us) = ir = 0x00000115, clear = 0x00000DA2als:		 34s:682327us (+00s:404858us) = ir = 0x00000115, clear = 0x00000DA1als:		 35s:087180us (+00s:404853us) = ir = 0x00000114, clear = 0x00000DA1als:		 35s:492051us (+00s:404871us) = ir = 0x00000114, clear = 0x00000DA0als:		 35s:896860us (+00s:404809us) = ir = 0x00000114, clear = 0x00000DA0OK[0006451C:3020213A] :-) 
+++++++++ [8] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000053s) +++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> 3488.8
++++++++ [9] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000015s) ++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_LED3 
}

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> 3488.8
++++++++++ [10] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS CH0 LED3_spec*] 
 
}

[2016-03-31 23:45:12.312]
JUDGE_SPEC =>  value is [3488.8], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> 3488.8
+++++++++++++++ [11] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000504s) +++++++++++++++

[2016-03-31 23:45:12.312]
=================== END TEST ALS CH0 LED3 (TestResult : PASS ; Duration : 2.526510s) ===================

[2016-03-31 23:45:12.312]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS CH0 LED3,,,3488.8,NA,NA,,)

[2016-03-31 23:45:12.312]
Item Name:ALS CH0 LED3, {NA}

[2016-03-31 23:45:12.312]
=================================== START TEST ALS CH0 LED4 (Item90) ===================================

[2016-03-31 23:45:12.312]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close LED3 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:12.312]
Write to ---> FIXTURE , command[Close LED3(STRING)]

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close LED3,2,0;return value:0!

[2016-03-31 23:45:12.312]
PostTXToUI ===> 
{
Info ==> Close LED3 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:12.312 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:12.312]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005794s) +++++++++++++++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close LED3
Close LED3 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:12.312]
PostRXToUI ===> 
{
Info ==> Close LED3
Close LED3 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:12.312 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:12.312]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> Close LED3
Close LED3 Pass
@_@
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.014820s) ++++++++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open LED4 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:12.312]
Write to ---> FIXTURE , command[Open LED4(STRING)]

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open LED4,2,0;return value:0!

[2016-03-31 23:45:12.312]
PostTXToUI ===> 
{
Info ==> Open LED4 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:12.312 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:12.312]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> Close LED3
Close LED3 Pass
@_@
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004160s) +++++++++++++++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open LED4
Open LED4 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:12.312]
PostRXToUI ===> 
{
Info ==> Open LED4
Open LED4 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:12.312 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:12.312]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> Open LED4
Open LED4 Pass
@_@
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.107197s) ++++++++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 300 
}

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> Open LED4
Open LED4 Pass
@_@
+++++++++++++++++ [5] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.301932s) +++++++++++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*ALS_Command*] 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:12.312]
Write to ---> MOBILE , command[sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-03-31 23:45:12.312]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-03-31 23:45:12.312]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:12.312 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:12.312]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:12.312]
RETURN_VALUE ===> Open LED4
Open LED4 Pass
@_@
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006947s) +++++++++++++++++++++

[2016-03-31 23:45:12.312]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> [*ALS_Command*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 30 
PASS_RECEIVE ==> Item0=OK ;  
}

[2016-03-31 23:45:14.314]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 36s:817672us (+00s:000000us) = ir = 0x0000010F, clear = 0x00000D62
als:		 37s:222489us (+00s:404817us) = ir = 0x0000010F, clear = 0x00000D61
als:		 37s:627348us (+00s:404859us) = ir = 0x0000010F, clear = 0x00000D60
als:		 38s:032210us (+00s:404862us) = ir = 0x0000010F, clear = 0x00000D60
als:		 38s:437054us (+00s:404844us) = ir = 0x0000010F, clear = 0x00000D60
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-03-31 23:45:14.314]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 36s:817672us (+00s:000000us) = ir = 0x0000010F, clear = 0x00000D62
als:		 37s:222489us (+00s:404817us) = ir = 0x0000010F, clear = 0x00000D61
als:		 37s:627348us (+00s:404859us) = ir = 0x0000010F, clear = 0x00000D60
als:		 38s:032210us (+00s:404862us) = ir = 0x0000010F, clear = 0x00000D60
als:		 38s:437054us (+00s:404844us) = ir = 0x0000010F, clear = 0x00000D60
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:14.314 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:14.314]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 36s:817672us (+00s:000000us) = ir = 0x0000010F, clear = 0x00000D62als:		 37s:222489us (+00s:404817us) = ir = 0x0000010F, clear = 0x00000D61als:		 37s:627348us (+00s:404859us) = ir = 0x0000010F, clear = 0x00000D60als:		 38s:032210us (+00s:404862us) = ir = 0x0000010F, clear = 0x00000D60als:		 38s:437054us (+00s:404844us) = ir = 0x0000010F, clear = 0x00000D60OK[0006451C:3020213A] :-) 
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.070741s) ++++++++++++++

[2016-03-31 23:45:14.314]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
ALS_begin ==> 1 
}

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 36s:817672us (+00s:000000us) = ir = 0x0000010F, clear = 0x00000D62als:		 37s:222489us (+00s:404817us) = ir = 0x0000010F, clear = 0x00000D61als:		 37s:627348us (+00s:404859us) = ir = 0x0000010F, clear = 0x00000D60als:		 38s:032210us (+00s:404862us) = ir = 0x0000010F, clear = 0x00000D60als:		 38s:437054us (+00s:404844us) = ir = 0x0000010F, clear = 0x00000D60OK[0006451C:3020213A] :-) 
+++++++++ [8] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000067s) +++++++++

[2016-03-31 23:45:14.314]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> 3424.6
++++++++ [9] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000018s) ++++++++

[2016-03-31 23:45:14.314]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_LED4 
}

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> 3424.6
++++++++++ [10] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:14.314]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS CH0 LED4_spec*] 
 
}

[2016-03-31 23:45:14.314]
JUDGE_SPEC =>  value is [3424.6], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> 3424.6
+++++++++++++++ [11] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000556s) +++++++++++++++

[2016-03-31 23:45:14.314]
=================== END TEST ALS CH0 LED4 (TestResult : PASS ; Duration : 2.527499s) ===================

[2016-03-31 23:45:14.314]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS CH0 LED4,,,3424.6,NA,NA,,)

[2016-03-31 23:45:14.314]
Item Name:ALS CH0 LED4, {NA}

[2016-03-31 23:45:14.314]
=============================== START TEST ALS CH0 LED5(WHITE) (Item91) ===============================

[2016-03-31 23:45:14.314]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close LED4 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:14.314]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:14.314]
Write to ---> FIXTURE , command[Close LED4(STRING)]

[2016-03-31 23:45:14.314]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close LED4,2,0;return value:0!

[2016-03-31 23:45:14.314]
PostTXToUI ===> 
{
Info ==> Close LED4 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:14.314 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:14.314]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005635s) +++++++++++++++++++++

[2016-03-31 23:45:14.314]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:14.314]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close LED4
Close LED4 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:14.314]
PostRXToUI ===> 
{
Info ==> Close LED4
Close LED4 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:14.314 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:14.314]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> Close LED4
Close LED4 Pass
@_@
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.017016s) ++++++++++++++

[2016-03-31 23:45:14.314]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Open LED5 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:14.314]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:14.314]
Write to ---> FIXTURE , command[Open LED5(STRING)]

[2016-03-31 23:45:14.314]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Open LED5,2,0;return value:0!

[2016-03-31 23:45:14.314]
PostTXToUI ===> 
{
Info ==> Open LED5 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:14.314 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:14.314]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> Close LED4
Close LED4 Pass
@_@
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004228s) +++++++++++++++++++++

[2016-03-31 23:45:14.314]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:14.314]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Open LED5
Open LED5 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:14.314]
PostRXToUI ===> 
{
Info ==> Open LED5
Open LED5 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:14.314 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:14.314]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:14.314]
RETURN_VALUE ===> Open LED5
Open LED5 Pass
@_@
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.106501s) ++++++++++++++

[2016-03-31 23:45:14.314]
^=^ Begin subItem : WAIT_MS:RETURN_VALUE: ===> parameters:
{
TIME ==> 300 
}

[2016-03-31 23:45:15.315]
RETURN_VALUE ===> Open LED5
Open LED5 Pass
@_@
+++++++++++++++++ [5] WAIT_MS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.304992s) +++++++++++++++++

[2016-03-31 23:45:15.315]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*ALS_Command*] 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:15.315]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:15.315]
Write to ---> MOBILE , command[sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-03-31 23:45:15.315]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-03-31 23:45:15.315]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:15.315 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:15.315]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:15.315]
RETURN_VALUE ===> Open LED5
Open LED5 Pass
@_@
+++++++++++++++++++++ [6] SEND_COMMAND: (TestResult : PASS ; Duration : 0.006066s) +++++++++++++++++++++

[2016-03-31 23:45:15.315]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> [*ALS_Command*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 30 
PASS_RECEIVE ==> Item0=OK ;  
}

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 39s:363522us (+00s:000000us) = ir = 0x00000111, clear = 0x00000D86
als:		 39s:768384us (+00s:404862us) = ir = 0x00000111, clear = 0x00000D84
als:		 40s:173254us (+00s:404870us) = ir = 0x00000111, clear = 0x00000D84
als:		 40s:578120us (+00s:404866us) = ir = 0x00000110, clear = 0x00000D83
als:		 40s:982938us (+00s:404818us) = ir = 0x00000111, clear = 0x00000D84
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:30.000000);return value:0!

[2016-03-31 23:45:17.317]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 39s:363522us (+00s:000000us) = ir = 0x00000111, clear = 0x00000D86
als:		 39s:768384us (+00s:404862us) = ir = 0x00000111, clear = 0x00000D84
als:		 40s:173254us (+00s:404870us) = ir = 0x00000111, clear = 0x00000D84
als:		 40s:578120us (+00s:404866us) = ir = 0x00000110, clear = 0x00000D83
als:		 40s:982938us (+00s:404818us) = ir = 0x00000111, clear = 0x00000D84
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:17.317 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:17.317]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 39s:363522us (+00s:000000us) = ir = 0x00000111, clear = 0x00000D86als:		 39s:768384us (+00s:404862us) = ir = 0x00000111, clear = 0x00000D84als:		 40s:173254us (+00s:404870us) = ir = 0x00000111, clear = 0x00000D84als:		 40s:578120us (+00s:404866us) = ir = 0x00000110, clear = 0x00000D83als:		 40s:982938us (+00s:404818us) = ir = 0x00000111, clear = 0x00000D84OK[0006451C:3020213A] :-) 
++++++++++++++ [7] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.072792s) ++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
ALS_begin ==> 1 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --streamSetting parameter 'gain' to 64 for 'als'Setting parameter 'integration_cycles' to 144 for 'als'Capturing 5 samples from:als @ 2.49 HzOutput format = abstime : relativetime : sampleals:		 39s:363522us (+00s:000000us) = ir = 0x00000111, clear = 0x00000D86als:		 39s:768384us (+00s:404862us) = ir = 0x00000111, clear = 0x00000D84als:		 40s:173254us (+00s:404870us) = ir = 0x00000111, clear = 0x00000D84als:		 40s:578120us (+00s:404866us) = ir = 0x00000110, clear = 0x00000D83als:		 40s:982938us (+00s:404818us) = ir = 0x00000111, clear = 0x00000D84OK[0006451C:3020213A] :-) 
+++++++++ [8] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000066s) +++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 3460.2
++++++++ [9] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000017s) ++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_LED5_Clear_Channel 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 3460.2
++++++++++ [10] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS CH0 LED5(White)_spec*] 
 
}

[2016-03-31 23:45:17.317]
JUDGE_SPEC =>  value is [3460.2], spec is [Item0=950 ; Item1=105600 ; ], mode is [1]

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 3460.2
+++++++++++++++ [11] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000579s) +++++++++++++++

[2016-03-31 23:45:17.317]
=============== END TEST ALS CH0 LED5(White) (TestResult : PASS ; Duration : 2.532718s) ===============

[2016-03-31 23:45:17.317]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS CH0 LED5(White),,,3460.2,950,105600,,)

[2016-03-31 23:45:17.317]
Item Name:ALS CH0 LED5(White), [950,105600]

[2016-03-31 23:45:17.317]
=============================== START TEST ALS CH1 LED5(WHITE) (Item92) ===============================

[2016-03-31 23:45:17.317]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 272.8
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000021s) ++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_LED5_IR_Channel 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 272.8
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS CH1 LED5(White)_spec*] 
 
}

[2016-03-31 23:45:17.317]
JUDGE_SPEC =>  value is [272.8], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 272.8
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000529s) +++++++++++++++

[2016-03-31 23:45:17.317]
=============== END TEST ALS CH1 LED5(White) (TestResult : PASS ; Duration : 0.003934s) ===============

[2016-03-31 23:45:17.317]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS CH1 LED5(White),,,272.8,NA,NA,,)

[2016-03-31 23:45:17.317]
Item Name:ALS CH1 LED5(White), {NA}

[2016-03-31 23:45:17.317]
============================= START TEST ALS_AR_MIN_MAX30(WHITE) (Item93) =============================

[2016-03-31 23:45:17.317]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Close LED5 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:17.317]
Write to ---> FIXTURE , command[Close LED5(STRING)]

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Close LED5,2,0;return value:0!

[2016-03-31 23:45:17.317]
PostTXToUI ===> 
{
Info ==> Close LED5 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:17.317 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:17.317]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005497s) +++++++++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==>  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
PASS_RECEIVE ==> Item0=Pass ;  
}

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Close LED5
Close LED5 Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:17.317]
PostRXToUI ===> 
{
Info ==> Close LED5
Close LED5 Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:17.317 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:17.317]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> Close LED5
Close LED5 Pass
@_@
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.015275s) ++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : COMPARE_WITH_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_LED1,ALS_LED2,ALS_LED3,ALS_LED4 
TYPE ==> MIN 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 3367.60000
++++++++++++ [3] COMPARE_WITH_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) ++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_MIN 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 3367.60000
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : COMPARE_WITH_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_LED1,ALS_LED2,ALS_LED3,ALS_LED4 
TYPE ==> MAX 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 3488.80000
++++++++++++ [5] COMPARE_WITH_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000019s) ++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_MAX 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 3488.80000
++++++++++ [6] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> (([*ALS_MIN*])/([*ALS_MAX*]))*100 
DecimalPlaces ==> 5 
}

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 96.52602
+++++++++++++++ [7] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000205s) +++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS_AR_MIN_MAX30(White)_spec*] 
 
}

[2016-03-31 23:45:17.317]
JUDGE_SPEC =>  value is [96.52602], spec is [Item0=65 ; Item1=100 ; ], mode is [1]

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 96.52602
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000652s) +++++++++++++++

[2016-03-31 23:45:17.317]
============= END TEST ALS_AR_MIN_MAX30(White) (TestResult : PASS ; Duration : 0.030261s) =============

[2016-03-31 23:45:17.317]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS_AR_MIN_MAX30(White),,,96.52602,65,100,,)

[2016-03-31 23:45:17.317]
Item Name:ALS_AR_MIN_MAX30(White), [65,100]

[2016-03-31 23:45:17.317]
============================= START TEST ALS CH0 COMBINED BL HIGH (Item97) =============================

[2016-03-31 23:45:17.317]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pattern 4 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:17.317]
Write to ---> MOBILE , command[pattern 4(STRING)]

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pattern 4,2,0;return value:0!

[2016-03-31 23:45:17.317]
PostTXToUI ===> 
{
Info ==> pattern 4 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:17.317 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:17.317]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004392s) +++++++++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> pattern 4 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pattern 4
Finish!
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:17.317]
PostRXToUI ===> 
{
Info ==> pattern 4
Finish!
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:17.317 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:17.317]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:17.317]
CATCH_VALUE => Catch OK : Finish!

[2016-03-31 23:45:17.317]
READ_COMMAND => Catch string between pattern 4 and [0006451C:3020213A] :-) == Finish!

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> Finish!
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.037471s) ++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> bl -d 1959 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:17.317]
Write to ---> MOBILE , command[bl -d 1959(STRING)]

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:bl -d 1959,2,0;return value:0!

[2016-03-31 23:45:17.317]
PostTXToUI ===> 
{
Info ==> bl -d 1959 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:17.317 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:17.317]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> Finish!
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004204s) +++++++++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> bl -d 1959 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:bl -d 1959
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:17.317]
PostRXToUI ===> 
{
Info ==> bl -d 1959
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:17.317 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:17.317]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:17.317]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:45:17.317]
READ_COMMAND => Catch string between bl -d 1959 and [0006451C:3020213A] :-) == OK

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.009443s) ++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> [*ALS_Command*] 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:17.317]
Write to ---> MOBILE , command[sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream(STRING)]

[2016-03-31 23:45:17.317]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream,2,0;return value:0!

[2016-03-31 23:45:17.317]
PostTXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:17.317 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:17.317]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:17.317]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [5] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004597s) +++++++++++++++++++++

[2016-03-31 23:45:17.317]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> [*ALS_Command*] 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 60 
END ==> :-) 
}

[2016-03-31 23:45:19.319]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 41s:601958us (+00s:000000us) = ir = 0x00000001, clear = 0x00000002
als:		 42s:006833us (+00s:404875us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:411687us (+00s:404854us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:816547us (+00s:404860us) = ir = 0x00000000, clear = 0x00000001
als:		 43s:221404us (+00s:404857us) = ir = 0x00000000, clear = 0x00000001
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:60.000000);return value:0!

[2016-03-31 23:45:19.319]
PostRXToUI ===> 
{
Info ==> sensor --sel als --set gain 64 integration_cycles 144 --sample 5 --stream
Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 41s:601958us (+00s:000000us) = ir = 0x00000001, clear = 0x00000002
als:		 42s:006833us (+00s:404875us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:411687us (+00s:404854us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:816547us (+00s:404860us) = ir = 0x00000000, clear = 0x00000001
als:		 43s:221404us (+00s:404857us) = ir = 0x00000000, clear = 0x00000001
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:19.319 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:19.319]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:19.319]
CATCH_VALUE => Catch OK : Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 41s:601958us (+00s:000000us) = ir = 0x00000001, clear = 0x00000002
als:		 42s:006833us (+00s:404875us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:411687us (+00s:404854us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:816547us (+00s:404860us) = ir = 0x00000000, clear = 0x00000001
als:		 43s:221404us (+00s:404857us) = ir = 0x00000000, clear = 0x00000001
OK

[2016-03-31 23:45:19.319]
READ_COMMAND => Catch string between [*ALS_Command*] and [0006451C:3020213A] :-) == Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 41s:601958us (+00s:000000us) = ir = 0x00000001, clear = 0x00000002
als:		 42s:006833us (+00s:404875us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:411687us (+00s:404854us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:816547us (+00s:404860us) = ir = 0x00000000, clear = 0x00000001
als:		 43s:221404us (+00s:404857us) = ir = 0x00000000, clear = 0x00000001
OK

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 41s:601958us (+00s:000000us) = ir = 0x00000001, clear = 0x00000002
als:		 42s:006833us (+00s:404875us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:411687us (+00s:404854us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:816547us (+00s:404860us) = ir = 0x00000000, clear = 0x00000001
als:		 43s:221404us (+00s:404857us) = ir = 0x00000000, clear = 0x00000001
OK
++++++++++++++ [6] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 2.071034s) ++++++++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : AVERAGE_ALS_ClearAndIR:RETURN_VALUE: ===> parameters:
{
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> Setting parameter 'gain' to 64 for 'als'
Setting parameter 'integration_cycles' to 144 for 'als'
Capturing 5 samples from:
als @ 2.49 Hz

Output format = abstime : relativetime : sample
als:		 41s:601958us (+00s:000000us) = ir = 0x00000001, clear = 0x00000002
als:		 42s:006833us (+00s:404875us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:411687us (+00s:404854us) = ir = 0x00000000, clear = 0x00000001
als:		 42s:816547us (+00s:404860us) = ir = 0x00000000, clear = 0x00000001
als:		 43s:221404us (+00s:404857us) = ir = 0x00000000, clear = 0x00000001
OK
+++++++++ [7] AVERAGE_ALS_ClearAndIR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000054s) +++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel 
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 1.2
++++++++ [8] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) ++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_Clear_channel_BL_HIGH 
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 1.2
++++++++++ [9] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS Ch0 Combined BL High_spec*] 
 
}

[2016-03-31 23:45:19.319]
JUDGE_SPEC =>  value is [1.2], spec is [Item0=0 ; Item1= ; ], mode is [1]

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 1.2
+++++++++++++++ [10] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000521s) +++++++++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ALS Ch0 Combined BL High_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 1.2
+++++++++++ [11] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) +++++++++++

[2016-03-31 23:45:19.319]
============= END TEST ALS Ch0 Combined BL High (TestResult : PASS ; Duration : 2.143425s) =============

[2016-03-31 23:45:19.319]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS Ch0 Combined BL High,,,1.2,0,NA,,)

[2016-03-31 23:45:19.319]
Item Name:ALS Ch0 Combined BL High, [0,]

[2016-03-31 23:45:19.319]
============================= START TEST ALS CH1 COMBINED BL HIGH (Item98) =============================

[2016-03-31 23:45:19.319]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel 
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 0.2
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) ++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> ALS_IR_channel_BL_HIGH 
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 0.2
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS Ch1 Combined BL High_spec*] 
 
}

[2016-03-31 23:45:19.319]
JUDGE_SPEC =>  value is [0.2], spec is [Item0=0 ; Item1= ; ], mode is [1]

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 0.2
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000694s) +++++++++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ALS Ch1 Combined BL High_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 0.2
+++++++++++ [4] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) +++++++++++

[2016-03-31 23:45:19.319]
============= END TEST ALS Ch1 Combined BL High (TestResult : PASS ; Duration : 0.006301s) =============

[2016-03-31 23:45:19.319]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS Ch1 Combined BL High,,,0.2,0,NA,,)

[2016-03-31 23:45:19.319]
Item Name:ALS Ch1 Combined BL High, [0,]

[2016-03-31 23:45:19.319]
========================== START TEST ALS CH0 BACKLIGHT LEAKAGE HIGH (Item99) ==========================

[2016-03-31 23:45:19.319]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*ALS_Clear_channel_BL_HIGH*])-([*ALS_Clear_channel_CH0_Dark*]) 
DecimalPlaces ==> 5 
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 1.20000
+++++++++++++++ [1] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000112s) +++++++++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS Ch0 Backlight Leakage HIGH_spec*] 
 
}

[2016-03-31 23:45:19.319]
JUDGE_SPEC =>  value is [1.20000], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 1.20000
+++++++++++++++ [2] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000674s) +++++++++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ALS Ch0 Backlight Leakage HIGH_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 1.20000
+++++++++++ [3] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) +++++++++++

[2016-03-31 23:45:19.319]
========== END TEST ALS Ch0 Backlight Leakage HIGH (TestResult : PASS ; Duration : 0.004874s) ==========

[2016-03-31 23:45:19.319]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS Ch0 Backlight Leakage HIGH,,,1.20000,NA,NA,,)

[2016-03-31 23:45:19.319]
Item Name:ALS Ch0 Backlight Leakage HIGH, {NA}

[2016-03-31 23:45:19.319]
========================= START TEST ALS CH1 BACKLIGHT LEAKAGE HIGH (Item100) =========================

[2016-03-31 23:45:19.319]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> led in 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:19.319]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:19.319]
Write to ---> FIXTURE , command[led in(STRING)]

[2016-03-31 23:45:19.319]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:led in,2,0;return value:0!

[2016-03-31 23:45:19.319]
PostTXToUI ===> 
{
Info ==> led in 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:19.319 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:19.319]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:19.319]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005333s) +++++++++++++++++++++

[2016-03-31 23:45:19.319]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> led in 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-03-31 23:45:19.319]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:led in
led in Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:19.319]
PostRXToUI ===> 
{
Info ==> led in
led in Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:19.319 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:19.319]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : led in Pass

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between led in and @_@ == led in Pass

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> led in Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.319313s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CALCULATOR:RETURN_VALUE: ===> parameters:
{
Expression ==> ([*ALS_IR_channel_BL_HIGH*])-([*ALS_IR_channel_CH1_Dark*]) 
DecimalPlaces ==> 5 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 0.20000
+++++++++++++++ [3] CALCULATOR:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000122s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*ALS Ch1 Backlight Leakage HIGH_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [0.20000], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 0.20000
+++++++++++++++ [4] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000579s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Unit ==> [*ALS Ch1 Backlight Leakage HIGH_units*] 
IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 0.20000
+++++++++++ [5] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000016s) +++++++++++

[2016-03-31 23:45:20.320]
========== END TEST ALS Ch1 Backlight Leakage HIGH (TestResult : PASS ; Duration : 0.331661s) ==========

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(ALS Ch1 Backlight Leakage HIGH,,,0.20000,NA,NA,,)

[2016-03-31 23:45:20.320]
Item Name:ALS Ch1 Backlight Leakage HIGH, {NA}

[2016-03-31 23:45:20.320]
================================= START TEST CHESTNUT PWR_EN (Item101) =================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> pmuadc --read amuxa5 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[pmuadc --read amuxa5(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:pmuadc --read amuxa5,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> pmuadc --read amuxa5 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005647s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> pmuadc --read amuxa5 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:pmuadc --read amuxa5
PMU ADC test
ADC Channel amuxa5: 1779.6092 mV
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> pmuadc --read amuxa5
PMU ADC test
ADC Channel amuxa5: 1779.6092 mV
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : PMU ADC testADC Channel amuxa5: 1779.6092 mV

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between pmuadc --read amuxa5 and [0006451C:3020213A] :-) == PMU ADC testADC Channel amuxa5: 1779.6092 mV

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> PMU ADC testADC Channel amuxa5: 1779.6092 mV
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.032514s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> amuxa5 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> PMU ADC testADC Channel amuxa5: 1779.6092 mV
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> amuxa5 
REGEX ==> ADC Channel amuxa5:\s*(.*?)\smV 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1779.6092
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000139s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Chestnut PWR_EN_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [1779.6092], spec is [Item0=1690 ; Item1=1854 ; ], mode is [1]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1779.6092
+++++++++++++++ [5] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000517s) +++++++++++++++

[2016-03-31 23:45:20.320]
================= END TEST Chestnut PWR_EN (TestResult : PASS ; Duration : 0.044342s) =================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Chestnut PWR_EN,,,1779.6092,1690,1854,,)

[2016-03-31 23:45:20.320]
Item Name:Chestnut PWR_EN, [1690,1854]

[2016-03-31 23:45:20.320]
===================================== START TEST BANK_A (Item102) =====================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> mipi -w 0x29 0xb2 "0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00" 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[mipi -w 0x29 0xb2 "0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00"(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:mipi -w 0x29 0xb2 "0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00",2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> mipi -w 0x29 0xb2 "0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00" 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004873s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> mipi -w 0x29 0xb2 "0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00" 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:mipi -w 0x29 0xb2 "0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00"

OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> mipi -w 0x29 0xb2 "0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00"

OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between mipi -w 0x29 0xb2 "0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00" and [0006451C:3020213A] :-) == OK

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.037988s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> mipi -r 0x24 0xbb 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[mipi -r 0x24 0xbb(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:mipi -r 0x24 0xbb,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> mipi -r 0x24 0xbb 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> OK
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004397s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> mipi -r 0x24 0xbb 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:mipi -r 0x24 0xbb
 0x00 0x01 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> mipi -r 0x24 0xbb
 0x00 0x01 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : 0x00 0x01 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00OK

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between mipi -r 0x24 0xbb and [0006451C:3020213A] :-) == 0x00 0x01 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00OK

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 0x00 0x01 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00OK
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.032402s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Bank_Value 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 0x00 0x01 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00OK
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 1 
SeperateString ==>  0x 
KEY ==> Bank_Value 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 01
++++++++++ [6] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000028s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 1

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1
++++++++++++++++ [7] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000552s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Bank_A_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [1], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000559s) +++++++++++++++

[2016-03-31 23:45:20.320]
====================== END TEST Bank_A (TestResult : PASS ; Duration : 0.089949s) ======================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Bank_A,,,1,NA,NA,,)

[2016-03-31 23:45:20.320]
Item Name:Bank_A, {NA}

[2016-03-31 23:45:20.320]
===================================== START TEST BANK_B (Item103) =====================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE_BY_INDEX:RETURN_VALUE: ===> parameters:
{
Index ==> 2 
SeperateString ==>  0x 
KEY ==> Bank_Value 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 03
++++++++++ [1] CATCH_VALUE_BY_INDEX:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000039s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 3

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 3
++++++++++++++++ [2] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000650s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Bank_B_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [3], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 3
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000658s) +++++++++++++++

[2016-03-31 23:45:20.320]
====================== END TEST Bank_B (TestResult : PASS ; Duration : 0.005589s) ======================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Bank_B,,,3,NA,NA,,)

[2016-03-31 23:45:20.320]
Item Name:Bank_B, {NA}

[2016-03-31 23:45:20.320]
==================================== START TEST FLICK_VAL (Item104) ====================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z -2 --devread 3 0x51 0x3ff3 0x01 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[i2c -z -2 --devread 3 0x51 0x3ff3 0x01(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z -2 --devread 3 0x51 0x3ff3 0x01,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff3 0x01 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005322s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -z -2 --devread 3 0x51 0x3ff3 0x01 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z -2 --devread 3 0x51 0x3ff3 0x01
Reading 1 bytes from register offset 0x3FF3 into 0x7A124E18, buffer read:	
Data:  0x11 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff3 0x01
Reading 1 bytes from register offset 0x3FF3 into 0x7A124E18, buffer read:	
Data:  0x11 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x3FF3 into 0x7A124E18, buffer read:	Data:  0x11

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between i2c -z -2 --devread 3 0x51 0x3ff3 0x01 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x3FF3 into 0x7A124E18, buffer read:	Data:  0x11

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF3 into 0x7A124E18, buffer read:	Data:  0x11
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.027473s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Flick_Value 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF3 into 0x7A124E18, buffer read:	Data:  0x11
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Flick_Value 
REGEX ==> Data: *0x(.{2}) 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 11
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000140s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 17

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 17
++++++++++++++++ [5] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000479s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Flick_Val_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [17], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 17
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000501s) +++++++++++++++

[2016-03-31 23:45:20.320]
==================== END TEST Flick_Val (TestResult : PASS ; Duration : 0.040400s) ====================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Flick_Val,,,17,NA,NA,,)

[2016-03-31 23:45:20.320]
Item Name:Flick_Val, {NA}

[2016-03-31 23:45:20.320]
==================================== START TEST VSFOM_VAL (Item105) ====================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z -2 --devread 3 0x51 0x3ff5 0x01 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[i2c -z -2 --devread 3 0x51 0x3ff5 0x01(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z -2 --devread 3 0x51 0x3ff5 0x01,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff5 0x01 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004662s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -z -2 --devread 3 0x51 0x3ff5 0x01 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z -2 --devread 3 0x51 0x3ff5 0x01
Reading 1 bytes from register offset 0x3FF5 into 0x7A125A98, buffer read:	
Data:  0x11 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff5 0x01
Reading 1 bytes from register offset 0x3FF5 into 0x7A125A98, buffer read:	
Data:  0x11 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x3FF5 into 0x7A125A98, buffer read:	Data:  0x11

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between i2c -z -2 --devread 3 0x51 0x3ff5 0x01 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x3FF5 into 0x7A125A98, buffer read:	Data:  0x11

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF5 into 0x7A125A98, buffer read:	Data:  0x11
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028468s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> VSFOM_Value 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF5 into 0x7A125A98, buffer read:	Data:  0x11
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> VSFOM_Value 
REGEX ==> Data: *0x(.{2}) 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 11
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000142s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 17

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 17
++++++++++++++++ [5] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000482s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*VSFOM_Val_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [17], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 17
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000504s) +++++++++++++++

[2016-03-31 23:45:20.320]
==================== END TEST VSFOM_Val (TestResult : PASS ; Duration : 0.040493s) ====================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(VSFOM_Val,,,17,NA,NA,,)

[2016-03-31 23:45:20.320]
Item Name:VSFOM_Val, {NA}

[2016-03-31 23:45:20.320]
===================================== START TEST FOS_VAL (Item106) =====================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z -2 --devread 3 0x51 0x3ff7 0x01 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[i2c -z -2 --devread 3 0x51 0x3ff7 0x01(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z -2 --devread 3 0x51 0x3ff7 0x01,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff7 0x01 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004811s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -z -2 --devread 3 0x51 0x3ff7 0x01 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z -2 --devread 3 0x51 0x3ff7 0x01
Reading 1 bytes from register offset 0x3FF7 into 0x7A069898, buffer read:	
Data:  0x11 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff7 0x01
Reading 1 bytes from register offset 0x3FF7 into 0x7A069898, buffer read:	
Data:  0x11 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x3FF7 into 0x7A069898, buffer read:	Data:  0x11

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between i2c -z -2 --devread 3 0x51 0x3ff7 0x01 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x3FF7 into 0x7A069898, buffer read:	Data:  0x11

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF7 into 0x7A069898, buffer read:	Data:  0x11
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.029737s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FOS_Value 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF7 into 0x7A069898, buffer read:	Data:  0x11
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> FOS_Value 
REGEX ==> Data: *0x(.{2}) 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 11
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000150s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 17

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 17
++++++++++++++++ [5] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000559s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*FOS_Val_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [17], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 17
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000567s) +++++++++++++++

[2016-03-31 23:45:20.320]
===================== END TEST FOS_Val (TestResult : PASS ; Duration : 0.042857s) =====================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(FOS_Val,,,17,NA,NA,,)

[2016-03-31 23:45:20.320]
Item Name:FOS_Val, {NA}

[2016-03-31 23:45:20.320]
=================================== START TEST FLICK_COUNT (Item107) ===================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z -2 --devread 3 0x51 0x3ff4 0x01 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[i2c -z -2 --devread 3 0x51 0x3ff4 0x01(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z -2 --devread 3 0x51 0x3ff4 0x01,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff4 0x01 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004597s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -z -2 --devread 3 0x51 0x3ff4 0x01 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z -2 --devread 3 0x51 0x3ff4 0x01
Reading 1 bytes from register offset 0x3FF4 into 0x7A068D98, buffer read:	
Data:  0x01 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff4 0x01
Reading 1 bytes from register offset 0x3FF4 into 0x7A068D98, buffer read:	
Data:  0x01 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x3FF4 into 0x7A068D98, buffer read:	Data:  0x01

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between i2c -z -2 --devread 3 0x51 0x3ff4 0x01 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x3FF4 into 0x7A068D98, buffer read:	Data:  0x01

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF4 into 0x7A068D98, buffer read:	Data:  0x01
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028071s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Flick_Count 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF4 into 0x7A068D98, buffer read:	Data:  0x01
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Flick_Count 
REGEX ==> Data: *0x(.{2}) 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 01
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000137s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 1

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1
++++++++++++++++ [5] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000481s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Flick_Count_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; Item1=100 ; ], mode is [1]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000520s) +++++++++++++++

[2016-03-31 23:45:20.320]
=================== END TEST Flick_Count (TestResult : PASS ; Duration : 0.040002s) ===================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Flick_Count,,,1,1,100,,)

[2016-03-31 23:45:20.320]
Item Name:Flick_Count, [1,100]

[2016-03-31 23:45:20.320]
=================================== START TEST VSFOM_COUNT (Item108) ===================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z -2 --devread 3 0x51 0x3ff6 0x01 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[i2c -z -2 --devread 3 0x51 0x3ff6 0x01(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z -2 --devread 3 0x51 0x3ff6 0x01,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff6 0x01 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004485s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -z -2 --devread 3 0x51 0x3ff6 0x01 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z -2 --devread 3 0x51 0x3ff6 0x01
Reading 1 bytes from register offset 0x3FF6 into 0x7A126218, buffer read:	
Data:  0x01 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff6 0x01
Reading 1 bytes from register offset 0x3FF6 into 0x7A126218, buffer read:	
Data:  0x01 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x3FF6 into 0x7A126218, buffer read:	Data:  0x01

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between i2c -z -2 --devread 3 0x51 0x3ff6 0x01 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x3FF6 into 0x7A126218, buffer read:	Data:  0x01

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF6 into 0x7A126218, buffer read:	Data:  0x01
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.030138s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> VSFOM_Count 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF6 into 0x7A126218, buffer read:	Data:  0x01
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> VSFOM_Count 
REGEX ==> Data: *0x(.{2}) 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 01
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000169s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 1

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1
++++++++++++++++ [5] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000545s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*VSFOM_Count_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; Item1=100 ; ], mode is [1]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000583s) +++++++++++++++

[2016-03-31 23:45:20.320]
=================== END TEST VSFOM_Count (TestResult : PASS ; Duration : 0.042975s) ===================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(VSFOM_Count,,,1,1,100,,)

[2016-03-31 23:45:20.320]
Item Name:VSFOM_Count, [1,100]

[2016-03-31 23:45:20.320]
==================================== START TEST FOS_COUNT (Item109) ====================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z -2 --devread 3 0x51 0x3ff8 0x01 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[i2c -z -2 --devread 3 0x51 0x3ff8 0x01(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z -2 --devread 3 0x51 0x3ff8 0x01,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff8 0x01 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004654s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -z -2 --devread 3 0x51 0x3ff8 0x01 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z -2 --devread 3 0x51 0x3ff8 0x01
Reading 1 bytes from register offset 0x3FF8 into 0x7A061E18, buffer read:	
Data:  0x01 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x3ff8 0x01
Reading 1 bytes from register offset 0x3FF8 into 0x7A061E18, buffer read:	
Data:  0x01 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : Reading 1 bytes from register offset 0x3FF8 into 0x7A061E18, buffer read:	Data:  0x01

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between i2c -z -2 --devread 3 0x51 0x3ff8 0x01 and [0006451C:3020213A] :-) == Reading 1 bytes from register offset 0x3FF8 into 0x7A061E18, buffer read:	Data:  0x01

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF8 into 0x7A061E18, buffer read:	Data:  0x01
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.029967s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FOS_Count 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 1 bytes from register offset 0x3FF8 into 0x7A061E18, buffer read:	Data:  0x01
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> FOS_Count 
REGEX ==> Data: *0x(.{2}) 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 01
+++++++++++++++ [4] CATCH_VALUE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000151s) +++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 1

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1
++++++++++++++++ [5] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000538s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*FOS_Count_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [1], spec is [Item0=1 ; Item1=100 ; ], mode is [1]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 1
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000575s) +++++++++++++++

[2016-03-31 23:45:20.320]
==================== END TEST FOS_Count (TestResult : PASS ; Duration : 0.042942s) ====================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(FOS_Count,,,1,1,100,,)

[2016-03-31 23:45:20.320]
Item Name:FOS_Count, [1,100]

[2016-03-31 23:45:20.320]
===================================== START TEST RGBW_1 (Item110) =====================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z -2 --devread 3 0x51 0x46 0x4 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[i2c -z -2 --devread 3 0x51 0x46 0x4(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z -2 --devread 3 0x51 0x46 0x4,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x46 0x4 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004556s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -z -2 --devread 3 0x51 0x46 0x4 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z -2 --devread 3 0x51 0x46 0x4
Reading 4 bytes from register offset 0x46 into 0x7A038518, buffer read:	
Data:  0x00  0x01  0x00  0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x46 0x4
Reading 4 bytes from register offset 0x46 into 0x7A038518, buffer read:	
Data:  0x00  0x01  0x00  0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : Reading 4 bytes from register offset 0x46 into 0x7A038518, buffer read:	Data:  0x00  0x01  0x00  0x00

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between i2c -z -2 --devread 3 0x51 0x46 0x4 and [0006451C:3020213A] :-) == Reading 4 bytes from register offset 0x46 into 0x7A038518, buffer read:	Data:  0x00  0x01  0x00  0x00

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 4 bytes from register offset 0x46 into 0x7A038518, buffer read:	Data:  0x00  0x01  0x00  0x00
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.030544s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RGBW_1 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 4 bytes from register offset 0x46 into 0x7A038518, buffer read:	Data:  0x00  0x01  0x00  0x00
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CUSTOM_COMBINE_DATA:RETURN_VALUE: ===> parameters:
{
EndIndex ==> 4 
BeginIndex ==> 1 
SeparateString ==>   0x 
KEY ==> RGBW_1 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 00010000
+++++++++++ [4] CUSTOM_COMBINE_DATA:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 65536

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 65536
++++++++++++++++ [5] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000486s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*RGBW_1_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [65536], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 65536
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000495s) +++++++++++++++

[2016-03-31 23:45:20.320]
====================== END TEST RGBW_1 (TestResult : PASS ; Duration : 0.042241s) ======================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(RGBW_1,,,65536,NA,NA,,)

[2016-03-31 23:45:20.320]
Item Name:RGBW_1, {NA}

[2016-03-31 23:45:20.320]
===================================== START TEST RGBW_2 (Item111) =====================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z -2 --devread 3 0x51 0x122 0x4 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[i2c -z -2 --devread 3 0x51 0x122 0x4(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z -2 --devread 3 0x51 0x122 0x4,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x122 0x4 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004682s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> i2c -z -2 --devread 3 0x51 0x122 0x4 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ; Item2=FAIL ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z -2 --devread 3 0x51 0x122 0x4
Reading 4 bytes from register offset 0x122 into 0x7A04E998, buffer read:	
Data:  0x00  0x01  0x00  0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:20.320]
PostRXToUI ===> 
{
Info ==> i2c -z -2 --devread 3 0x51 0x122 0x4
Reading 4 bytes from register offset 0x122 into 0x7A04E998, buffer read:	
Data:  0x00  0x01  0x00  0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:20.320]
CATCH_VALUE => Catch OK : Reading 4 bytes from register offset 0x122 into 0x7A04E998, buffer read:	Data:  0x00  0x01  0x00  0x00

[2016-03-31 23:45:20.320]
READ_COMMAND => Catch string between i2c -z -2 --devread 3 0x51 0x122 0x4 and [0006451C:3020213A] :-) == Reading 4 bytes from register offset 0x122 into 0x7A04E998, buffer read:	Data:  0x00  0x01  0x00  0x00

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 4 bytes from register offset 0x122 into 0x7A04E998, buffer read:	Data:  0x00  0x01  0x00  0x00
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.030233s) ++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> RGBW_2 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> Reading 4 bytes from register offset 0x122 into 0x7A04E998, buffer read:	Data:  0x00  0x01  0x00  0x00
++++++++++ [3] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CUSTOM_COMBINE_DATA:RETURN_VALUE: ===> parameters:
{
EndIndex ==> 4 
BeginIndex ==> 1 
SeparateString ==>   0x 
KEY ==> RGBW_2 
}

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 00010000
+++++++++++ [4] CUSTOM_COMBINE_DATA:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000024s) +++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : CATCH_BIT:RETURN_VALUE: ===> parameters:
{
Bit ==> CHANGE ==> 16 
TO ==> 10 
 
}

[2016-03-31 23:45:20.320]
return value is 65536

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 65536
++++++++++++++++ [5] CATCH_BIT:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000490s) ++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*RGBW_2_spec*] 
 
}

[2016-03-31 23:45:20.320]
JUDGE_SPEC =>  value is [65536], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 65536
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000507s) +++++++++++++++

[2016-03-31 23:45:20.320]
====================== END TEST RGBW_2 (TestResult : PASS ; Duration : 0.042180s) ======================

[2016-03-31 23:45:20.320]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(RGBW_2,,,65536,NA,NA,,)

[2016-03-31 23:45:20.320]
Item Name:RGBW_2, {NA}

[2016-03-31 23:45:20.320]
================================= START TEST FRONT CAMERA SN (Item112) =================================

[2016-03-31 23:45:20.320]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --pick front 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:20.320]
Write to ---> MOBILE , command[camisp --pick front(STRING)]

[2016-03-31 23:45:20.320]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --pick front,2,0;return value:0!

[2016-03-31 23:45:20.320]
PostTXToUI ===> 
{
Info ==> camisp --pick front 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:20.320 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:20.320]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:20.320]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004455s) +++++++++++++++++++++

[2016-03-31 23:45:20.320]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> camisp --pick front 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:21.321]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --pick front
call pick sensor.
picked : front 
Pass
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:21.321]
PostRXToUI ===> 
{
Info ==> camisp --pick front
call pick sensor.
picked : front 
Pass
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:21.321 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:21.321]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:21.321]
CATCH_VALUE => Catch OK : call pick sensor.picked : front Pass

[2016-03-31 23:45:21.321]
READ_COMMAND => Catch string between camisp --pick front and [0006451C:3020213A] :-) == call pick sensor.picked : front Pass

[2016-03-31 23:45:21.321]
RETURN_VALUE ===> call pick sensor.picked : front Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.101169s) ++++++++++++++

[2016-03-31 23:45:21.321]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> camisp --cameraconfig 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:21.321]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:21.321]
Write to ---> MOBILE , command[camisp --cameraconfig(STRING)]

[2016-03-31 23:45:21.321]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:camisp --cameraconfig,2,0;return value:0!

[2016-03-31 23:45:21.321]
PostTXToUI ===> 
{
Info ==> camisp --cameraconfig 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:21.321 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:21.321]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:21.321]
RETURN_VALUE ===> call pick sensor.picked : front Pass
+++++++++++++++++++++ [3] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004292s) +++++++++++++++++++++

[2016-03-31 23:45:21.321]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> FW Infor: 
REPEAT ==> 1 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:23.323]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:camisp --cameraconfig
Capture buffer allocated at: 0xC7319AD80, 0xC7320B580 of 460800 bytes each with default value of 0x0 width 640 height 480
FW Infor:
name : DIONYSUS 
linkDate : Feb 26 2016 - 11:53:13 
release : 14.10.00 

Sensor channel 2 detected : 
sensorID : 0x314 (currently active)
sensorRevision : 0x1402
moduleAvailable : 0x1
moduleYear : 0x6
moduleWorkWeek : 0xA
moduleDayofWeek : 0x4
moduleIntegrator : 0x29
moduleIRFilterID : 0x65
moduleLensID : 0x6C
moduleFocusID : 0x0
sensorAvailable : 0x1
oisAvailable: 0x0
focusAvailable : 0x0
focusID : 0x0
strobeAvailable: 0x1
strobeID : 0xFFC0
ledAvailable : 0x0
ledID : 0x0
ledMfgID : 0x0
numTestPatterns : 0x7
sensorI2CAddress : 0x10
focusI2CAddress : 0x0
strobeI2CAddress : 0x0
shutterAvailable : 0
sensorSerialNum : 0x29 0x28 0xB1 0x71 0xA 0x51 0x97 0xAD 
sensorSerialNumStr : F0W610401MXGMJF3W
number of total configurations : 3
current picked config : 0
    W/H=3856/2340, binW/H=0/0, rawW/H=3856/2340, rawPoolIDAux=47, outputPoolID=43, rawPoolID=45, maxFrameRateForTheConfig=29.248
ISP final output width : 640
ISP final output height : 480
maxFrameRate = 29.248 
minFrameRate = 29.248 
NVM Data 2176 bytes : 
0x0 : 0xF3 0x15 0xC 0x29 0x30 0x10 0x65 0x29 
0x8 : 0x21 0x0 0x6C 0x0 0x0 0x0 0x12 0x32 
0x10 : 0x0 0x0 0x0 0x28 0xB1 0x71 0xA 0x51 
0x18 : 0x97 0xAD 0x2D 0xB 0xE7 0x20 0x1 0x0 
0x20 : 0x11 0x0 0x0 0x0 0x0 0x0 0x0 0x2 
0x28 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x30 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x38 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0xE8 
0x40 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x6 
0x48 : 0x71 0x2 0xDA 0x3 0xDB 0x4 0x68 0x63 
0x50 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x58 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x60 : 0x13 0x13 0xEF 0x58 0x65 0x77 0x89 0x97 
0x68 : 0xA0 0xA4 0xA1 0x98 0x8A 0x78 0x66 0x58 
0x70 : 0x5F 0x73 0x89 0x9E 0xAF 0xBE 0xC3 0xBF 
0x78 : 0xB0 0x9E 0x8A 0x74 0x60 0x66 0x7C 0x95 
0x80 : 0xAD 0xC4 0xD9 0xE0 0xD9 0xC6 0xAE 0x98 
0x88 : 0x7E 0x66 0x6A 0x83 0x9E 0xB9 0xD5 0xEB 
0x90 : 0xF2 0xEC 0xD6 0xB9 0x9F 0x86 0x6A 0x6C 
0x98 : 0x86 0xA1 0xBD 0xDD 0xF3 0xFA 0xF3 0xDE 
0xA0 : 0xBE 0xA2 0x88 0x6C 0x6B 0x85 0x9E 0xB9 
0xA8 : 0xD9 0xED 0xF4 0xEF 0xD8 0xBA 0xA1 0x86 
0xB0 : 0x6A 0x67 0x7E 0x97 0xB0 0xC8 0xDC 0xE3 
0xB8 : 0xDC 0xC8 0xB0 0x99 0x80 0x66 0x61 0x74 
0xC0 : 0x8C 0xA0 0xB3 0xC2 0xC7 0xC1 0xB3 0xA1 
0xC8 : 0x8D 0x76 0x61 0x5B 0x69 0x7C 0x8F 0x9F 
0xD0 : 0xA9 0xAC 0xA8 0x9E 0x91 0x7E 0x6A 0x5C 
0xD8 : 0x4E 0x59 0x69 0x7B 0x8A 0x95 0x9A 0x97 
0xE0 : 0x8E 0x7F 0x6E 0x5C 0x51 0x54 0x65 0x7A 
0xE8 : 0x90 0xA4 0xB4 0xBB 0xB6 0xA8 0x95 0x7F 
0xF0 : 0x69 0x56 0x59 0x6E 0x87 0xA0 0xBA 0xD2 
0xF8 : 0xDB 0xD5 0xC0 0xA6 0x8C 0x73 0x5C 0x5C 
0x100 : 0x75 0x8F 0xAD 0xCD 0xE8 0xF1 0xEB 0xD4 
0x108 : 0xB4 0x95 0x7A 0x60 0x5E 0x78 0x93 0xB2 
0x110 : 0xD5 0xF1 0xFA 0xF4 0xDD 0xB9 0x99 0x7C 
0x118 : 0x62 0x5E 0x77 0x91 0xAE 0xD2 0xEB 0xF6 
0x120 : 0xF0 0xD7 0xB4 0x97 0x7B 0x60 0x5B 0x71 
0x128 : 0x8B 0xA4 0xC0 0xD8 0xE2 0xDB 0xC5 0xAA 
0x130 : 0x91 0x75 0x5C 0x56 0x69 0x7F 0x95 0xAA 
0x138 : 0xBC 0xC3 0xBD 0xAD 0x99 0x84 0x6B 0x57 
0x140 : 0x51 0x5D 0x6F 0x82 0x93 0x9E 0xA3 0x9F 
0x148 : 0x95 0x87 0x73 0x60 0x54 0x5B 0x67 0x7A 
0x150 : 0x8D 0x9B 0xA4 0xA8 0xA6 0x9B 0x8D 0x7B 
0x158 : 0x68 0x5A 0x62 0x76 0x8D 0xA3 0xB5 0xC3 
0x160 : 0xC8 0xC3 0xB4 0xA2 0x8E 0x76 0x61 0x68 
0x168 : 0x80 0x99 0xB1 0xC9 0xDC 0xE3 0xDB 0xC8 
0x170 : 0xB1 0x9B 0x81 0x69 0x6D 0x88 0xA2 0xBC 
0x178 : 0xD8 0xED 0xF4 0xEC 0xD8 0xBD 0xA2 0x89 
0x180 : 0x6D 0x6F 0x8A 0xA4 0xBF 0xDE 0xF3 0xFA 
0x188 : 0xF3 0xDF 0xC1 0xA6 0x8B 0x6F 0x6D 0x88 
0x190 : 0xA2 0xBC 0xDA 0xEE 0xF5 0xEF 0xDA 0xBD 
0x198 : 0xA3 0x89 0x6D 0x68 0x81 0x9A 0xB2 0xC9 
0x1A0 : 0xDC 0xE3 0xDD 0xC9 0xB3 0x9C 0x82 0x69 
0x1A8 : 0x62 0x76 0x8E 0xA2 0xB5 0xC4 0xC8 0xC4 
0x1B0 : 0xB5 0xA3 0x90 0x77 0x62 0x5D 0x6A 0x7D 
0x1B8 : 0x90 0xA0 0xAA 0xAC 0xAA 0xA0 0x91 0x7E 
0x1C0 : 0x6B 0x5E 0x58 0x65 0x76 0x8A 0x97 0xA2 
0x1C8 : 0xA7 0xA3 0x99 0x8B 0x7A 0x68 0x5A 0x5F 
0x1D0 : 0x72 0x89 0x9E 0xB0 0xBF 0xC5 0xC0 0xB2 
0x1D8 : 0xA1 0x8C 0x75 0x61 0x64 0x7B 0x94 0xAC 
0x1E0 : 0xC4 0xD9 0xE2 0xDB 0xC8 0xB1 0x99 0x80 
0x1E8 : 0x67 0x69 0x82 0x9C 0xB7 0xD4 0xEA 0xF4 
0x1F0 : 0xEE 0xD8 0xBB 0xA2 0x87 0x6B 0x6A 0x85 
0x1F8 : 0x9F 0xBA 0xDB 0xF1 0xFA 0xF3 0xE0 0xC0 
0x200 : 0xA5 0x8A 0x6D 0x69 0x83 0x9C 0xB7 0xD6 
0x208 : 0xEB 0xF4 0xF0 0xD9 0xBC 0xA2 0x88 0x6B 
0x210 : 0x66 0x7C 0x96 0xAD 0xC5 0xDB 0xE2 0xDD 
0x218 : 0xC9 0xB1 0x9A 0x81 0x67 0x5F 0x72 0x8A 
0x220 : 0x9F 0xB1 0xC1 0xC7 0xC3 0xB3 0xA1 0x8E 
0x228 : 0x76 0x61 0x5A 0x68 0x7A 0x8D 0x9C 0xA8 
0x230 : 0xAC 0xA9 0x9F 0x91 0x7E 0x6B 0x5D 0xF8 
0x238 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x240 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x248 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x250 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x258 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x260 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x268 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x270 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x278 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x280 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x288 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x290 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x298 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x300 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x308 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x310 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x318 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x320 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x328 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x330 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x338 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x340 : 0x0 0x0 0x0 0x0 0x0 0x0 0x1 0x5 
0x348 : 0xF 0x19 0x69 0xD7 0xEB 0x4B 0x35 0x31 
0x350 : 0x32 0x33 0x31 0x32 0x50 0x43 0x42 0x44 
0x358 : 0x35 0x33 0x41 0x31 0x32 0x33 0x34 0x0 
0x360 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x368 : 0x0 0x0 0x4C 0x56 0x31 0x32 0x33 0x31 
0x370 : 0x32 0x35 0x33 0x41 0x31 0x32 0x33 0x34 
0x378 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x380 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x388 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x390 : 0x0 0x0 0x0 0x0 0x32 0x35 0x33 0x31 
0x398 : 0x32 0x33 0x34 0x35 0x0 0x0 0x0 0x0 
0x3A0 : 0x0 0x0 0x0 0x0 0x44 0x35 0x31 0x32 
0x3A8 : 0x33 0x31 0x32 0x89 0xFF 0x0 0x0 0x0 
0x3B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x400 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x408 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x410 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x418 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x420 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x428 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x430 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x438 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x440 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x448 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x450 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x458 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x460 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x468 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x470 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x478 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x480 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x488 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x490 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x498 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x500 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x508 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x510 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x518 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x520 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x528 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x530 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x538 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x540 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x548 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x550 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x558 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x560 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x568 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x570 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x578 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x580 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x588 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x590 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x598 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x600 : 0x2 0xC 0x95 0x69 0xA0 0x42 0x43 0x80 
0x608 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x610 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x618 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x620 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x628 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x630 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x638 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x640 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x648 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x650 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x658 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x660 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x668 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x670 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x678 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x680 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x688 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x690 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x698 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C8 : 0x0 0x0 0x0 0xF 0xB0 0x90 0x87 0xEC 
0x6D0 : 0x70 0xEB 0xA0 0x31 0x5D 0x9F 0xE2 0xF6 
0x6D8 : 0xEF 0x74 0xD0 0xB0 0x45 0x80 0xBF 0x35 
0x6E0 : 0x87 0xDE 0x26 0xDC 0x3F 0xD7 0x3D 0x36 
0x6E8 : 0xA7 0x8B 0x3F 0x67 0xD4 0x1B 0x7 0xE7 
0x6F0 : 0xB1 0x58 0xD5 0xEB 0xF9 0x13 0xDD 0xE9 
0x6F8 : 0x42 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x700 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x708 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x710 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x718 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x720 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x728 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x730 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x738 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x740 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x748 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x750 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x758 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x760 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x768 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x770 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x778 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x780 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x788 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x790 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x798 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7E0 : 0x0 0x0 0x0 0x0 0x13 0x10 0x10 0x10 
0x7E8 : 0x12 0x9A 0x61 0x11 0x10 0xA 0x1F 0x8 
0x7F0 : 0x1 0x1F 0x28 0xA 0x0 0x0 0x0 0x0 
0x7F8 : 0x11 0xA 0x2 0x5 0x11 0x1 0x4 0x0 
0x800 : 0x9 0xB 0x8 0x8 0x10 0x2 0x5 0x0 
0x808 : 0x0 0x1 0x0 0x0 0x2 0x2 0x2 0x2 
0x810 : 0x0 0x0 0x2 0x2 0x1 0x1 0x3C 0x39 
0x818 : 0x31 0x2A 0x27 0x3D 0x3F 0x3E 0x0 0x4A 
0x820 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x4A 
0x828 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x0 
0x830 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x838 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x840 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x11 
0x848 : 0x11 0x11 0x11 0x0 0x0 0x0 0x0 0x0 
0x850 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x858 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x860 : 0x0 0x14 0x0 0x6A 0x47 0x15 0x42 0x5A 
0x868 : 0x6A 0x47 0x15 0x3 0x3 0x5 0x0 0x3 
0x870 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x878 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x880 : 


Pass
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:23.323]
PostRXToUI ===> 
{
Info ==> camisp --cameraconfig
Capture buffer allocated at: 0xC7319AD80, 0xC7320B580 of 460800 bytes each with default value of 0x0 width 640 height 480
FW Infor:
name : DIONYSUS 
linkDate : Feb 26 2016 - 11:53:13 
release : 14.10.00 

Sensor channel 2 detected : 
sensorID : 0x314 (currently active)
sensorRevision : 0x1402
moduleAvailable : 0x1
moduleYear : 0x6
moduleWorkWeek : 0xA
moduleDayofWeek : 0x4
moduleIntegrator : 0x29
moduleIRFilterID : 0x65
moduleLensID : 0x6C
moduleFocusID : 0x0
sensorAvailable : 0x1
oisAvailable: 0x0
focusAvailable : 0x0
focusID : 0x0
strobeAvailable: 0x1
strobeID : 0xFFC0
ledAvailable : 0x0
ledID : 0x0
ledMfgID : 0x0
numTestPatterns : 0x7
sensorI2CAddress : 0x10
focusI2CAddress : 0x0
strobeI2CAddress : 0x0
shutterAvailable : 0
sensorSerialNum : 0x29 0x28 0xB1 0x71 0xA 0x51 0x97 0xAD 
sensorSerialNumStr : F0W610401MXGMJF3W
number of total configurations : 3
current picked config : 0
    W/H=3856/2340, binW/H=0/0, rawW/H=3856/2340, rawPoolIDAux=47, outputPoolID=43, rawPoolID=45, maxFrameRateForTheConfig=29.248
ISP final output width : 640
ISP final output height : 480
maxFrameRate = 29.248 
minFrameRate = 29.248 
NVM Data 2176 bytes : 
0x0 : 0xF3 0x15 0xC 0x29 0x30 0x10 0x65 0x29 
0x8 : 0x21 0x0 0x6C 0x0 0x0 0x0 0x12 0x32 
0x10 : 0x0 0x0 0x0 0x28 0xB1 0x71 0xA 0x51 
0x18 : 0x97 0xAD 0x2D 0xB 0xE7 0x20 0x1 0x0 
0x20 : 0x11 0x0 0x0 0x0 0x0 0x0 0x0 0x2 
0x28 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x30 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x38 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0xE8 
0x40 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x6 
0x48 : 0x71 0x2 0xDA 0x3 0xDB 0x4 0x68 0x63 
0x50 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x58 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x60 : 0x13 0x13 0xEF 0x58 0x65 0x77 0x89 0x97 
0x68 : 0xA0 0xA4 0xA1 0x98 0x8A 0x78 0x66 0x58 
0x70 : 0x5F 0x73 0x89 0x9E 0xAF 0xBE 0xC3 0xBF 
0x78 : 0xB0 0x9E 0x8A 0x74 0x60 0x66 0x7C 0x95 
0x80 : 0xAD 0xC4 0xD9 0xE0 0xD9 0xC6 0xAE 0x98 
0x88 : 0x7E 0x66 0x6A 0x83 0x9E 0xB9 0xD5 0xEB 
0x90 : 0xF2 0xEC 0xD6 0xB9 0x9F 0x86 0x6A 0x6C 
0x98 : 0x86 0xA1 0xBD 0xDD 0xF3 0xFA 0xF3 0xDE 
0xA0 : 0xBE 0xA2 0x88 0x6C 0x6B 0x85 0x9E 0xB9 
0xA8 : 0xD9 0xED 0xF4 0xEF 0xD8 0xBA 0xA1 0x86 
0xB0 : 0x6A 0x67 0x7E 0x97 0xB0 0xC8 0xDC 0xE3 
0xB8 : 0xDC 0xC8 0xB0 0x99 0x80 0x66 0x61 0x74 
0xC0 : 0x8C 0xA0 0xB3 0xC2 0xC7 0xC1 0xB3 0xA1 
0xC8 : 0x8D 0x76 0x61 0x5B 0x69 0x7C 0x8F 0x9F 
0xD0 : 0xA9 0xAC 0xA8 0x9E 0x91 0x7E 0x6A 0x5C 
0xD8 : 0x4E 0x59 0x69 0x7B 0x8A 0x95 0x9A 0x97 
0xE0 : 0x8E 0x7F 0x6E 0x5C 0x51 0x54 0x65 0x7A 
0xE8 : 0x90 0xA4 0xB4 0xBB 0xB6 0xA8 0x95 0x7F 
0xF0 : 0x69 0x56 0x59 0x6E 0x87 0xA0 0xBA 0xD2 
0xF8 : 0xDB 0xD5 0xC0 0xA6 0x8C 0x73 0x5C 0x5C 
0x100 : 0x75 0x8F 0xAD 0xCD 0xE8 0xF1 0xEB 0xD4 
0x108 : 0xB4 0x95 0x7A 0x60 0x5E 0x78 0x93 0xB2 
0x110 : 0xD5 0xF1 0xFA 0xF4 0xDD 0xB9 0x99 0x7C 
0x118 : 0x62 0x5E 0x77 0x91 0xAE 0xD2 0xEB 0xF6 
0x120 : 0xF0 0xD7 0xB4 0x97 0x7B 0x60 0x5B 0x71 
0x128 : 0x8B 0xA4 0xC0 0xD8 0xE2 0xDB 0xC5 0xAA 
0x130 : 0x91 0x75 0x5C 0x56 0x69 0x7F 0x95 0xAA 
0x138 : 0xBC 0xC3 0xBD 0xAD 0x99 0x84 0x6B 0x57 
0x140 : 0x51 0x5D 0x6F 0x82 0x93 0x9E 0xA3 0x9F 
0x148 : 0x95 0x87 0x73 0x60 0x54 0x5B 0x67 0x7A 
0x150 : 0x8D 0x9B 0xA4 0xA8 0xA6 0x9B 0x8D 0x7B 
0x158 : 0x68 0x5A 0x62 0x76 0x8D 0xA3 0xB5 0xC3 
0x160 : 0xC8 0xC3 0xB4 0xA2 0x8E 0x76 0x61 0x68 
0x168 : 0x80 0x99 0xB1 0xC9 0xDC 0xE3 0xDB 0xC8 
0x170 : 0xB1 0x9B 0x81 0x69 0x6D 0x88 0xA2 0xBC 
0x178 : 0xD8 0xED 0xF4 0xEC 0xD8 0xBD 0xA2 0x89 
0x180 : 0x6D 0x6F 0x8A 0xA4 0xBF 0xDE 0xF3 0xFA 
0x188 : 0xF3 0xDF 0xC1 0xA6 0x8B 0x6F 0x6D 0x88 
0x190 : 0xA2 0xBC 0xDA 0xEE 0xF5 0xEF 0xDA 0xBD 
0x198 : 0xA3 0x89 0x6D 0x68 0x81 0x9A 0xB2 0xC9 
0x1A0 : 0xDC 0xE3 0xDD 0xC9 0xB3 0x9C 0x82 0x69 
0x1A8 : 0x62 0x76 0x8E 0xA2 0xB5 0xC4 0xC8 0xC4 
0x1B0 : 0xB5 0xA3 0x90 0x77 0x62 0x5D 0x6A 0x7D 
0x1B8 : 0x90 0xA0 0xAA 0xAC 0xAA 0xA0 0x91 0x7E 
0x1C0 : 0x6B 0x5E 0x58 0x65 0x76 0x8A 0x97 0xA2 
0x1C8 : 0xA7 0xA3 0x99 0x8B 0x7A 0x68 0x5A 0x5F 
0x1D0 : 0x72 0x89 0x9E 0xB0 0xBF 0xC5 0xC0 0xB2 
0x1D8 : 0xA1 0x8C 0x75 0x61 0x64 0x7B 0x94 0xAC 
0x1E0 : 0xC4 0xD9 0xE2 0xDB 0xC8 0xB1 0x99 0x80 
0x1E8 : 0x67 0x69 0x82 0x9C 0xB7 0xD4 0xEA 0xF4 
0x1F0 : 0xEE 0xD8 0xBB 0xA2 0x87 0x6B 0x6A 0x85 
0x1F8 : 0x9F 0xBA 0xDB 0xF1 0xFA 0xF3 0xE0 0xC0 
0x200 : 0xA5 0x8A 0x6D 0x69 0x83 0x9C 0xB7 0xD6 
0x208 : 0xEB 0xF4 0xF0 0xD9 0xBC 0xA2 0x88 0x6B 
0x210 : 0x66 0x7C 0x96 0xAD 0xC5 0xDB 0xE2 0xDD 
0x218 : 0xC9 0xB1 0x9A 0x81 0x67 0x5F 0x72 0x8A 
0x220 : 0x9F 0xB1 0xC1 0xC7 0xC3 0xB3 0xA1 0x8E 
0x228 : 0x76 0x61 0x5A 0x68 0x7A 0x8D 0x9C 0xA8 
0x230 : 0xAC 0xA9 0x9F 0x91 0x7E 0x6B 0x5D 0xF8 
0x238 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x240 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x248 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x250 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x258 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x260 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x268 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x270 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x278 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x280 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x288 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x290 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x298 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x300 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x308 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x310 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x318 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x320 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x328 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x330 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x338 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x340 : 0x0 0x0 0x0 0x0 0x0 0x0 0x1 0x5 
0x348 : 0xF 0x19 0x69 0xD7 0xEB 0x4B 0x35 0x31 
0x350 : 0x32 0x33 0x31 0x32 0x50 0x43 0x42 0x44 
0x358 : 0x35 0x33 0x41 0x31 0x32 0x33 0x34 0x0 
0x360 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x368 : 0x0 0x0 0x4C 0x56 0x31 0x32 0x33 0x31 
0x370 : 0x32 0x35 0x33 0x41 0x31 0x32 0x33 0x34 
0x378 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x380 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x388 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x390 : 0x0 0x0 0x0 0x0 0x32 0x35 0x33 0x31 
0x398 : 0x32 0x33 0x34 0x35 0x0 0x0 0x0 0x0 
0x3A0 : 0x0 0x0 0x0 0x0 0x44 0x35 0x31 0x32 
0x3A8 : 0x33 0x31 0x32 0x89 0xFF 0x0 0x0 0x0 
0x3B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x400 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x408 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x410 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x418 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x420 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x428 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x430 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x438 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x440 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x448 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x450 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x458 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x460 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x468 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x470 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x478 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x480 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x488 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x490 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x498 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x500 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x508 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x510 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x518 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x520 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x528 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x530 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x538 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x540 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x548 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x550 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x558 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x560 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x568 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x570 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x578 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x580 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x588 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x590 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x598 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x600 : 0x2 0xC 0x95 0x69 0xA0 0x42 0x43 0x80 
0x608 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x610 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x618 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x620 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x628 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x630 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x638 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x640 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x648 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x650 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x658 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x660 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x668 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x670 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x678 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x680 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x688 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x690 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x698 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C8 : 0x0 0x0 0x0 0xF 0xB0 0x90 0x87 0xEC 
0x6D0 : 0x70 0xEB 0xA0 0x31 0x5D 0x9F 0xE2 0xF6 
0x6D8 : 0xEF 0x74 0xD0 0xB0 0x45 0x80 0xBF 0x35 
0x6E0 : 0x87 0xDE 0x26 0xDC 0x3F 0xD7 0x3D 0x36 
0x6E8 : 0xA7 0x8B 0x3F 0x67 0xD4 0x1B 0x7 0xE7 
0x6F0 : 0xB1 0x58 0xD5 0xEB 0xF9 0x13 0xDD 0xE9 
0x6F8 : 0x42 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x700 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x708 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x710 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x718 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x720 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x728 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x730 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x738 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x740 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x748 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x750 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x758 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x760 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x768 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x770 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x778 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x780 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x788 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x790 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x798 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7E0 : 0x0 0x0 0x0 0x0 0x13 0x10 0x10 0x10 
0x7E8 : 0x12 0x9A 0x61 0x11 0x10 0xA 0x1F 0x8 
0x7F0 : 0x1 0x1F 0x28 0xA 0x0 0x0 0x0 0x0 
0x7F8 : 0x11 0xA 0x2 0x5 0x11 0x1 0x4 0x0 
0x800 : 0x9 0xB 0x8 0x8 0x10 0x2 0x5 0x0 
0x808 : 0x0 0x1 0x0 0x0 0x2 0x2 0x2 0x2 
0x810 : 0x0 0x0 0x2 0x2 0x1 0x1 0x3C 0x39 
0x818 : 0x31 0x2A 0x27 0x3D 0x3F 0x3E 0x0 0x4A 
0x820 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x4A 
0x828 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x0 
0x830 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x838 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x840 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x11 
0x848 : 0x11 0x11 0x11 0x0 0x0 0x0 0x0 0x0 
0x850 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x858 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x860 : 0x0 0x14 0x0 0x6A 0x47 0x15 0x42 0x5A 
0x868 : 0x6A 0x47 0x15 0x3 0x3 0x5 0x0 0x3 
0x870 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x878 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x880 : 


Pass
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:23.323 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:23.323]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:23.323]
CATCH_VALUE => Catch OK : name : DIONYSUS 
linkDate : Feb 26 2016 - 11:53:13 
release : 14.10.00 

Sensor channel 2 detected : 
sensorID : 0x314 (currently active)
sensorRevision : 0x1402
moduleAvailable : 0x1
moduleYear : 0x6
moduleWorkWeek : 0xA
moduleDayofWeek : 0x4
moduleIntegrator : 0x29
moduleIRFilterID : 0x65
moduleLensID : 0x6C
moduleFocusID : 0x0
sensorAvailable : 0x1
oisAvailable: 0x0
focusAvailable : 0x0
focusID : 0x0
strobeAvailable: 0x1
strobeID : 0xFFC0
ledAvailable : 0x0
ledID : 0x0
ledMfgID : 0x0
numTestPatterns : 0x7
sensorI2CAddress : 0x10
focusI2CAddress : 0x0
strobeI2CAddress : 0x0
shutterAvailable : 0
sensorSerialNum : 0x29 0x28 0xB1 0x71 0xA 0x51 0x97 0xAD 
sensorSerialNumStr : F0W610401MXGMJF3W
number of total configurations : 3
current picked config : 0
    W/H=3856/2340, binW/H=0/0, rawW/H=3856/2340, rawPoolIDAux=47, outputPoolID=43, rawPoolID=45, maxFrameRateForTheConfig=29.248
ISP final output width : 640
ISP final output height : 480
maxFrameRate = 29.248 
minFrameRate = 29.248 
NVM Data 2176 bytes : 
0x0 : 0xF3 0x15 0xC 0x29 0x30 0x10 0x65 0x29 
0x8 : 0x21 0x0 0x6C 0x0 0x0 0x0 0x12 0x32 
0x10 : 0x0 0x0 0x0 0x28 0xB1 0x71 0xA 0x51 
0x18 : 0x97 0xAD 0x2D 0xB 0xE7 0x20 0x1 0x0 
0x20 : 0x11 0x0 0x0 0x0 0x0 0x0 0x0 0x2 
0x28 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x30 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x38 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0xE8 
0x40 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x6 
0x48 : 0x71 0x2 0xDA 0x3 0xDB 0x4 0x68 0x63 
0x50 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x58 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x60 : 0x13 0x13 0xEF 0x58 0x65 0x77 0x89 0x97 
0x68 : 0xA0 0xA4 0xA1 0x98 0x8A 0x78 0x66 0x58 
0x70 : 0x5F 0x73 0x89 0x9E 0xAF 0xBE 0xC3 0xBF 
0x78 : 0xB0 0x9E 0x8A 0x74 0x60 0x66 0x7C 0x95 
0x80 : 0xAD 0xC4 0xD9 0xE0 0xD9 0xC6 0xAE 0x98 
0x88 : 0x7E 0x66 0x6A 0x83 0x9E 0xB9 0xD5 0xEB 
0x90 : 0xF2 0xEC 0xD6 0xB9 0x9F 0x86 0x6A 0x6C 
0x98 : 0x86 0xA1 0xBD 0xDD 0xF3 0xFA 0xF3 0xDE 
0xA0 : 0xBE 0xA2 0x88 0x6C 0x6B 0x85 0x9E 0xB9 
0xA8 : 0xD9 0xED 0xF4 0xEF 0xD8 0xBA 0xA1 0x86 
0xB0 : 0x6A 0x67 0x7E 0x97 0xB0 0xC8 0xDC 0xE3 
0xB8 : 0xDC 0xC8 0xB0 0x99 0x80 0x66 0x61 0x74 
0xC0 : 0x8C 0xA0 0xB3 0xC2 0xC7 0xC1 0xB3 0xA1 
0xC8 : 0x8D 0x76 0x61 0x5B 0x69 0x7C 0x8F 0x9F 
0xD0 : 0xA9 0xAC 0xA8 0x9E 0x91 0x7E 0x6A 0x5C 
0xD8 : 0x4E 0x59 0x69 0x7B 0x8A 0x95 0x9A 0x97 
0xE0 : 0x8E 0x7F 0x6E 0x5C 0x51 0x54 0x65 0x7A 
0xE8 : 0x90 0xA4 0xB4 0xBB 0xB6 0xA8 0x95 0x7F 
0xF0 : 0x69 0x56 0x59 0x6E 0x87 0xA0 0xBA 0xD2 
0xF8 : 0xDB 0xD5 0xC0 0xA6 0x8C 0x73 0x5C 0x5C 
0x100 : 0x75 0x8F 0xAD 0xCD 0xE8 0xF1 0xEB 0xD4 
0x108 : 0xB4 0x95 0x7A 0x60 0x5E 0x78 0x93 0xB2 
0x110 : 0xD5 0xF1 0xFA 0xF4 0xDD 0xB9 0x99 0x7C 
0x118 : 0x62 0x5E 0x77 0x91 0xAE 0xD2 0xEB 0xF6 
0x120 : 0xF0 0xD7 0xB4 0x97 0x7B 0x60 0x5B 0x71 
0x128 : 0x8B 0xA4 0xC0 0xD8 0xE2 0xDB 0xC5 0xAA 
0x130 : 0x91 0x75 0x5C 0x56 0x69 0x7F 0x95 0xAA 
0x138 : 0xBC 0xC3 0xBD 0xAD 0x99 0x84 0x6B 0x57 
0x140 : 0x51 0x5D 0x6F 0x82 0x93 0x9E 0xA3 0x9F 
0x148 : 0x95 0x87 0x73 0x60 0x54 0x5B 0x67 0x7A 
0x150 : 0x8D 0x9B 0xA4 0xA8 0xA6 0x9B 0x8D 0x7B 
0x158 : 0x68 0x5A 0x62 0x76 0x8D 0xA3 0xB5 0xC3 
0x160 : 0xC8 0xC3 0xB4 0xA2 0x8E 0x76 0x61 0x68 
0x168 : 0x80 0x99 0xB1 0xC9 0xDC 0xE3 0xDB 0xC8 
0x170 : 0xB1 0x9B 0x81 0x69 0x6D 0x88 0xA2 0xBC 
0x178 : 0xD8 0xED 0xF4 0xEC 0xD8 0xBD 0xA2 0x89 
0x180 : 0x6D 0x6F 0x8A 0xA4 0xBF 0xDE 0xF3 0xFA 
0x188 : 0xF3 0xDF 0xC1 0xA6 0x8B 0x6F 0x6D 0x88 
0x190 : 0xA2 0xBC 0xDA 0xEE 0xF5 0xEF 0xDA 0xBD 
0x198 : 0xA3 0x89 0x6D 0x68 0x81 0x9A 0xB2 0xC9 
0x1A0 : 0xDC 0xE3 0xDD 0xC9 0xB3 0x9C 0x82 0x69 
0x1A8 : 0x62 0x76 0x8E 0xA2 0xB5 0xC4 0xC8 0xC4 
0x1B0 : 0xB5 0xA3 0x90 0x77 0x62 0x5D 0x6A 0x7D 
0x1B8 : 0x90 0xA0 0xAA 0xAC 0xAA 0xA0 0x91 0x7E 
0x1C0 : 0x6B 0x5E 0x58 0x65 0x76 0x8A 0x97 0xA2 
0x1C8 : 0xA7 0xA3 0x99 0x8B 0x7A 0x68 0x5A 0x5F 
0x1D0 : 0x72 0x89 0x9E 0xB0 0xBF 0xC5 0xC0 0xB2 
0x1D8 : 0xA1 0x8C 0x75 0x61 0x64 0x7B 0x94 0xAC 
0x1E0 : 0xC4 0xD9 0xE2 0xDB 0xC8 0xB1 0x99 0x80 
0x1E8 : 0x67 0x69 0x82 0x9C 0xB7 0xD4 0xEA 0xF4 
0x1F0 : 0xEE 0xD8 0xBB 0xA2 0x87 0x6B 0x6A 0x85 
0x1F8 : 0x9F 0xBA 0xDB 0xF1 0xFA 0xF3 0xE0 0xC0 
0x200 : 0xA5 0x8A 0x6D 0x69 0x83 0x9C 0xB7 0xD6 
0x208 : 0xEB 0xF4 0xF0 0xD9 0xBC 0xA2 0x88 0x6B 
0x210 : 0x66 0x7C 0x96 0xAD 0xC5 0xDB 0xE2 0xDD 
0x218 : 0xC9 0xB1 0x9A 0x81 0x67 0x5F 0x72 0x8A 
0x220 : 0x9F 0xB1 0xC1 0xC7 0xC3 0xB3 0xA1 0x8E 
0x228 : 0x76 0x61 0x5A 0x68 0x7A 0x8D 0x9C 0xA8 
0x230 : 0xAC 0xA9 0x9F 0x91 0x7E 0x6B 0x5D 0xF8 
0x238 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x240 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x248 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x250 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x258 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x260 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x268 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x270 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x278 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x280 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x288 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x290 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x298 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x300 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x308 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x310 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x318 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x320 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x328 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x330 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x338 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x340 : 0x0 0x0 0x0 0x0 0x0 0x0 0x1 0x5 
0x348 : 0xF 0x19 0x69 0xD7 0xEB 0x4B 0x35 0x31 
0x350 : 0x32 0x33 0x31 0x32 0x50 0x43 0x42 0x44 
0x358 : 0x35 0x33 0x41 0x31 0x32 0x33 0x34 0x0 
0x360 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x368 : 0x0 0x0 0x4C 0x56 0x31 0x32 0x33 0x31 
0x370 : 0x32 0x35 0x33 0x41 0x31 0x32 0x33 0x34 
0x378 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x380 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x388 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x390 : 0x0 0x0 0x0 0x0 0x32 0x35 0x33 0x31 
0x398 : 0x32 0x33 0x34 0x35 0x0 0x0 0x0 0x0 
0x3A0 : 0x0 0x0 0x0 0x0 0x44 0x35 0x31 0x32 
0x3A8 : 0x33 0x31 0x32 0x89 0xFF 0x0 0x0 0x0 
0x3B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x400 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x408 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x410 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x418 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x420 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x428 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x430 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x438 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x440 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x448 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x450 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x458 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x460 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x468 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x470 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x478 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x480 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x488 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x490 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x498 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x500 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x508 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x510 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x518 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x520 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x528 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x530 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x538 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x540 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x548 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x550 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x558 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x560 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x568 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x570 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x578 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x580 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x588 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x590 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x598 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x600 : 0x2 0xC 0x95 0x69 0xA0 0x42 0x43 0x80 
0x608 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x610 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x618 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x620 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x628 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x630 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x638 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x640 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x648 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x650 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x658 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x660 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x668 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x670 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x678 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x680 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x688 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x690 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x698 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C8 : 0x0 0x0 0x0 0xF 0xB0 0x90 0x87 0xEC 
0x6D0 : 0x70 0xEB 0xA0 0x31 0x5D 0x9F 0xE2 0xF6 
0x6D8 : 0xEF 0x74 0xD0 0xB0 0x45 0x80 0xBF 0x35 
0x6E0 : 0x87 0xDE 0x26 0xDC 0x3F 0xD7 0x3D 0x36 
0x6E8 : 0xA7 0x8B 0x3F 0x67 0xD4 0x1B 0x7 0xE7 
0x6F0 : 0xB1 0x58 0xD5 0xEB 0xF9 0x13 0xDD 0xE9 
0x6F8 : 0x42 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x700 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x708 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x710 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x718 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x720 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x728 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x730 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x738 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x740 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x748 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x750 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x758 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x760 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x768 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x770 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x778 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x780 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x788 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x790 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x798 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7E0 : 0x0 0x0 0x0 0x0 0x13 0x10 0x10 0x10 
0x7E8 : 0x12 0x9A 0x61 0x11 0x10 0xA 0x1F 0x8 
0x7F0 : 0x1 0x1F 0x28 0xA 0x0 0x0 0x0 0x0 
0x7F8 : 0x11 0xA 0x2 0x5 0x11 0x1 0x4 0x0 
0x800 : 0x9 0xB 0x8 0x8 0x10 0x2 0x5 0x0 
0x808 : 0x0 0x1 0x0 0x0 0x2 0x2 0x2 0x2 
0x810 : 0x0 0x0 0x2 0x2 0x1 0x1 0x3C 0x39 
0x818 : 0x31 0x2A 0x27 0x3D 0x3F 0x3E 0x0 0x4A 
0x820 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x4A 
0x828 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x0 
0x830 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x838 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x840 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x11 
0x848 : 0x11 0x11 0x11 0x0 0x0 0x0 0x0 0x0 
0x850 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x858 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x860 : 0x0 0x14 0x0 0x6A 0x47 0x15 0x42 0x5A 
0x868 : 0x6A 0x47 0x15 0x3 0x3 0x5 0x0 0x3 
0x870 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x878 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x880 : 


Pass

[2016-03-31 23:45:23.323]
READ_COMMAND => Catch string between FW Infor: and [0006451C:3020213A] :-) == name : DIONYSUS 
linkDate : Feb 26 2016 - 11:53:13 
release : 14.10.00 

Sensor channel 2 detected : 
sensorID : 0x314 (currently active)
sensorRevision : 0x1402
moduleAvailable : 0x1
moduleYear : 0x6
moduleWorkWeek : 0xA
moduleDayofWeek : 0x4
moduleIntegrator : 0x29
moduleIRFilterID : 0x65
moduleLensID : 0x6C
moduleFocusID : 0x0
sensorAvailable : 0x1
oisAvailable: 0x0
focusAvailable : 0x0
focusID : 0x0
strobeAvailable: 0x1
strobeID : 0xFFC0
ledAvailable : 0x0
ledID : 0x0
ledMfgID : 0x0
numTestPatterns : 0x7
sensorI2CAddress : 0x10
focusI2CAddress : 0x0
strobeI2CAddress : 0x0
shutterAvailable : 0
sensorSerialNum : 0x29 0x28 0xB1 0x71 0xA 0x51 0x97 0xAD 
sensorSerialNumStr : F0W610401MXGMJF3W
number of total configurations : 3
current picked config : 0
    W/H=3856/2340, binW/H=0/0, rawW/H=3856/2340, rawPoolIDAux=47, outputPoolID=43, rawPoolID=45, maxFrameRateForTheConfig=29.248
ISP final output width : 640
ISP final output height : 480
maxFrameRate = 29.248 
minFrameRate = 29.248 
NVM Data 2176 bytes : 
0x0 : 0xF3 0x15 0xC 0x29 0x30 0x10 0x65 0x29 
0x8 : 0x21 0x0 0x6C 0x0 0x0 0x0 0x12 0x32 
0x10 : 0x0 0x0 0x0 0x28 0xB1 0x71 0xA 0x51 
0x18 : 0x97 0xAD 0x2D 0xB 0xE7 0x20 0x1 0x0 
0x20 : 0x11 0x0 0x0 0x0 0x0 0x0 0x0 0x2 
0x28 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x30 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x38 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0xE8 
0x40 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x6 
0x48 : 0x71 0x2 0xDA 0x3 0xDB 0x4 0x68 0x63 
0x50 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x58 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x60 : 0x13 0x13 0xEF 0x58 0x65 0x77 0x89 0x97 
0x68 : 0xA0 0xA4 0xA1 0x98 0x8A 0x78 0x66 0x58 
0x70 : 0x5F 0x73 0x89 0x9E 0xAF 0xBE 0xC3 0xBF 
0x78 : 0xB0 0x9E 0x8A 0x74 0x60 0x66 0x7C 0x95 
0x80 : 0xAD 0xC4 0xD9 0xE0 0xD9 0xC6 0xAE 0x98 
0x88 : 0x7E 0x66 0x6A 0x83 0x9E 0xB9 0xD5 0xEB 
0x90 : 0xF2 0xEC 0xD6 0xB9 0x9F 0x86 0x6A 0x6C 
0x98 : 0x86 0xA1 0xBD 0xDD 0xF3 0xFA 0xF3 0xDE 
0xA0 : 0xBE 0xA2 0x88 0x6C 0x6B 0x85 0x9E 0xB9 
0xA8 : 0xD9 0xED 0xF4 0xEF 0xD8 0xBA 0xA1 0x86 
0xB0 : 0x6A 0x67 0x7E 0x97 0xB0 0xC8 0xDC 0xE3 
0xB8 : 0xDC 0xC8 0xB0 0x99 0x80 0x66 0x61 0x74 
0xC0 : 0x8C 0xA0 0xB3 0xC2 0xC7 0xC1 0xB3 0xA1 
0xC8 : 0x8D 0x76 0x61 0x5B 0x69 0x7C 0x8F 0x9F 
0xD0 : 0xA9 0xAC 0xA8 0x9E 0x91 0x7E 0x6A 0x5C 
0xD8 : 0x4E 0x59 0x69 0x7B 0x8A 0x95 0x9A 0x97 
0xE0 : 0x8E 0x7F 0x6E 0x5C 0x51 0x54 0x65 0x7A 
0xE8 : 0x90 0xA4 0xB4 0xBB 0xB6 0xA8 0x95 0x7F 
0xF0 : 0x69 0x56 0x59 0x6E 0x87 0xA0 0xBA 0xD2 
0xF8 : 0xDB 0xD5 0xC0 0xA6 0x8C 0x73 0x5C 0x5C 
0x100 : 0x75 0x8F 0xAD 0xCD 0xE8 0xF1 0xEB 0xD4 
0x108 : 0xB4 0x95 0x7A 0x60 0x5E 0x78 0x93 0xB2 
0x110 : 0xD5 0xF1 0xFA 0xF4 0xDD 0xB9 0x99 0x7C 
0x118 : 0x62 0x5E 0x77 0x91 0xAE 0xD2 0xEB 0xF6 
0x120 : 0xF0 0xD7 0xB4 0x97 0x7B 0x60 0x5B 0x71 
0x128 : 0x8B 0xA4 0xC0 0xD8 0xE2 0xDB 0xC5 0xAA 
0x130 : 0x91 0x75 0x5C 0x56 0x69 0x7F 0x95 0xAA 
0x138 : 0xBC 0xC3 0xBD 0xAD 0x99 0x84 0x6B 0x57 
0x140 : 0x51 0x5D 0x6F 0x82 0x93 0x9E 0xA3 0x9F 
0x148 : 0x95 0x87 0x73 0x60 0x54 0x5B 0x67 0x7A 
0x150 : 0x8D 0x9B 0xA4 0xA8 0xA6 0x9B 0x8D 0x7B 
0x158 : 0x68 0x5A 0x62 0x76 0x8D 0xA3 0xB5 0xC3 
0x160 : 0xC8 0xC3 0xB4 0xA2 0x8E 0x76 0x61 0x68 
0x168 : 0x80 0x99 0xB1 0xC9 0xDC 0xE3 0xDB 0xC8 
0x170 : 0xB1 0x9B 0x81 0x69 0x6D 0x88 0xA2 0xBC 
0x178 : 0xD8 0xED 0xF4 0xEC 0xD8 0xBD 0xA2 0x89 
0x180 : 0x6D 0x6F 0x8A 0xA4 0xBF 0xDE 0xF3 0xFA 
0x188 : 0xF3 0xDF 0xC1 0xA6 0x8B 0x6F 0x6D 0x88 
0x190 : 0xA2 0xBC 0xDA 0xEE 0xF5 0xEF 0xDA 0xBD 
0x198 : 0xA3 0x89 0x6D 0x68 0x81 0x9A 0xB2 0xC9 
0x1A0 : 0xDC 0xE3 0xDD 0xC9 0xB3 0x9C 0x82 0x69 
0x1A8 : 0x62 0x76 0x8E 0xA2 0xB5 0xC4 0xC8 0xC4 
0x1B0 : 0xB5 0xA3 0x90 0x77 0x62 0x5D 0x6A 0x7D 
0x1B8 : 0x90 0xA0 0xAA 0xAC 0xAA 0xA0 0x91 0x7E 
0x1C0 : 0x6B 0x5E 0x58 0x65 0x76 0x8A 0x97 0xA2 
0x1C8 : 0xA7 0xA3 0x99 0x8B 0x7A 0x68 0x5A 0x5F 
0x1D0 : 0x72 0x89 0x9E 0xB0 0xBF 0xC5 0xC0 0xB2 
0x1D8 : 0xA1 0x8C 0x75 0x61 0x64 0x7B 0x94 0xAC 
0x1E0 : 0xC4 0xD9 0xE2 0xDB 0xC8 0xB1 0x99 0x80 
0x1E8 : 0x67 0x69 0x82 0x9C 0xB7 0xD4 0xEA 0xF4 
0x1F0 : 0xEE 0xD8 0xBB 0xA2 0x87 0x6B 0x6A 0x85 
0x1F8 : 0x9F 0xBA 0xDB 0xF1 0xFA 0xF3 0xE0 0xC0 
0x200 : 0xA5 0x8A 0x6D 0x69 0x83 0x9C 0xB7 0xD6 
0x208 : 0xEB 0xF4 0xF0 0xD9 0xBC 0xA2 0x88 0x6B 
0x210 : 0x66 0x7C 0x96 0xAD 0xC5 0xDB 0xE2 0xDD 
0x218 : 0xC9 0xB1 0x9A 0x81 0x67 0x5F 0x72 0x8A 
0x220 : 0x9F 0xB1 0xC1 0xC7 0xC3 0xB3 0xA1 0x8E 
0x228 : 0x76 0x61 0x5A 0x68 0x7A 0x8D 0x9C 0xA8 
0x230 : 0xAC 0xA9 0x9F 0x91 0x7E 0x6B 0x5D 0xF8 
0x238 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x240 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x248 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x250 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x258 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x260 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x268 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x270 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x278 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x280 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x288 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x290 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x298 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x300 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x308 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x310 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x318 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x320 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x328 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x330 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x338 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x340 : 0x0 0x0 0x0 0x0 0x0 0x0 0x1 0x5 
0x348 : 0xF 0x19 0x69 0xD7 0xEB 0x4B 0x35 0x31 
0x350 : 0x32 0x33 0x31 0x32 0x50 0x43 0x42 0x44 
0x358 : 0x35 0x33 0x41 0x31 0x32 0x33 0x34 0x0 
0x360 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x368 : 0x0 0x0 0x4C 0x56 0x31 0x32 0x33 0x31 
0x370 : 0x32 0x35 0x33 0x41 0x31 0x32 0x33 0x34 
0x378 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x380 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x388 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x390 : 0x0 0x0 0x0 0x0 0x32 0x35 0x33 0x31 
0x398 : 0x32 0x33 0x34 0x35 0x0 0x0 0x0 0x0 
0x3A0 : 0x0 0x0 0x0 0x0 0x44 0x35 0x31 0x32 
0x3A8 : 0x33 0x31 0x32 0x89 0xFF 0x0 0x0 0x0 
0x3B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x400 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x408 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x410 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x418 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x420 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x428 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x430 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x438 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x440 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x448 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x450 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x458 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x460 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x468 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x470 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x478 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x480 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x488 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x490 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x498 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x500 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x508 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x510 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x518 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x520 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x528 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x530 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x538 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x540 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x548 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x550 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x558 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x560 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x568 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x570 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x578 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x580 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x588 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x590 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x598 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x600 : 0x2 0xC 0x95 0x69 0xA0 0x42 0x43 0x80 
0x608 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x610 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x618 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x620 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x628 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x630 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x638 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x640 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x648 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x650 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x658 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x660 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x668 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x670 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x678 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x680 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x688 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x690 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x698 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C8 : 0x0 0x0 0x0 0xF 0xB0 0x90 0x87 0xEC 
0x6D0 : 0x70 0xEB 0xA0 0x31 0x5D 0x9F 0xE2 0xF6 
0x6D8 : 0xEF 0x74 0xD0 0xB0 0x45 0x80 0xBF 0x35 
0x6E0 : 0x87 0xDE 0x26 0xDC 0x3F 0xD7 0x3D 0x36 
0x6E8 : 0xA7 0x8B 0x3F 0x67 0xD4 0x1B 0x7 0xE7 
0x6F0 : 0xB1 0x58 0xD5 0xEB 0xF9 0x13 0xDD 0xE9 
0x6F8 : 0x42 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x700 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x708 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x710 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x718 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x720 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x728 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x730 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x738 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x740 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x748 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x750 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x758 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x760 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x768 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x770 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x778 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x780 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x788 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x790 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x798 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7E0 : 0x0 0x0 0x0 0x0 0x13 0x10 0x10 0x10 
0x7E8 : 0x12 0x9A 0x61 0x11 0x10 0xA 0x1F 0x8 
0x7F0 : 0x1 0x1F 0x28 0xA 0x0 0x0 0x0 0x0 
0x7F8 : 0x11 0xA 0x2 0x5 0x11 0x1 0x4 0x0 
0x800 : 0x9 0xB 0x8 0x8 0x10 0x2 0x5 0x0 
0x808 : 0x0 0x1 0x0 0x0 0x2 0x2 0x2 0x2 
0x810 : 0x0 0x0 0x2 0x2 0x1 0x1 0x3C 0x39 
0x818 : 0x31 0x2A 0x27 0x3D 0x3F 0x3E 0x0 0x4A 
0x820 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x4A 
0x828 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x0 
0x830 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x838 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x840 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x11 
0x848 : 0x11 0x11 0x11 0x0 0x0 0x0 0x0 0x0 
0x850 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x858 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x860 : 0x0 0x14 0x0 0x6A 0x47 0x15 0x42 0x5A 
0x868 : 0x6A 0x47 0x15 0x3 0x3 0x5 0x0 0x3 
0x870 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x878 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x880 : 


Pass

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> name : DIONYSUS 
linkDate : Feb 26 2016 - 11:53:13 
release : 14.10.00 

Sensor channel 2 detected : 
sensorID : 0x314 (currently active)
sensorRevision : 0x1402
moduleAvailable : 0x1
moduleYear : 0x6
moduleWorkWeek : 0xA
moduleDayofWeek : 0x4
moduleIntegrator : 0x29
moduleIRFilterID : 0x65
moduleLensID : 0x6C
moduleFocusID : 0x0
sensorAvailable : 0x1
oisAvailable: 0x0
focusAvailable : 0x0
focusID : 0x0
strobeAvailable: 0x1
strobeID : 0xFFC0
ledAvailable : 0x0
ledID : 0x0
ledMfgID : 0x0
numTestPatterns : 0x7
sensorI2CAddress : 0x10
focusI2CAddress : 0x0
strobeI2CAddress : 0x0
shutterAvailable : 0
sensorSerialNum : 0x29 0x28 0xB1 0x71 0xA 0x51 0x97 0xAD 
sensorSerialNumStr : F0W610401MXGMJF3W
number of total configurations : 3
current picked config : 0
    W/H=3856/2340, binW/H=0/0, rawW/H=3856/2340, rawPoolIDAux=47, outputPoolID=43, rawPoolID=45, maxFrameRateForTheConfig=29.248
ISP final output width : 640
ISP final output height : 480
maxFrameRate = 29.248 
minFrameRate = 29.248 
NVM Data 2176 bytes : 
0x0 : 0xF3 0x15 0xC 0x29 0x30 0x10 0x65 0x29 
0x8 : 0x21 0x0 0x6C 0x0 0x0 0x0 0x12 0x32 
0x10 : 0x0 0x0 0x0 0x28 0xB1 0x71 0xA 0x51 
0x18 : 0x97 0xAD 0x2D 0xB 0xE7 0x20 0x1 0x0 
0x20 : 0x11 0x0 0x0 0x0 0x0 0x0 0x0 0x2 
0x28 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x30 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x38 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0xE8 
0x40 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x6 
0x48 : 0x71 0x2 0xDA 0x3 0xDB 0x4 0x68 0x63 
0x50 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x58 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x60 : 0x13 0x13 0xEF 0x58 0x65 0x77 0x89 0x97 
0x68 : 0xA0 0xA4 0xA1 0x98 0x8A 0x78 0x66 0x58 
0x70 : 0x5F 0x73 0x89 0x9E 0xAF 0xBE 0xC3 0xBF 
0x78 : 0xB0 0x9E 0x8A 0x74 0x60 0x66 0x7C 0x95 
0x80 : 0xAD 0xC4 0xD9 0xE0 0xD9 0xC6 0xAE 0x98 
0x88 : 0x7E 0x66 0x6A 0x83 0x9E 0xB9 0xD5 0xEB 
0x90 : 0xF2 0xEC 0xD6 0xB9 0x9F 0x86 0x6A 0x6C 
0x98 : 0x86 0xA1 0xBD 0xDD 0xF3 0xFA 0xF3 0xDE 
0xA0 : 0xBE 0xA2 0x88 0x6C 0x6B 0x85 0x9E 0xB9 
0xA8 : 0xD9 0xED 0xF4 0xEF 0xD8 0xBA 0xA1 0x86 
0xB0 : 0x6A 0x67 0x7E 0x97 0xB0 0xC8 0xDC 0xE3 
0xB8 : 0xDC 0xC8 0xB0 0x99 0x80 0x66 0x61 0x74 
0xC0 : 0x8C 0xA0 0xB3 0xC2 0xC7 0xC1 0xB3 0xA1 
0xC8 : 0x8D 0x76 0x61 0x5B 0x69 0x7C 0x8F 0x9F 
0xD0 : 0xA9 0xAC 0xA8 0x9E 0x91 0x7E 0x6A 0x5C 
0xD8 : 0x4E 0x59 0x69 0x7B 0x8A 0x95 0x9A 0x97 
0xE0 : 0x8E 0x7F 0x6E 0x5C 0x51 0x54 0x65 0x7A 
0xE8 : 0x90 0xA4 0xB4 0xBB 0xB6 0xA8 0x95 0x7F 
0xF0 : 0x69 0x56 0x59 0x6E 0x87 0xA0 0xBA 0xD2 
0xF8 : 0xDB 0xD5 0xC0 0xA6 0x8C 0x73 0x5C 0x5C 
0x100 : 0x75 0x8F 0xAD 0xCD 0xE8 0xF1 0xEB 0xD4 
0x108 : 0xB4 0x95 0x7A 0x60 0x5E 0x78 0x93 0xB2 
0x110 : 0xD5 0xF1 0xFA 0xF4 0xDD 0xB9 0x99 0x7C 
0x118 : 0x62 0x5E 0x77 0x91 0xAE 0xD2 0xEB 0xF6 
0x120 : 0xF0 0xD7 0xB4 0x97 0x7B 0x60 0x5B 0x71 
0x128 : 0x8B 0xA4 0xC0 0xD8 0xE2 0xDB 0xC5 0xAA 
0x130 : 0x91 0x75 0x5C 0x56 0x69 0x7F 0x95 0xAA 
0x138 : 0xBC 0xC3 0xBD 0xAD 0x99 0x84 0x6B 0x57 
0x140 : 0x51 0x5D 0x6F 0x82 0x93 0x9E 0xA3 0x9F 
0x148 : 0x95 0x87 0x73 0x60 0x54 0x5B 0x67 0x7A 
0x150 : 0x8D 0x9B 0xA4 0xA8 0xA6 0x9B 0x8D 0x7B 
0x158 : 0x68 0x5A 0x62 0x76 0x8D 0xA3 0xB5 0xC3 
0x160 : 0xC8 0xC3 0xB4 0xA2 0x8E 0x76 0x61 0x68 
0x168 : 0x80 0x99 0xB1 0xC9 0xDC 0xE3 0xDB 0xC8 
0x170 : 0xB1 0x9B 0x81 0x69 0x6D 0x88 0xA2 0xBC 
0x178 : 0xD8 0xED 0xF4 0xEC 0xD8 0xBD 0xA2 0x89 
0x180 : 0x6D 0x6F 0x8A 0xA4 0xBF 0xDE 0xF3 0xFA 
0x188 : 0xF3 0xDF 0xC1 0xA6 0x8B 0x6F 0x6D 0x88 
0x190 : 0xA2 0xBC 0xDA 0xEE 0xF5 0xEF 0xDA 0xBD 
0x198 : 0xA3 0x89 0x6D 0x68 0x81 0x9A 0xB2 0xC9 
0x1A0 : 0xDC 0xE3 0xDD 0xC9 0xB3 0x9C 0x82 0x69 
0x1A8 : 0x62 0x76 0x8E 0xA2 0xB5 0xC4 0xC8 0xC4 
0x1B0 : 0xB5 0xA3 0x90 0x77 0x62 0x5D 0x6A 0x7D 
0x1B8 : 0x90 0xA0 0xAA 0xAC 0xAA 0xA0 0x91 0x7E 
0x1C0 : 0x6B 0x5E 0x58 0x65 0x76 0x8A 0x97 0xA2 
0x1C8 : 0xA7 0xA3 0x99 0x8B 0x7A 0x68 0x5A 0x5F 
0x1D0 : 0x72 0x89 0x9E 0xB0 0xBF 0xC5 0xC0 0xB2 
0x1D8 : 0xA1 0x8C 0x75 0x61 0x64 0x7B 0x94 0xAC 
0x1E0 : 0xC4 0xD9 0xE2 0xDB 0xC8 0xB1 0x99 0x80 
0x1E8 : 0x67 0x69 0x82 0x9C 0xB7 0xD4 0xEA 0xF4 
0x1F0 : 0xEE 0xD8 0xBB 0xA2 0x87 0x6B 0x6A 0x85 
0x1F8 : 0x9F 0xBA 0xDB 0xF1 0xFA 0xF3 0xE0 0xC0 
0x200 : 0xA5 0x8A 0x6D 0x69 0x83 0x9C 0xB7 0xD6 
0x208 : 0xEB 0xF4 0xF0 0xD9 0xBC 0xA2 0x88 0x6B 
0x210 : 0x66 0x7C 0x96 0xAD 0xC5 0xDB 0xE2 0xDD 
0x218 : 0xC9 0xB1 0x9A 0x81 0x67 0x5F 0x72 0x8A 
0x220 : 0x9F 0xB1 0xC1 0xC7 0xC3 0xB3 0xA1 0x8E 
0x228 : 0x76 0x61 0x5A 0x68 0x7A 0x8D 0x9C 0xA8 
0x230 : 0xAC 0xA9 0x9F 0x91 0x7E 0x6B 0x5D 0xF8 
0x238 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x240 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x248 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x250 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x258 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x260 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x268 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x270 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x278 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x280 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x288 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x290 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x298 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x300 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x308 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x310 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x318 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x320 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x328 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x330 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x338 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x340 : 0x0 0x0 0x0 0x0 0x0 0x0 0x1 0x5 
0x348 : 0xF 0x19 0x69 0xD7 0xEB 0x4B 0x35 0x31 
0x350 : 0x32 0x33 0x31 0x32 0x50 0x43 0x42 0x44 
0x358 : 0x35 0x33 0x41 0x31 0x32 0x33 0x34 0x0 
0x360 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x368 : 0x0 0x0 0x4C 0x56 0x31 0x32 0x33 0x31 
0x370 : 0x32 0x35 0x33 0x41 0x31 0x32 0x33 0x34 
0x378 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x380 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x388 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x390 : 0x0 0x0 0x0 0x0 0x32 0x35 0x33 0x31 
0x398 : 0x32 0x33 0x34 0x35 0x0 0x0 0x0 0x0 
0x3A0 : 0x0 0x0 0x0 0x0 0x44 0x35 0x31 0x32 
0x3A8 : 0x33 0x31 0x32 0x89 0xFF 0x0 0x0 0x0 
0x3B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x400 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x408 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x410 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x418 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x420 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x428 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x430 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x438 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x440 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x448 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x450 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x458 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x460 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x468 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x470 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x478 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x480 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x488 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x490 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x498 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x500 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x508 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x510 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x518 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x520 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x528 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x530 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x538 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x540 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x548 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x550 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x558 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x560 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x568 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x570 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x578 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x580 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x588 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x590 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x598 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x600 : 0x2 0xC 0x95 0x69 0xA0 0x42 0x43 0x80 
0x608 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x610 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x618 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x620 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x628 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x630 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x638 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x640 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x648 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x650 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x658 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x660 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x668 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x670 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x678 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x680 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x688 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x690 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x698 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C8 : 0x0 0x0 0x0 0xF 0xB0 0x90 0x87 0xEC 
0x6D0 : 0x70 0xEB 0xA0 0x31 0x5D 0x9F 0xE2 0xF6 
0x6D8 : 0xEF 0x74 0xD0 0xB0 0x45 0x80 0xBF 0x35 
0x6E0 : 0x87 0xDE 0x26 0xDC 0x3F 0xD7 0x3D 0x36 
0x6E8 : 0xA7 0x8B 0x3F 0x67 0xD4 0x1B 0x7 0xE7 
0x6F0 : 0xB1 0x58 0xD5 0xEB 0xF9 0x13 0xDD 0xE9 
0x6F8 : 0x42 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x700 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x708 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x710 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x718 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x720 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x728 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x730 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x738 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x740 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x748 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x750 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x758 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x760 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x768 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x770 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x778 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x780 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x788 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x790 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x798 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7E0 : 0x0 0x0 0x0 0x0 0x13 0x10 0x10 0x10 
0x7E8 : 0x12 0x9A 0x61 0x11 0x10 0xA 0x1F 0x8 
0x7F0 : 0x1 0x1F 0x28 0xA 0x0 0x0 0x0 0x0 
0x7F8 : 0x11 0xA 0x2 0x5 0x11 0x1 0x4 0x0 
0x800 : 0x9 0xB 0x8 0x8 0x10 0x2 0x5 0x0 
0x808 : 0x0 0x1 0x0 0x0 0x2 0x2 0x2 0x2 
0x810 : 0x0 0x0 0x2 0x2 0x1 0x1 0x3C 0x39 
0x818 : 0x31 0x2A 0x27 0x3D 0x3F 0x3E 0x0 0x4A 
0x820 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x4A 
0x828 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x0 
0x830 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x838 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x840 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x11 
0x848 : 0x11 0x11 0x11 0x0 0x0 0x0 0x0 0x0 
0x850 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x858 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x860 : 0x0 0x14 0x0 0x6A 0x47 0x15 0x42 0x5A 
0x868 : 0x6A 0x47 0x15 0x3 0x3 0x5 0x0 0x3 
0x870 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x878 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x880 : 


Pass
++++++++++++++ [4] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.324574s) ++++++++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> CAMERA_CONFIG 
}

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> name : DIONYSUS 
linkDate : Feb 26 2016 - 11:53:13 
release : 14.10.00 

Sensor channel 2 detected : 
sensorID : 0x314 (currently active)
sensorRevision : 0x1402
moduleAvailable : 0x1
moduleYear : 0x6
moduleWorkWeek : 0xA
moduleDayofWeek : 0x4
moduleIntegrator : 0x29
moduleIRFilterID : 0x65
moduleLensID : 0x6C
moduleFocusID : 0x0
sensorAvailable : 0x1
oisAvailable: 0x0
focusAvailable : 0x0
focusID : 0x0
strobeAvailable: 0x1
strobeID : 0xFFC0
ledAvailable : 0x0
ledID : 0x0
ledMfgID : 0x0
numTestPatterns : 0x7
sensorI2CAddress : 0x10
focusI2CAddress : 0x0
strobeI2CAddress : 0x0
shutterAvailable : 0
sensorSerialNum : 0x29 0x28 0xB1 0x71 0xA 0x51 0x97 0xAD 
sensorSerialNumStr : F0W610401MXGMJF3W
number of total configurations : 3
current picked config : 0
    W/H=3856/2340, binW/H=0/0, rawW/H=3856/2340, rawPoolIDAux=47, outputPoolID=43, rawPoolID=45, maxFrameRateForTheConfig=29.248
ISP final output width : 640
ISP final output height : 480
maxFrameRate = 29.248 
minFrameRate = 29.248 
NVM Data 2176 bytes : 
0x0 : 0xF3 0x15 0xC 0x29 0x30 0x10 0x65 0x29 
0x8 : 0x21 0x0 0x6C 0x0 0x0 0x0 0x12 0x32 
0x10 : 0x0 0x0 0x0 0x28 0xB1 0x71 0xA 0x51 
0x18 : 0x97 0xAD 0x2D 0xB 0xE7 0x20 0x1 0x0 
0x20 : 0x11 0x0 0x0 0x0 0x0 0x0 0x0 0x2 
0x28 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x30 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x38 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0xE8 
0x40 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x6 
0x48 : 0x71 0x2 0xDA 0x3 0xDB 0x4 0x68 0x63 
0x50 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x58 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x60 : 0x13 0x13 0xEF 0x58 0x65 0x77 0x89 0x97 
0x68 : 0xA0 0xA4 0xA1 0x98 0x8A 0x78 0x66 0x58 
0x70 : 0x5F 0x73 0x89 0x9E 0xAF 0xBE 0xC3 0xBF 
0x78 : 0xB0 0x9E 0x8A 0x74 0x60 0x66 0x7C 0x95 
0x80 : 0xAD 0xC4 0xD9 0xE0 0xD9 0xC6 0xAE 0x98 
0x88 : 0x7E 0x66 0x6A 0x83 0x9E 0xB9 0xD5 0xEB 
0x90 : 0xF2 0xEC 0xD6 0xB9 0x9F 0x86 0x6A 0x6C 
0x98 : 0x86 0xA1 0xBD 0xDD 0xF3 0xFA 0xF3 0xDE 
0xA0 : 0xBE 0xA2 0x88 0x6C 0x6B 0x85 0x9E 0xB9 
0xA8 : 0xD9 0xED 0xF4 0xEF 0xD8 0xBA 0xA1 0x86 
0xB0 : 0x6A 0x67 0x7E 0x97 0xB0 0xC8 0xDC 0xE3 
0xB8 : 0xDC 0xC8 0xB0 0x99 0x80 0x66 0x61 0x74 
0xC0 : 0x8C 0xA0 0xB3 0xC2 0xC7 0xC1 0xB3 0xA1 
0xC8 : 0x8D 0x76 0x61 0x5B 0x69 0x7C 0x8F 0x9F 
0xD0 : 0xA9 0xAC 0xA8 0x9E 0x91 0x7E 0x6A 0x5C 
0xD8 : 0x4E 0x59 0x69 0x7B 0x8A 0x95 0x9A 0x97 
0xE0 : 0x8E 0x7F 0x6E 0x5C 0x51 0x54 0x65 0x7A 
0xE8 : 0x90 0xA4 0xB4 0xBB 0xB6 0xA8 0x95 0x7F 
0xF0 : 0x69 0x56 0x59 0x6E 0x87 0xA0 0xBA 0xD2 
0xF8 : 0xDB 0xD5 0xC0 0xA6 0x8C 0x73 0x5C 0x5C 
0x100 : 0x75 0x8F 0xAD 0xCD 0xE8 0xF1 0xEB 0xD4 
0x108 : 0xB4 0x95 0x7A 0x60 0x5E 0x78 0x93 0xB2 
0x110 : 0xD5 0xF1 0xFA 0xF4 0xDD 0xB9 0x99 0x7C 
0x118 : 0x62 0x5E 0x77 0x91 0xAE 0xD2 0xEB 0xF6 
0x120 : 0xF0 0xD7 0xB4 0x97 0x7B 0x60 0x5B 0x71 
0x128 : 0x8B 0xA4 0xC0 0xD8 0xE2 0xDB 0xC5 0xAA 
0x130 : 0x91 0x75 0x5C 0x56 0x69 0x7F 0x95 0xAA 
0x138 : 0xBC 0xC3 0xBD 0xAD 0x99 0x84 0x6B 0x57 
0x140 : 0x51 0x5D 0x6F 0x82 0x93 0x9E 0xA3 0x9F 
0x148 : 0x95 0x87 0x73 0x60 0x54 0x5B 0x67 0x7A 
0x150 : 0x8D 0x9B 0xA4 0xA8 0xA6 0x9B 0x8D 0x7B 
0x158 : 0x68 0x5A 0x62 0x76 0x8D 0xA3 0xB5 0xC3 
0x160 : 0xC8 0xC3 0xB4 0xA2 0x8E 0x76 0x61 0x68 
0x168 : 0x80 0x99 0xB1 0xC9 0xDC 0xE3 0xDB 0xC8 
0x170 : 0xB1 0x9B 0x81 0x69 0x6D 0x88 0xA2 0xBC 
0x178 : 0xD8 0xED 0xF4 0xEC 0xD8 0xBD 0xA2 0x89 
0x180 : 0x6D 0x6F 0x8A 0xA4 0xBF 0xDE 0xF3 0xFA 
0x188 : 0xF3 0xDF 0xC1 0xA6 0x8B 0x6F 0x6D 0x88 
0x190 : 0xA2 0xBC 0xDA 0xEE 0xF5 0xEF 0xDA 0xBD 
0x198 : 0xA3 0x89 0x6D 0x68 0x81 0x9A 0xB2 0xC9 
0x1A0 : 0xDC 0xE3 0xDD 0xC9 0xB3 0x9C 0x82 0x69 
0x1A8 : 0x62 0x76 0x8E 0xA2 0xB5 0xC4 0xC8 0xC4 
0x1B0 : 0xB5 0xA3 0x90 0x77 0x62 0x5D 0x6A 0x7D 
0x1B8 : 0x90 0xA0 0xAA 0xAC 0xAA 0xA0 0x91 0x7E 
0x1C0 : 0x6B 0x5E 0x58 0x65 0x76 0x8A 0x97 0xA2 
0x1C8 : 0xA7 0xA3 0x99 0x8B 0x7A 0x68 0x5A 0x5F 
0x1D0 : 0x72 0x89 0x9E 0xB0 0xBF 0xC5 0xC0 0xB2 
0x1D8 : 0xA1 0x8C 0x75 0x61 0x64 0x7B 0x94 0xAC 
0x1E0 : 0xC4 0xD9 0xE2 0xDB 0xC8 0xB1 0x99 0x80 
0x1E8 : 0x67 0x69 0x82 0x9C 0xB7 0xD4 0xEA 0xF4 
0x1F0 : 0xEE 0xD8 0xBB 0xA2 0x87 0x6B 0x6A 0x85 
0x1F8 : 0x9F 0xBA 0xDB 0xF1 0xFA 0xF3 0xE0 0xC0 
0x200 : 0xA5 0x8A 0x6D 0x69 0x83 0x9C 0xB7 0xD6 
0x208 : 0xEB 0xF4 0xF0 0xD9 0xBC 0xA2 0x88 0x6B 
0x210 : 0x66 0x7C 0x96 0xAD 0xC5 0xDB 0xE2 0xDD 
0x218 : 0xC9 0xB1 0x9A 0x81 0x67 0x5F 0x72 0x8A 
0x220 : 0x9F 0xB1 0xC1 0xC7 0xC3 0xB3 0xA1 0x8E 
0x228 : 0x76 0x61 0x5A 0x68 0x7A 0x8D 0x9C 0xA8 
0x230 : 0xAC 0xA9 0x9F 0x91 0x7E 0x6B 0x5D 0xF8 
0x238 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x240 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x248 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x250 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x258 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x260 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x268 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x270 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x278 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x280 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x288 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x290 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x298 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x2F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x300 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x308 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x310 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x318 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x320 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x328 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x330 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x338 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x340 : 0x0 0x0 0x0 0x0 0x0 0x0 0x1 0x5 
0x348 : 0xF 0x19 0x69 0xD7 0xEB 0x4B 0x35 0x31 
0x350 : 0x32 0x33 0x31 0x32 0x50 0x43 0x42 0x44 
0x358 : 0x35 0x33 0x41 0x31 0x32 0x33 0x34 0x0 
0x360 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x368 : 0x0 0x0 0x4C 0x56 0x31 0x32 0x33 0x31 
0x370 : 0x32 0x35 0x33 0x41 0x31 0x32 0x33 0x34 
0x378 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x380 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x388 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x390 : 0x0 0x0 0x0 0x0 0x32 0x35 0x33 0x31 
0x398 : 0x32 0x33 0x34 0x35 0x0 0x0 0x0 0x0 
0x3A0 : 0x0 0x0 0x0 0x0 0x44 0x35 0x31 0x32 
0x3A8 : 0x33 0x31 0x32 0x89 0xFF 0x0 0x0 0x0 
0x3B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x3F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x400 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x408 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x410 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x418 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x420 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x428 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x430 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x438 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x440 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x448 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x450 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x458 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x460 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x468 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x470 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x478 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x480 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x488 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x490 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x498 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x4F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x500 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x508 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x510 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x518 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x520 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x528 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x530 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x538 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x540 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x548 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x550 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x558 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x560 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x568 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x570 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x578 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x580 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x588 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x590 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x598 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5E8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x5F8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x600 : 0x2 0xC 0x95 0x69 0xA0 0x42 0x43 0x80 
0x608 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x610 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x618 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x620 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x628 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x630 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x638 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x640 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x648 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x650 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x658 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x660 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x668 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x670 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x678 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x680 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x688 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x690 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x698 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x6C8 : 0x0 0x0 0x0 0xF 0xB0 0x90 0x87 0xEC 
0x6D0 : 0x70 0xEB 0xA0 0x31 0x5D 0x9F 0xE2 0xF6 
0x6D8 : 0xEF 0x74 0xD0 0xB0 0x45 0x80 0xBF 0x35 
0x6E0 : 0x87 0xDE 0x26 0xDC 0x3F 0xD7 0x3D 0x36 
0x6E8 : 0xA7 0x8B 0x3F 0x67 0xD4 0x1B 0x7 0xE7 
0x6F0 : 0xB1 0x58 0xD5 0xEB 0xF9 0x13 0xDD 0xE9 
0x6F8 : 0x42 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x700 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x708 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x710 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x718 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x720 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x728 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x730 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x738 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x740 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x748 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x750 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x758 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x760 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x768 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x770 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x778 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x780 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x788 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x790 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x798 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7A8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7B8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7C8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D0 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7D8 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x7E0 : 0x0 0x0 0x0 0x0 0x13 0x10 0x10 0x10 
0x7E8 : 0x12 0x9A 0x61 0x11 0x10 0xA 0x1F 0x8 
0x7F0 : 0x1 0x1F 0x28 0xA 0x0 0x0 0x0 0x0 
0x7F8 : 0x11 0xA 0x2 0x5 0x11 0x1 0x4 0x0 
0x800 : 0x9 0xB 0x8 0x8 0x10 0x2 0x5 0x0 
0x808 : 0x0 0x1 0x0 0x0 0x2 0x2 0x2 0x2 
0x810 : 0x0 0x0 0x2 0x2 0x1 0x1 0x3C 0x39 
0x818 : 0x31 0x2A 0x27 0x3D 0x3F 0x3E 0x0 0x4A 
0x820 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x4A 
0x828 : 0x7F 0xA4 0xBF 0x4A 0x7F 0xA4 0xBF 0x0 
0x830 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x838 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x840 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x11 
0x848 : 0x11 0x11 0x11 0x0 0x0 0x0 0x0 0x0 
0x850 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x858 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x860 : 0x0 0x14 0x0 0x6A 0x47 0x15 0x42 0x5A 
0x868 : 0x6A 0x47 0x15 0x3 0x3 0x5 0x0 0x3 
0x870 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x878 : 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
0x880 : 


Pass
++++++++++ [5] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) ++++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : CAL_CAMERA_SN:RETURN_VALUE: ===> parameters:
{
CAMERAKEY ==> FCMS 
ADDRESS ==> EEEERX ==> EndIndex ==> 29 
BeginIndex ==> 26 
 
PPPYWW ==> EndIndex ==> 22 
BeginIndex ==> 19 
 
DSSSS ==> EndIndex ==> 25 
BeginIndex ==> 23 
 
 
KEY ==> CAMERA_CONFIG 
}

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
++++++++++++++ [6] CAL_CAMERA_SN:RETURN_VALUE: (TestResult : PASS ; Duration : 0.003406s) ++++++++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> front_nvm_barcode(unit) 
}

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
++++++++ [7] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Front Camera SN_spec*] 
 
}

[2016-03-31 23:45:23.323]
JUDGE_SPEC =>  value is [F0W610401MXGMJF3W], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
+++++++++++++++ [8] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000519s) +++++++++++++++

[2016-03-31 23:45:23.323]
================= END TEST Front Camera SN (TestResult : PASS ; Duration : 2.451093s) =================

[2016-03-31 23:45:23.323]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Front Camera SN,,,F0W610401MXGMJF3W,NA,NA,,)

[2016-03-31 23:45:23.323]
Item Name:Front Camera SN, {NA}

[2016-03-31 23:45:23.323]
======================== START TEST COMPARE FRONT CAMERA SN WITH SFC (Item113) ========================

[2016-03-31 23:45:23.323]
^=^ Begin subItem : GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> front_nvm_barcode 
}

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
++++++++ [1] GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000009s) ++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> FRONT NVM BARCODE 
}

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
++++++++++ [2] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) ++++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : CHECKLENGTH:RETURN_VALUE: ===> parameters:
{
LENGTH ==> 17 
KEY ==> front_nvm_barcode 
}

[2016-03-31 23:45:23.323]
the Key length is 17 and the key is F0W610401MXGMJF3W, the matching length is 17

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
+++++++++++++++ [3] CHECKLENGTH:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000484s) +++++++++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : COMPARE:RETURN_VALUE: ===> parameters:
{
Comparison1 ==> SFIS ==> [*front_nvm_barcode*] 
Unit ==> [*front_nvm_barcode(unit)*] 
 
}

[2016-03-31 23:45:23.323]
COMPARE => Result : F0W610401MXGMJF3W

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
+++++++++++++++++ [4] COMPARE:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000711s) +++++++++++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : UPLOADATTRI:RETURN_VALUE: ===> parameters:
{
ATTRIBUTE ==> Item0=FRONT NVM BARCODE ;  
}

[2016-03-31 23:45:23.323]
PuddingPDCA Framework : SetQT_Attributes(Attribute = F0W610401MXGMJF3W, Key = FRONT NVM BARCODE)

[2016-03-31 23:45:23.323]
UPLOADATTRI => set attribute [F0W610401MXGMJF3W] for key [FRONT NVM BARCODE]

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
+++++++++++++++ [5] UPLOADATTRI:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000973s) +++++++++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Compare Front Camera SN With SFC_spec*] 
 
}

[2016-03-31 23:45:23.323]
JUDGE_SPEC =>  value is [F0W610401MXGMJF3W], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> F0W610401MXGMJF3W
+++++++++++++++ [6] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000508s) +++++++++++++++

[2016-03-31 23:45:23.323]
========= END TEST Compare Front Camera SN With SFC (TestResult : PASS ; Duration : 0.008819s) =========

[2016-03-31 23:45:23.323]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Compare Front Camera SN With SFC,,,F0W610401MXGMJF3W,NA,NA,,F0W610401MXGMJF3W)

[2016-03-31 23:45:23.323]
Item Name:Compare Front Camera SN With SFC, {NA}

[2016-03-31 23:45:23.323]
=================================== START TEST CHECK MTCL (Item114) ===================================

[2016-03-31 23:45:23.323]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z 2 --devread 3 0x51 0x0B1A 0x0352 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:23.323]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:23.323]
Write to ---> MOBILE , command[i2c -z 2 --devread 3 0x51 0x0B1A 0x0352(STRING)]

[2016-03-31 23:45:23.323]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z 2 --devread 3 0x51 0x0B1A 0x0352,2,0;return value:0!

[2016-03-31 23:45:23.323]
PostTXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x0B1A 0x0352 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:23.323 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:23.323]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:23.323]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005651s) +++++++++++++++++++++

[2016-03-31 23:45:23.323]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Data: 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z 2 --devread 3 0x51 0x0B1A 0x0352
Reading 850 bytes from register offset 0xB1A into 0x7BFFF498, buffer read:	
Data:  0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:24.324]
PostRXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x0B1A 0x0352
Reading 850 bytes from register offset 0xB1A into 0x7BFFF498, buffer read:	
Data:  0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:24.324 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:24.324]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:24.324]
CATCH_VALUE => Catch OK : 0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66

[2016-03-31 23:45:24.324]
READ_COMMAND => Catch string between Data: and [0006451C:3020213A] :-) == 0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.999975s) ++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66
+++++++++++ [3] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) +++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> MtCl_TEMP 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : COMBINEANDFORMATSTRING:RETURN_VALUE: ===> parameters:
{
PREKEY ==> MtCl_TEMP 
Flip ==> 1 
POSTKEY ==> MtCl 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66
+++++++++ [5] COMBINEANDFORMATSTRING:RETURN_VALUE: (TestResult : PASS ; Duration : 0.008434s) +++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x4B  0x28  0x03  0x00  0x52  0x03  0x20  0x00  0x03  0x46  0x52  0x50  0x36  0x31  0x33  0x35  0x31  0x30  0x37  0x48  0x48  0x31  0x4E  0x48  0x35  0x33  0x2B  0x00  0x00  0x00  0xB8  0x1D  0x4B  0x28  0x03  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xC8  0xC9  0xC7  0xC7  0xC8  0xC7  0xC7  0xC8  0xC7  0xCB  0xCB  0x00  0x00  0x00  0x8C  0x8B  0x8B  0x8B  0x8B  0x8D  0x8A  0x8B  0x8B  0x8A  0x8B  0x8C  0x00  0x00  0x00  0x77  0x76  0x76  0x76  0x75  0x76  0x75  0x76  0x75  0x76  0x76  0x76  0x00  0x00  0x00  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x36  0x00  0x00  0x00  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x32  0x00  0x00  0x00  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x3A  0x00  0x00  0x00  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x81  0x80  0x80  0x80  0x80  0x80  0x81  0x82  0x82  0x80  0x81  0x80  0x80  0x7E  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x7F  0x7E  0x7E  0x80  0x80  0x00  0x00  0x00  0x00  0x80  0x80  0x80  0x7F  0x80  0x81  0x80  0x80  0x80  0x80  0x80  0x80  0x80  0x81  0x81  0x82  0x81  0x81  0x80  0x80  0x7F  0x7F  0x80  0x80  0x00  0x00  0x00  0x00  0x71  0x63  0x65  0x64  0x65  0x65  0x67  0x62  0x64  0x66  0x63  0x71  0x00  0x00  0x00  0x52  0x48  0x4A  0x4A  0x49  0x48  0x4A  0x48  0x49  0x4A  0x48  0x52  0x00  0x00  0x00  0x68  0x5B  0x5C  0x5C  0x5C  0x5C  0x5E  0x5B  0x5B  0x5D  0x5C  0x68  0x00  0x00  0x00  0x00  0x00  0x01  0x12  0xFF  0x00  0x00  0x00  0x00  0x83  0x81  0x7D  0x78  0x70  0x68  0x7A  0x80  0x80  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x85  0x85  0x81  0x82  0x83  0x83  0x82  0x86  0x85  0x85  0x83  0x82  0x83  0x80  0x7F  0x7F  0x7D  0x7D  0x7A  0x78  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x85  0x82  0x83  0x83  0x82  0x82  0x85  0x84  0x84  0x83  0x82  0x82  0x7F  0x7E  0x7D  0x7C  0x7B  0x7A  0x79  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x83  0x80  0x7C  0x78  0x70  0x68  0x7B  0x80  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x84  0x82  0x81  0x83  0x82  0x82  0x86  0x84  0x85  0x83  0x82  0x81  0x80  0x7F  0x7F  0x7D  0x7D  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x83  0x84  0x83  0x82  0x83  0x82  0x82  0x86  0x84  0x84  0x83  0x82  0x81  0x7F  0x7E  0x7D  0x7C  0x7C  0x7B  0x78  0x77  0x72  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x82  0x80  0x7D  0x78  0x6F  0x68  0x79  0x81  0x7F  0x7A  0x79  0x75  0x00  0x00  0x00  0x69  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x7D  0x69  0x00  0x00  0x00  0x84  0x83  0x83  0x81  0x82  0x83  0x82  0x85  0x85  0x85  0x83  0x82  0x81  0x80  0x7E  0x7F  0x7D  0x7D  0x7A  0x77  0x76  0x73  0x00  0x00  0x00  0x00  0x84  0x84  0x84  0x82  0x83  0x83  0x82  0x84  0x84  0x84  0x83  0x82  0x81  0x80  0x7D  0x7E  0x7C  0x7C  0x7A  0x78  0x77  0x73  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x58  0x02  0x58  0x02  0x58  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0xCA  0x00  0x00  0x00  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x8A  0x00  0x00  0x00  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x73  0x00  0x00  0x00  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x43  0x00  0x00  0x00  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x37  0x00  0x00  0x00  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x33  0x00  0x00  0x00  0x6B  0x64  0x64  0x63  0x63  0x62  0x67  0x63  0x63  0x67  0x62  0x66  0x00  0x00  0x00  0x72  0x6B  0x6D  0x6A  0x6A  0x69  0x6D  0x6A  0x6A  0x6F  0x6B  0x6C  0x00  0x00  0x00  0x72  0x6B  0x6C  0x6A  0x6A  0x68  0x6E  0x67  0x6A  0x6E  0x69  0x6F  0x00  0x00  0x00  0x64  0x64  0x64  0x0A  0x0A  0x0A  0x14  0x00  0x8B  0x8B  0x8B  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0xFF  0xFF  0xFF  0xFF  0xFF  0x66
+++++++++++ [6] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000004s) +++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> MtCl 
REGEX ==> (0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF) 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> Invalide RegularExpress ((0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF)) in MemoryKey[MtCl]
+++++++++++++++ [7] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.001006s) +++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : MATCHING_RESULT_TESTFLOW:RETURN_VALUE: ===> parameters:
{
FAIL ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 1 
 
 ; Item1=GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ==> KEY ==> MtCl 
 
 ;  
PASS ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 0 
 
 ; Item1=SET_PROCESS_STATUS:RETURN_VALUE: ==> IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
 
 ;  
}

[2016-03-31 23:45:24.324]
PRE SUB ITEM HAS CHANGED to [1]

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x0003284B 0x00200352 0x50524603 0x35333136 0x48373031 0x484E3148 0x002B3335 0x1DB80000 0x0003284B 0x00000000 0x00000000 0x00000000 0xC7C9C8CA 0xC7C7C8C7 0xCBCBC7C8 0x8C000000 0x8B8B8B8B 0x8B8B8A8D 0x008C8B8A 0x76770000 0x76757676 0x76757675 0x00007676 0x36363600 0x36363636 0x36363636 0x00000036 0x32323232 0x32323232 0x32323232 0x3A000000 0x3A3A3A3A 0x3A3A3A3A 0x003A3A3A 0x80800000 0x81808080 0x80808181 0x81808080 0x81808282 0x7F7E8080 0x00008080 0x80800000 0x80807F80 0x80808080 0x81808080 0x81818281 0x7E7E7F80 0x00008080 0x80800000 0x81807F80 0x80808080 0x81808080 0x81818281 0x7F7F8080 0x00008080 0x63710000 0x65656465 0x66646267 0x00007163 0x4A485200 0x4A48494A 0x484A4948 0x00000052 0x5C5C5B68 0x5B5E5C5C 0x685C5D5B 0x00000000 0xFF120100 0x00000000 0x787D8183 0x807A6870 0x75797A80 0x69000000 0x7D7D7D7D 0x7D7D7D7D 0x00697D7D 0x85850000 0x83838281 0x85858682 0x80838283 0x7D7D7F7F 0x7376787A 0x00000000 0x83828584 0x85828283 0x82838484 0x7D7E7F82 0x797A7B7C 0x00007377 0x00000000 0x80830000 0x6870787C 0x7A7F807B 0x00007579 0x7D7D6900 0x7D7D7D7D 0x7D7D7D7D 0x00000069 0x81828484 0x86828283 0x82838584 0x7F7F8081 0x787B7D7D 0x00007277 0x84830000 0x82838283 0x84848682 0x7F818283 0x7C7C7D7E 0x7277787B 0x00000000 0x00000000 0x787D8082 0x8179686F 0x75797A7F 0x69000000 0x7D7D7D7D 0x7D7D7D7D 0x00697D7D 0x83840000 0x83828183 0x85858582 0x80818283 0x7D7D7F7E 0x7376777A 0x00000000 0x82848484 0x84828383 0x82838484 0x7E7D8081 0x787A7C7C 0x00007377 0x00000000 0x00000000 0x02580258 0x00000258 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0xCACACACA 0xCACACACA 0xCACACACA 0x8A000000 0x8A8A8A8A 0x8A8A8A8A 0x008A8A8A 0x73730000 0x73737373 0x73737373 0x00007373 0x43434300 0x43434343 0x43434343 0x00000043 0x37373737 0x37373737 0x37373737 0x33000000 0x33333333 0x33333333 0x00333333 0x646B0000 0x62636364 0x67636367 0x00006662 0x6D6B7200 0x6D696A6A 0x6B6F6A6A 0x0000006C 0x6A6C6B72 0x676E686A 0x6F696E6A 0x64000000 0x0A0A6464 0x8B00140A 0x00008B8B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0xFFFFFFFF 0x000066FF
++++++++ [8] MATCHING_RESULT_TESTFLOW:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000478s) ++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Check MtCl_spec*] 
 
}

[2016-03-31 23:45:24.324]
JUDGE_SPEC =>  value is [0x0003284B 0x00200352 0x50524603 0x35333136 0x48373031 0x484E3148 0x002B3335 0x1DB80000 0x0003284B 0x00000000 0x00000000 0x00000000 0xC7C9C8CA 0xC7C7C8C7 0xCBCBC7C8 0x8C000000 0x8B8B8B8B 0x8B8B8A8D 0x008C8B8A 0x76770000 0x76757676 0x76757675 0x00007676 0x36363600 0x36363636 0x36363636 0x00000036 0x32323232 0x32323232 0x32323232 0x3A000000 0x3A3A3A3A 0x3A3A3A3A 0x003A3A3A 0x80800000 0x81808080 0x80808181 0x81808080 0x81808282 0x7F7E8080 0x00008080 0x80800000 0x80807F80 0x80808080 0x81808080 0x81818281 0x7E7E7F80 0x00008080 0x80800000 0x81807F80 0x80808080 0x81808080 0x81818281 0x7F7F8080 0x00008080 0x63710000 0x65656465 0x66646267 0x00007163 0x4A485200 0x4A48494A 0x484A4948 0x00000052 0x5C5C5B68 0x5B5E5C5C 0x685C5D5B 0x00000000 0xFF120100 0x00000000 0x787D8183 0x807A6870 0x75797A80 0x69000000 0x7D7D7D7D 0x7D7D7D7D 0x00697D7D 0x85850000 0x83838281 0x85858682 0x80838283 0x7D7D7F7F 0x7376787A 0x00000000 0x83828584 0x85828283 0x82838484 0x7D7E7F82 0x797A7B7C 0x00007377 0x00000000 0x80830000 0x6870787C 0x7A7F807B 0x00007579 0x7D7D6900 0x7D7D7D7D 0x7D7D7D7D 0x00000069 0x81828484 0x86828283 0x82838584 0x7F7F8081 0x787B7D7D 0x00007277 0x84830000 0x82838283 0x84848682 0x7F818283 0x7C7C7D7E 0x7277787B 0x00000000 0x00000000 0x787D8082 0x8179686F 0x75797A7F 0x69000000 0x7D7D7D7D 0x7D7D7D7D 0x00697D7D 0x83840000 0x83828183 0x85858582 0x80818283 0x7D7D7F7E 0x7376777A 0x00000000 0x82848484 0x84828383 0x82838484 0x7E7D8081 0x787A7C7C 0x00007377 0x00000000 0x00000000 0x02580258 0x00000258 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0xCACACACA 0xCACACACA 0xCACACACA 0x8A000000 0x8A8A8A8A 0x8A8A8A8A 0x008A8A8A 0x73730000 0x73737373 0x73737373 0x00007373 0x43434300 0x43434343 0x43434343 0x00000043 0x37373737 0x37373737 0x37373737 0x33000000 0x33333333 0x33333333 0x00333333 0x646B0000 0x62636364 0x67636367 0x00006662 0x6D6B7200 0x6D696A6A 0x6B6F6A6A 0x0000006C 0x6A6C6B72 0x676E686A 0x6F696E6A 0x64000000 0x0A0A6464 0x8B00140A 0x00008B8B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0xFFFFFFFF 0x000066FF], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x0003284B 0x00200352 0x50524603 0x35333136 0x48373031 0x484E3148 0x002B3335 0x1DB80000 0x0003284B 0x00000000 0x00000000 0x00000000 0xC7C9C8CA 0xC7C7C8C7 0xCBCBC7C8 0x8C000000 0x8B8B8B8B 0x8B8B8A8D 0x008C8B8A 0x76770000 0x76757676 0x76757675 0x00007676 0x36363600 0x36363636 0x36363636 0x00000036 0x32323232 0x32323232 0x32323232 0x3A000000 0x3A3A3A3A 0x3A3A3A3A 0x003A3A3A 0x80800000 0x81808080 0x80808181 0x81808080 0x81808282 0x7F7E8080 0x00008080 0x80800000 0x80807F80 0x80808080 0x81808080 0x81818281 0x7E7E7F80 0x00008080 0x80800000 0x81807F80 0x80808080 0x81808080 0x81818281 0x7F7F8080 0x00008080 0x63710000 0x65656465 0x66646267 0x00007163 0x4A485200 0x4A48494A 0x484A4948 0x00000052 0x5C5C5B68 0x5B5E5C5C 0x685C5D5B 0x00000000 0xFF120100 0x00000000 0x787D8183 0x807A6870 0x75797A80 0x69000000 0x7D7D7D7D 0x7D7D7D7D 0x00697D7D 0x85850000 0x83838281 0x85858682 0x80838283 0x7D7D7F7F 0x7376787A 0x00000000 0x83828584 0x85828283 0x82838484 0x7D7E7F82 0x797A7B7C 0x00007377 0x00000000 0x80830000 0x6870787C 0x7A7F807B 0x00007579 0x7D7D6900 0x7D7D7D7D 0x7D7D7D7D 0x00000069 0x81828484 0x86828283 0x82838584 0x7F7F8081 0x787B7D7D 0x00007277 0x84830000 0x82838283 0x84848682 0x7F818283 0x7C7C7D7E 0x7277787B 0x00000000 0x00000000 0x787D8082 0x8179686F 0x75797A7F 0x69000000 0x7D7D7D7D 0x7D7D7D7D 0x00697D7D 0x83840000 0x83828183 0x85858582 0x80818283 0x7D7D7F7E 0x7376777A 0x00000000 0x82848484 0x84828383 0x82838484 0x7E7D8081 0x787A7C7C 0x00007377 0x00000000 0x00000000 0x02580258 0x00000258 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0xCACACACA 0xCACACACA 0xCACACACA 0x8A000000 0x8A8A8A8A 0x8A8A8A8A 0x008A8A8A 0x73730000 0x73737373 0x73737373 0x00007373 0x43434300 0x43434343 0x43434343 0x00000043 0x37373737 0x37373737 0x37373737 0x33000000 0x33333333 0x33333333 0x00333333 0x646B0000 0x62636364 0x67636367 0x00006662 0x6D6B7200 0x6D696A6A 0x6B6F6A6A 0x0000006C 0x6A6C6B72 0x676E686A 0x6F696E6A 0x64000000 0x0A0A6464 0x8B00140A 0x00008B8B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0xFFFFFFFF 0x000066FF
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000874s) +++++++++++++++

[2016-03-31 23:45:24.324]
==================== END TEST Check MtCl (TestResult : PASS ; Duration : 1.031954s) ====================

[2016-03-31 23:45:24.324]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check MtCl,,,0x0003284B 0x00200352 0x50524603 0x35333136 0x48373031 0x484E3148 0x002B3335 0x1DB80000 0x0003284B 0x00000000 0x00000000 0x00000000 0xC7C9C8CA 0xC7C7C8C7 0xCBCBC7C8 0x8C000000 0x8B8B8B8B 0x8B8B8A8D 0x008C8B8A 0x76770000 0x76757676 0x76757675 0x00007676 0x36363600 0x36363636 0x36363636 0x00000036 0x32323232 0x32323232 0x32323232 0x3A000000 0x3A3A3A3A 0x3A3A3A3A 0x003A3A3A 0x80800000 0x81808080 0x80808181 0x81808080 0x81808282 0x7F7E8080 0x00008080 0x80800000 0x80807F80 0x80808080 0x81808080 0x81818281 0x7E7E7F80 0x00008080 0x80800000 0x81807F80 0x80808080 0x81808080 0x81818281 0x7F7F8080 0x00008080 0x63710000 0x65656465 0x66646267 0x00007163 0x4A485200 0x4A48494A 0x484A4948 0x00000052 0x5C5C5B68 0x5B5E5C5C 0x685C5D5B 0x00000000 0xFF120100 0x00000000 0x787D8183 0x807A6870 0x75797A80 0x69000000 0x7D7D7D7D 0x7D7D7D7D 0x00697D7D 0x85850000 0x83838281 0x85858682 0x80838283 0x7D7D7F7F 0x7376787A 0x00000000 0x83828584 0x85828283 0x82838484 0x7D7E7F82 0x797A7B7C 0x00007377 0x00000000 0x80830000 0x6870787C 0x7A7F807B 0x00007579 0x7D7D6900 0x7D7D7D7D 0x7D7D7D7D 0x00000069 0x81828484 0x86828283 0x82838584 0x7F7F8081 0x787B7D7D 0x00007277 0x84830000 0x82838283 0x84848682 0x7F818283 0x7C7C7D7E 0x7277787B 0x00000000 0x00000000 0x787D8082 0x8179686F 0x75797A7F 0x69000000 0x7D7D7D7D 0x7D7D7D7D 0x00697D7D 0x83840000 0x83828183 0x85858582 0x80818283 0x7D7D7F7E 0x7376777A 0x00000000 0x82848484 0x84828383 0x82838484 0x7E7D8081 0x787A7C7C 0x00007377 0x00000000 0x00000000 0x02580258 0x00000258 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0xCACACACA 0xCACACACA 0xCACACACA 0x8A000000 0x8A8A8A8A 0x8A8A8A8A 0x008A8A8A 0x73730000 0x73737373 0x73737373 0x00007373 0x43434300 0x43434343 0x43434343 0x00000043 0x37373737 0x37373737 0x37373737 0x33000000 0x33333333 0x33333333 0x00333333 0x646B0000 0x62636364 0x67636367 0x00006662 0x6D6B7200 0x6D696A6A 0x6B6F6A6A 0x0000006C 0x6A6C6B72 0x676E686A 0x6F696E6A 0x64000000 0x0A0A6464 0x8B00140A 0x00008B8B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0xFFFFFFFF 0x000066FF,NA,NA,,)

[2016-03-31 23:45:24.324]
Item Name:Check MtCl, {NA}

[2016-03-31 23:45:24.324]
=================================== START TEST CHECK GLCL (Item115) ===================================

[2016-03-31 23:45:24.324]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z 2 --devread 3 0x51 0x46 0xdc 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:24.324]
Write to ---> MOBILE , command[i2c -z 2 --devread 3 0x51 0x46 0xdc(STRING)]

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z 2 --devread 3 0x51 0x46 0xdc,2,0;return value:0!

[2016-03-31 23:45:24.324]
PostTXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x46 0xdc 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:24.324 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:24.324]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005726s) +++++++++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Data: 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z 2 --devread 3 0x51 0x46 0xdc
Reading 220 bytes from register offset 0x46 into 0x7A096598, buffer read:	
Data:  0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:24.324]
PostRXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x46 0xdc
Reading 220 bytes from register offset 0x46 into 0x7A096598, buffer read:	
Data:  0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:24.324 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:24.324]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:24.324]
CATCH_VALUE => Catch OK : 0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00

[2016-03-31 23:45:24.324]
READ_COMMAND => Catch string between Data: and [0006451C:3020213A] :-) == 0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.277373s) ++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00
+++++++++++ [3] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) +++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> GLCl_TEMP 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : COMBINEANDFORMATSTRING:RETURN_VALUE: ===> parameters:
{
PREKEY ==> GLCl_TEMP 
Flip ==> 1 
POSTKEY ==> GLCl 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00
+++++++++ [5] COMBINEANDFORMATSTRING:RETURN_VALUE: (TestResult : PASS ; Duration : 0.003057s) +++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x32  0x34  0x34  0x34  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0xC0  0x01  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0x1C  0xC7  0x71  0x1C  0x1C  0x07  0x07  0x07  0xC7  0xC1  0x01  0x07  0x07  0x07  0x1C  0xC0  0x01  0x1C  0x00  0x00  0x1C  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x1C  0x00  0x07  0x00  0x70  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0x34  0x34  0xD0  0x40  0x03  0xD0  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x70  0x00  0x00  0x07  0x00  0x07  0x70  0xC0  0xC1  0xC1  0x71  0x70  0x1C  0x1C  0x07  0xC7  0xC1  0x01  0x07  0x07  0x1C  0xC0  0x01  0x07  0x70  0x00  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x40  0x03  0x34  0xD0  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0x43  0x43  0xD3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x32  0xD0  0x00  0x0D  0x00  0x0D  0x00  0x00  0x00  0x00  0x00  0x1C  0x00  0x1C  0x00  0x07  0x00  0x07  0x00  0x07  0x70  0x70  0x70  0x70  0x1C  0xC7  0x71  0xDC  0x71  0x70  0x1C  0x07  0x07  0x07  0x07  0x1C  0x1C  0x70  0x00  0x07  0x70  0x00  0x00  0x70  0x00  0x40  0x03  0x00  0x40  0x03  0x34  0xD0  0x40  0x43  0x43  0xD3  0x34  0x4D  0xD3  0x4D  0x77  0x77  0x77  0xC7  0x0D  0x00  0x00  0x00  0x00  0x00  0x00  0x00
+++++++++++ [6] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000004s) +++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> GLCl 
REGEX ==> (0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF) 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> Invalide RegularExpress ((0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF)) in MemoryKey[GLCl]
+++++++++++++++ [7] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000378s) +++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : MATCHING_RESULT_TESTFLOW:RETURN_VALUE: ===> parameters:
{
FAIL ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 1 
 
 ; Item1=GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ==> KEY ==> GLCl 
 
 ;  
PASS ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 0 
 
 ; Item1=SET_PROCESS_STATUS:RETURN_VALUE: ==> IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
 
 ;  
}

[2016-03-31 23:45:24.324]
PRE SUB ITEM HAS CHANGED to [1]

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00000100 0x34343432 0x00D00340 0x00000000 0x01C00070 0x07000700 0x70707070 0x1C71C71C 0x1C1C71C7 0xC7070707 0x070701C1 0x01C01C07 0x1C00001C 0x00000000 0x00000000 0x1C007000 0x70000700 0x00000000 0x00000000 0xD0343432 0x00D00340 0x00000000 0x00700000 0x07000700 0xC1C1C070 0x1C1C7071 0x01C1C707 0xC01C0707 0x00700701 0x70000070 0x00034000 0x03400340 0x0340D034 0x4340D034 0xD3434343 0x00000000 0x00000000 0x0D00D032 0x00000D00 0x1C000000 0x07001C00 0x07000700 0x70707070 0xDC71C71C 0x071C7071 0x1C070707 0x0700701C 0x70000070 0x00034000 0xD0340340 0xD3434340 0x4DD34D34 0xC7777777 0x0000000D 0x00000000
++++++++ [8] MATCHING_RESULT_TESTFLOW:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000707s) ++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Check GLCl_spec*] 
 
}

[2016-03-31 23:45:24.324]
JUDGE_SPEC =>  value is [0x00000100 0x34343432 0x00D00340 0x00000000 0x01C00070 0x07000700 0x70707070 0x1C71C71C 0x1C1C71C7 0xC7070707 0x070701C1 0x01C01C07 0x1C00001C 0x00000000 0x00000000 0x1C007000 0x70000700 0x00000000 0x00000000 0xD0343432 0x00D00340 0x00000000 0x00700000 0x07000700 0xC1C1C070 0x1C1C7071 0x01C1C707 0xC01C0707 0x00700701 0x70000070 0x00034000 0x03400340 0x0340D034 0x4340D034 0xD3434343 0x00000000 0x00000000 0x0D00D032 0x00000D00 0x1C000000 0x07001C00 0x07000700 0x70707070 0xDC71C71C 0x071C7071 0x1C070707 0x0700701C 0x70000070 0x00034000 0xD0340340 0xD3434340 0x4DD34D34 0xC7777777 0x0000000D 0x00000000], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00000100 0x34343432 0x00D00340 0x00000000 0x01C00070 0x07000700 0x70707070 0x1C71C71C 0x1C1C71C7 0xC7070707 0x070701C1 0x01C01C07 0x1C00001C 0x00000000 0x00000000 0x1C007000 0x70000700 0x00000000 0x00000000 0xD0343432 0x00D00340 0x00000000 0x00700000 0x07000700 0xC1C1C070 0x1C1C7071 0x01C1C707 0xC01C0707 0x00700701 0x70000070 0x00034000 0x03400340 0x0340D034 0x4340D034 0xD3434343 0x00000000 0x00000000 0x0D00D032 0x00000D00 0x1C000000 0x07001C00 0x07000700 0x70707070 0xDC71C71C 0x071C7071 0x1C070707 0x0700701C 0x70000070 0x00034000 0xD0340340 0xD3434340 0x4DD34D34 0xC7777777 0x0000000D 0x00000000
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000611s) +++++++++++++++

[2016-03-31 23:45:24.324]
==================== END TEST Check GLCl (TestResult : PASS ; Duration : 0.300010s) ====================

[2016-03-31 23:45:24.324]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check GLCl,,,0x00000100 0x34343432 0x00D00340 0x00000000 0x01C00070 0x07000700 0x70707070 0x1C71C71C 0x1C1C71C7 0xC7070707 0x070701C1 0x01C01C07 0x1C00001C 0x00000000 0x00000000 0x1C007000 0x70000700 0x00000000 0x00000000 0xD0343432 0x00D00340 0x00000000 0x00700000 0x07000700 0xC1C1C070 0x1C1C7071 0x01C1C707 0xC01C0707 0x00700701 0x70000070 0x00034000 0x03400340 0x0340D034 0x4340D034 0xD3434343 0x00000000 0x00000000 0x0D00D032 0x00000D00 0x1C000000 0x07001C00 0x07000700 0x70707070 0xDC71C71C 0x071C7071 0x1C070707 0x0700701C 0x70000070 0x00034000 0xD0340340 0xD3434340 0x4DD34D34 0xC7777777 0x0000000D 0x00000000,NA,NA,,)

[2016-03-31 23:45:24.324]
Item Name:Check GLCl, {NA}

[2016-03-31 23:45:24.324]
=================================== START TEST CHECK BLCL (Item116) ===================================

[2016-03-31 23:45:24.324]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z 2 --devread 3 0x51 0x122 0x10 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:24.324]
Write to ---> MOBILE , command[i2c -z 2 --devread 3 0x51 0x122 0x10(STRING)]

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z 2 --devread 3 0x51 0x122 0x10,2,0;return value:0!

[2016-03-31 23:45:24.324]
PostTXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x122 0x10 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:24.324 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:24.324]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005308s) +++++++++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Data: 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z 2 --devread 3 0x51 0x122 0x10
Reading 16 bytes from register offset 0x122 into 0x7A033398, buffer read:	
Data:  0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:24.324]
PostRXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x122 0x10
Reading 16 bytes from register offset 0x122 into 0x7A033398, buffer read:	
Data:  0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:24.324 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:24.324]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:24.324]
CATCH_VALUE => Catch OK : 0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00

[2016-03-31 23:45:24.324]
READ_COMMAND => Catch string between Data: and [0006451C:3020213A] :-) == 0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.046495s) ++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00
+++++++++++ [3] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000006s) +++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> BLCl_TEMP 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : COMBINEANDFORMATSTRING:RETURN_VALUE: ===> parameters:
{
PREKEY ==> BLCl_TEMP 
Flip ==> 1 
POSTKEY ==> BLCl 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00
+++++++++ [5] COMBINEANDFORMATSTRING:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000281s) +++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00  0x01  0x00  0x00  0x75  0x11  0xAE  0x46  0x69  0x02  0x00  0x00  0x00  0x00  0x00  0x00
+++++++++++ [6] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000004s) +++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> BLCl 
REGEX ==> (0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF) 
}

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> Invalide RegularExpress ((0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF)) in MemoryKey[BLCl]
+++++++++++++++ [7] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000128s) +++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : MATCHING_RESULT_TESTFLOW:RETURN_VALUE: ===> parameters:
{
FAIL ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 1 
 
 ; Item1=GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ==> KEY ==> BLCl 
 
 ;  
PASS ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 0 
 
 ; Item1=SET_PROCESS_STATUS:RETURN_VALUE: ==> IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
 
 ;  
}

[2016-03-31 23:45:24.324]
PRE SUB ITEM HAS CHANGED to [1]

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00000100 0x46AE1175 0x00000269 0x00000000
++++++++ [8] MATCHING_RESULT_TESTFLOW:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000481s) ++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Check BLCl_spec*] 
 
}

[2016-03-31 23:45:24.324]
JUDGE_SPEC =>  value is [0x00000100 0x46AE1175 0x00000269 0x00000000], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 0x00000100 0x46AE1175 0x00000269 0x00000000
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000505s) +++++++++++++++

[2016-03-31 23:45:24.324]
==================== END TEST Check BLCl (TestResult : PASS ; Duration : 0.062704s) ====================

[2016-03-31 23:45:24.324]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check BLCl,,,0x00000100 0x46AE1175 0x00000269 0x00000000,NA,NA,,)

[2016-03-31 23:45:24.324]
Item Name:Check BLCl, {NA}

[2016-03-31 23:45:24.324]
=================================== START TEST CHECK ORBG (Item117) ===================================

[2016-03-31 23:45:24.324]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z 2 --devread 3 0x51 0x2000 0x3E0 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:24.324]
Write to ---> MOBILE , command[i2c -z 2 --devread 3 0x51 0x2000 0x3E0(STRING)]

[2016-03-31 23:45:24.324]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z 2 --devread 3 0x51 0x2000 0x3E0,2,0;return value:0!

[2016-03-31 23:45:24.324]
PostTXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x2000 0x3E0 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:24.324 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:24.324]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:24.324]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004686s) +++++++++++++++++++++

[2016-03-31 23:45:24.324]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Data: 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z 2 --devread 3 0x51 0x2000 0x3E0
Reading 992 bytes from register offset 0x2000 into 0x79F0BB98, buffer read:	
Data:  0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:25.325]
PostRXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x2000 0x3E0
Reading 992 bytes from register offset 0x2000 into 0x79F0BB98, buffer read:	
Data:  0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:25.325 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:25.325]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:25.325]
CATCH_VALUE => Catch OK : 0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23

[2016-03-31 23:45:25.325]
READ_COMMAND => Catch string between Data: and [0006451C:3020213A] :-) == 0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 1.160352s) ++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23
+++++++++++ [3] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) +++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> OrbG_TEMP 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) ++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : COMBINEANDFORMATSTRING:RETURN_VALUE: ===> parameters:
{
PREKEY ==> OrbG_TEMP 
Flip ==> 1 
POSTKEY ==> OrbG 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23
+++++++++ [5] COMBINEANDFORMATSTRING:RETURN_VALUE: (TestResult : PASS ; Duration : 0.009676s) +++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x66  0x71  0x02  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x08  0x12  0x14  0x14  0x14  0x14  0x15  0x15  0x16  0x16  0x16  0x16  0x17  0x16  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x16  0x17  0x17  0x15  0x15  0x15  0x15  0x14  0x14  0x14  0x14  0x13  0x15  0x16  0x16  0x16  0x17  0x17  0x0C  0x16  0x15  0x15  0x17  0x17  0x17  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x12  0x16  0x16  0x17  0x15  0x16  0x17  0x17  0x15  0x15  0x16  0x15  0x15  0x14  0x14  0x14  0x17  0x16  0x15  0x15  0x15  0x16  0x15  0x15  0x15  0x14  0x14  0x14  0x15  0x15  0x13  0x14  0x14  0x14  0x14  0x00  0xD4  0x30  0x00  0x00  0x4E  0x19  0x00  0x00  0xF1  0x25  0x09  0x39  0x4D  0x40  0x60  0x3E  0x2F  0x41  0x3C  0x42  0xC1  0x3C  0x7A  0x3C  0x19  0x3B  0x36  0x3E  0xE1  0x3E  0x1D  0x3E  0x1D  0x40  0x35  0x42  0x90  0x3D  0x35  0x3D  0x8A  0x3D  0x09  0x3F  0xD1  0x3F  0xA1  0x3E  0x45  0x40  0x52  0x42  0x41  0x3E  0xF2  0x3D  0x73  0x3E  0x03  0x40  0xA9  0x40  0x07  0x40  0x63  0x42  0x5A  0x43  0xFF  0x3E  0xBB  0x3E  0x4C  0x3F  0xC4  0x40  0x46  0x41  0x31  0x41  0x7B  0x42  0x4A  0x43  0xF4  0x3F  0xAA  0x3F  0xCC  0x3F  0x51  0x41  0xA1  0x41  0xEC  0x42  0x87  0x45  0xE6  0x45  0xF8  0x40  0xA1  0x40  0x61  0x40  0xB0  0x40  0xFB  0x42  0xE5  0x42  0xE1  0x44  0x35  0x48  0x34  0x42  0xD1  0x41  0xA3  0x41  0xD3  0x41  0x35  0x44  0x78  0x44  0x5F  0x46  0x36  0x48  0x74  0x43  0x24  0x43  0x91  0x42  0x0B  0x43  0x1A  0x43  0xA8  0x46  0xDF  0x47  0x49  0x49  0xC3  0x44  0xD0  0x43  0x0A  0x42  0xD3  0x42  0xCA  0x43  0x60  0x44  0xD3  0x46  0xDC  0x48  0x1E  0x46  0x96  0x44  0x32  0x43  0x45  0x44  0x53  0x45  0xE0  0x46  0x62  0x47  0x28  0x4A  0x78  0x43  0x7C  0x46  0x06  0x45  0xBB  0x45  0x50  0x46  0x8E  0x46  0xC0  0x45  0x70  0x49  0x5B  0x42  0x00  0xF9  0xAC  0x29  0x0E  0x02  0x23  0xF5  0xC0  0xF7  0x44  0xF7  0xC0  0xFB  0xDF  0x03  0x08  0xFD  0xB9  0xFD  0xCA  0xF6  0x5C  0xF6  0x63  0xF6  0x2A  0xF5  0x19  0xEF  0x5C  0xF8  0x45  0xF8  0x43  0xF8  0x48  0xF6  0xCA  0xF5  0x77  0xF6  0x3A  0xF5  0x83  0xEF  0x52  0xF7  0xE2  0xF7  0x3A  0xF7  0xCF  0xF5  0x3D  0xF1  0xC5  0xF5  0xBF  0xEF  0x94  0xEE  0xD0  0xF6  0xE0  0xF7  0xF4  0xF6  0x1E  0xF1  0x1E  0xF0  0xC4  0xF0  0xF4  0xEF  0xA5  0xEE  0x5B  0xF6  0x63  0xF7  0x91  0xF6  0x7E  0xF0  0x77  0xF0  0x12  0xEF  0x91  0xE9  0x02  0xE9  0x52  0xF1  0x42  0xF2  0x1C  0xF2  0x30  0xF1  0xA7  0xEF  0xFC  0xEE  0x13  0xEA  0x52  0xE3  0x6B  0xF0  0x17  0xF1  0x89  0xF1  0x72  0xF0  0x85  0xEA  0x4A  0xEA  0x42  0xE9  0xB5  0xE2  0xD9  0xEB  0x26  0xEC  0x3F  0xF1  0x46  0xEC  0xB1  0xEF  0x12  0xE9  0xC8  0xE3  0xAE  0xE1  0xA0  0xEA  0xF5  0xEB  0xB5  0xF0  0x97  0xF0  0x95  0xEB  0x2B  0xEB  0x9B  0xE4  0xEF  0xE2  0xEB  0xE9  0x00  0xEB  0xB9  0xEC  0x23  0xEB  0x90  0xEA  0xE1  0xE5  0xF2  0xE4  0x40  0xE2  0x0D  0xEC  0xA1  0xE5  0x63  0xEA  0x04  0xEA  0xB3  0xE9  0x70  0xE5  0x8B  0xEA  0x53  0xE3  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x00  0x23
+++++++++++ [6] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000005s) +++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> OrbG 
REGEX ==> ^(0xFFFFFFFF 0xFFFFFFFF) 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> Invalide RegularExpress (^(0xFFFFFFFF 0xFFFFFFFF)) in MemoryKey[OrbG]
+++++++++++++++ [7] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000514s) +++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : MATCHING_RESULT_TESTFLOW:RETURN_VALUE: ===> parameters:
{
FAIL ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 1 
 
 ; Item1=GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ==> KEY ==> OrbG 
 
 ;  
PASS ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 0 
 
 ; Item1=GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ==> KEY ==> OrbG 
 
 ;  
}

[2016-03-31 23:45:25.325]
PRE SUB ITEM HAS CHANGED to [1]

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xF900425B 0x020E29AC 0xF7C0F523 0xFBC0F744 0xFD0803DF 0xF6CAFDB9 0xF663F65C 0xEF19F52A 0xF845F85C 0xF648F843 0xF677F5CA 0xEF83F53A 0xF7E2F752 0xF5CFF73A 0xF5C5F13D 0xEE94EFBF 0xF7E0F6D0 0xF11EF6F4 0xF0C4F01E 0xEEA5EFF4 0xF763F65B 0xF07EF691 0xEF12F077 0xE902E991 0xF242F152 0xF130F21C 0xEEFCEFA7 0xE352EA13 0xF117F06B 0xF072F189 0xEA4AEA85 0xE2B5E942 0xEC26EBD9 0xEC46F13F 0xE912EFB1 0xE1AEE3C8 0xEBF5EAA0 0xF097F0B5 0xEB2BEB95 0xE2EFE49B 0xEB00E9EB 0xEB23ECB9 0xE5E1EA90 0xE240E4F2 0xE5A1EC0D 0xEA04EA63 0xE570E9B3 0xE353EA8B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x23000000
++++++++ [8] MATCHING_RESULT_TESTFLOW:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000481s) ++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Check OrbG_spec*] 
 
}

[2016-03-31 23:45:25.325]
JUDGE_SPEC =>  value is [0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xF900425B 0x020E29AC 0xF7C0F523 0xFBC0F744 0xFD0803DF 0xF6CAFDB9 0xF663F65C 0xEF19F52A 0xF845F85C 0xF648F843 0xF677F5CA 0xEF83F53A 0xF7E2F752 0xF5CFF73A 0xF5C5F13D 0xEE94EFBF 0xF7E0F6D0 0xF11EF6F4 0xF0C4F01E 0xEEA5EFF4 0xF763F65B 0xF07EF691 0xEF12F077 0xE902E991 0xF242F152 0xF130F21C 0xEEFCEFA7 0xE352EA13 0xF117F06B 0xF072F189 0xEA4AEA85 0xE2B5E942 0xEC26EBD9 0xEC46F13F 0xE912EFB1 0xE1AEE3C8 0xEBF5EAA0 0xF097F0B5 0xEB2BEB95 0xE2EFE49B 0xEB00E9EB 0xEB23ECB9 0xE5E1EA90 0xE240E4F2 0xE5A1EC0D 0xEA04EA63 0xE570E9B3 0xE353EA8B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x23000000], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xF900425B 0x020E29AC 0xF7C0F523 0xFBC0F744 0xFD0803DF 0xF6CAFDB9 0xF663F65C 0xEF19F52A 0xF845F85C 0xF648F843 0xF677F5CA 0xEF83F53A 0xF7E2F752 0xF5CFF73A 0xF5C5F13D 0xEE94EFBF 0xF7E0F6D0 0xF11EF6F4 0xF0C4F01E 0xEEA5EFF4 0xF763F65B 0xF07EF691 0xEF12F077 0xE902E991 0xF242F152 0xF130F21C 0xEEFCEFA7 0xE352EA13 0xF117F06B 0xF072F189 0xEA4AEA85 0xE2B5E942 0xEC26EBD9 0xEC46F13F 0xE912EFB1 0xE1AEE3C8 0xEBF5EAA0 0xF097F0B5 0xEB2BEB95 0xE2EFE49B 0xEB00E9EB 0xEB23ECB9 0xE5E1EA90 0xE240E4F2 0xE5A1EC0D 0xEA04EA63 0xE570E9B3 0xE353EA8B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x23000000
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000944s) +++++++++++++++

[2016-03-31 23:45:25.325]
==================== END TEST Check OrbG (TestResult : PASS ; Duration : 1.191893s) ====================

[2016-03-31 23:45:25.325]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check OrbG,,,0x00027166 0x00000000 0x00000000 0x00000000 0x00000000 0x14141208 0x15151414 0x16161616 0x15151617 0x14141414 0x16161613 0x16161616 0x15171716 0x14151515 0x13141414 0x16161615 0x160C1717 0x17171515 0x15151617 0x14141415 0x17161612 0x17171615 0x15161515 0x14141415 0x15151617 0x15151615 0x14141415 0x14131515 0x00141414 0x000030D4 0x0000194E 0x390925F1 0x3E60404D 0x423C412F 0x3C7A3CC1 0x3E363B19 0x3E1D3EE1 0x4235401D 0x3D353D90 0x3F093D8A 0x3EA13FD1 0x42524045 0x3DF23E41 0x40033E73 0x400740A9 0x435A4263 0x3EBB3EFF 0x40C43F4C 0x41314146 0x434A427B 0x3FAA3FF4 0x41513FCC 0x42EC41A1 0x45E64587 0x40A140F8 0x40B04061 0x42E542FB 0x483544E1 0x41D14234 0x41D341A3 0x44784435 0x4836465F 0x43244374 0x430B4291 0x46A8431A 0x494947DF 0x43D044C3 0x42D3420A 0x446043CA 0x48DC46D3 0x4496461E 0x44454332 0x46E04553 0x4A284762 0x467C4378 0x45BB4506 0x468E4650 0x497045C0 0xF900425B 0x020E29AC 0xF7C0F523 0xFBC0F744 0xFD0803DF 0xF6CAFDB9 0xF663F65C 0xEF19F52A 0xF845F85C 0xF648F843 0xF677F5CA 0xEF83F53A 0xF7E2F752 0xF5CFF73A 0xF5C5F13D 0xEE94EFBF 0xF7E0F6D0 0xF11EF6F4 0xF0C4F01E 0xEEA5EFF4 0xF763F65B 0xF07EF691 0xEF12F077 0xE902E991 0xF242F152 0xF130F21C 0xEEFCEFA7 0xE352EA13 0xF117F06B 0xF072F189 0xEA4AEA85 0xE2B5E942 0xEC26EBD9 0xEC46F13F 0xE912EFB1 0xE1AEE3C8 0xEBF5EAA0 0xF097F0B5 0xEB2BEB95 0xE2EFE49B 0xEB00E9EB 0xEB23ECB9 0xE5E1EA90 0xE240E4F2 0xE5A1EC0D 0xEA04EA63 0xE570E9B3 0xE353EA8B 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000 0x23000000,NA,NA,,)

[2016-03-31 23:45:25.325]
Item Name:Check OrbG, {NA}

[2016-03-31 23:45:25.325]
=================================== START TEST CHECK DPCL (Item118) ===================================

[2016-03-31 23:45:25.325]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> i2c -z 2 --devread 3 0x51 0x133 0x28 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:25.325]
Write to ---> MOBILE , command[i2c -z 2 --devread 3 0x51 0x133 0x28(STRING)]

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:i2c -z 2 --devread 3 0x51 0x133 0x28,2,0;return value:0!

[2016-03-31 23:45:25.325]
PostTXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x133 0x28 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:25.325 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:25.325]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004565s) +++++++++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Data: 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=NOT FOUND ; Item1=ERROR ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:i2c -z 2 --devread 3 0x51 0x133 0x28
Reading 40 bytes from register offset 0x133 into 0x7A060218, buffer read:	
Data:  0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00 
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:25.325]
PostRXToUI ===> 
{
Info ==> i2c -z 2 --devread 3 0x51 0x133 0x28
Reading 40 bytes from register offset 0x133 into 0x7A060218, buffer read:	
Data:  0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00 
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:25.325 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:25.325]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:25.325]
CATCH_VALUE => Catch OK : 0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00

[2016-03-31 23:45:25.325]
READ_COMMAND => Catch string between Data: and [0006451C:3020213A] :-) == 0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.075845s) ++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00
+++++++++++ [3] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000008s) +++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : MEMORY_VALUE_FOR_KEY:RETURN_VALUE: ===> parameters:
{
KEY ==> Dpcl_TEMP 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00
++++++++++ [4] MEMORY_VALUE_FOR_KEY:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000007s) ++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : COMBINEANDFORMATSTRING:RETURN_VALUE: ===> parameters:
{
PREKEY ==> Dpcl_TEMP 
Flip ==> 1 
POSTKEY ==> Dpcl 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00
+++++++++ [5] COMBINEANDFORMATSTRING:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000581s) +++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : CHANGE_CANCLE_FLAG:RETURN_VALUE: ===> parameters:
{
FailCancle ==> 1 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x01  0x00  0x00  0x00  0x0C  0xB8  0xD2  0x00  0xC2  0x8E  0x2D  0x00  0x32  0xB9  0xFF  0xFF  0xAE  0x3D  0x09  0x00  0xF3  0x61  0xF4  0x00  0x5F  0x60  0x02  0x00  0xBF  0x14  0x04  0x00  0xD0  0xF7  0x12  0x00  0x71  0xF3  0xE8  0x00
+++++++++++ [6] CHANGE_CANCLE_FLAG:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000005s) +++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : CATCH_VALUE:RETURN_VALUE: ===> parameters:
{
KEY ==> Dpcl 
REGEX ==> (0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF) 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> Invalide RegularExpress ((0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF)) in MemoryKey[Dpcl]
+++++++++++++++ [7] CATCH_VALUE:RETURN_VALUE: (TestResult : FAIL ; Duration : 0.000175s) +++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : MATCHING_RESULT_TESTFLOW:RETURN_VALUE: ===> parameters:
{
FAIL ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 1 
 
 ; Item1=GET_MEMORY_VALUE_FROM_KEY:RETURN_VALUE: ==> KEY ==> Dpcl 
 
 ;  
PASS ==> Item0=CHANGE_PRE_SUBITEM_RESULT:RETURN_VALUE: ==> RESULT ==> 0 
 
 ; Item1=SET_PROCESS_STATUS:RETURN_VALUE: ==> IP_Priority ==> 0 
CancelToEnd ==> 0 
IP_NoParametric ==> 0 
 
 ;  
}

[2016-03-31 23:45:25.325]
PRE SUB ITEM HAS CHANGED to [1]

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x00000001 0x00D2B80C 0x002D8EC2 0xFFFFB932 0x00093DAE 0x00F461F3 0x0002605F 0x000414BF 0x0012F7D0 0x00E8F371
++++++++ [8] MATCHING_RESULT_TESTFLOW:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000481s) ++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*Check DPCl_spec*] 
 
}

[2016-03-31 23:45:25.325]
JUDGE_SPEC =>  value is [0x00000001 0x00D2B80C 0x002D8EC2 0xFFFFB932 0x00093DAE 0x00F461F3 0x0002605F 0x000414BF 0x0012F7D0 0x00E8F371], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 0x00000001 0x00D2B80C 0x002D8EC2 0xFFFFB932 0x00093DAE 0x00F461F3 0x0002605F 0x000414BF 0x0012F7D0 0x00E8F371
+++++++++++++++ [9] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000525s) +++++++++++++++

[2016-03-31 23:45:25.325]
==================== END TEST Check DPCl (TestResult : PASS ; Duration : 0.092702s) ====================

[2016-03-31 23:45:25.325]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Check DPCl,,,0x00000001 0x00D2B80C 0x002D8EC2 0xFFFFB932 0x00093DAE 0x00F461F3 0x0002605F 0x000414BF 0x0012F7D0 0x00E8F371,NA,NA,,)

[2016-03-31 23:45:25.325]
Item Name:Check DPCl, {NA}

[2016-03-31 23:45:25.325]
===================================== START TEST MLB_SN (Item119) =====================================

[2016-03-31 23:45:25.325]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> syscfg print MLB# 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:25.325]
Write to ---> MOBILE , command[syscfg print MLB#(STRING)]

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:syscfg print MLB#,2,0;return value:0!

[2016-03-31 23:45:25.325]
PostTXToUI ===> 
{
Info ==> syscfg print MLB# 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:25.325 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:25.325]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.004490s) +++++++++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> syscfg print MLB# 
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
DELETE_ENTER ==> 1 
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 10 
END ==> :-) 
}

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:syscfg print MLB#
C7H6104003QH6TF41
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:25.325]
PostRXToUI ===> 
{
Info ==> syscfg print MLB#
C7H6104003QH6TF41
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:25.325 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:25.325]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:25.325]
CATCH_VALUE => Catch OK : C7H6104003QH6TF41

[2016-03-31 23:45:25.325]
READ_COMMAND => Catch string between syscfg print MLB# and [0006451C:3020213A] :-) == C7H6104003QH6TF41

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> C7H6104003QH6TF41
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020557s) ++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : JUDGE_SPEC:RETURN_VALUE: ===> parameters:
{
COMMON_SPEC ==> P_LimitBlack ==> [*MLB_SN_spec*] 
 
}

[2016-03-31 23:45:25.325]
JUDGE_SPEC =>  value is [C7H6104003QH6TF41], spec is [Item0=NA ; ], mode is [2]

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> C7H6104003QH6TF41
+++++++++++++++ [3] JUDGE_SPEC:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000498s) +++++++++++++++

[2016-03-31 23:45:25.325]
====================== END TEST MLB_SN (TestResult : PASS ; Duration : 0.028645s) ======================

[2016-03-31 23:45:25.325]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(MLB_SN,,,C7H6104003QH6TF41,NA,NA,,)

[2016-03-31 23:45:25.325]
Item Name:MLB_SN, {NA}

[2016-03-31 23:45:25.325]
============================== START TEST I2C ISOLATOR DISABLE (Item120) ==============================

[2016-03-31 23:45:25.325]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> socgpio --port 1 --pin 25 --output 0 
TARGET ==> MOBILE 
}

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:25.325]
Write to ---> MOBILE , command[socgpio --port 1 --pin 25 --output 0(STRING)]

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:socgpio --port 1 --pin 25 --output 0,2,0;return value:0!

[2016-03-31 23:45:25.325]
PostTXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:25.325 
Identify ==> UartView 
TARGET ==> TX ==> [MOBILE] 
}

[2016-03-31 23:45:25.325]
SEND_COMMAND => Send command to MOBILE pass!

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005585s) +++++++++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> socgpio --port 1 --pin 25 --output 0 
PASS_RECEIVE ==>  
TARGET ==> MOBILE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=FAIL ; Item2=NOT FOUND ;  
END_SYMBOL ==> Item0=:-) ;  
TIMEOUT ==> 5 
END ==> :-) 
}

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:socgpio --port 1 --pin 25 --output 0
OK
[0006451C:3020213A] :-)  TerminateSymbol:(
    "[0006451C:3020213A] :-)"
) MatchType:0 IntervalTime:0.000100 TimeOut:5.000000);return value:0!

[2016-03-31 23:45:25.325]
PostRXToUI ===> 
{
Info ==> socgpio --port 1 --pin 25 --output 0
OK
[0006451C:3020213A] :-)  
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:25.325 
Identify ==> UartView 
TARGET ==> RX ==> [MOBILE] 
}

[2016-03-31 23:45:25.325]
READ_COMMAND => Read command from MOBILE pass!

[2016-03-31 23:45:25.325]
CATCH_VALUE => Catch OK : OK

[2016-03-31 23:45:25.325]
READ_COMMAND => Catch string between socgpio --port 1 --pin 25 --output 0 and [0006451C:3020213A] :-) == OK

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> OK
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.020978s) ++++++++++++++

[2016-03-31 23:45:25.325]
=============== END TEST I2C Isolator Disable (TestResult : PASS ; Duration : 0.029038s) ===============

[2016-03-31 23:45:25.325]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(I2C Isolator Disable,,,OK,NA,NA,,)

[2016-03-31 23:45:25.325]
Item Name:I2C Isolator Disable, {NA}

[2016-03-31 23:45:25.325]
====================================== START TEST AMIOK (Item121) ======================================

[2016-03-31 23:45:25.325]
^=^ Begin subItem : AMIOK_CHECK:RETURN_VALUE: ===> parameters:
{
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> PASS
+++++++++++++++ [1] AMIOK_CHECK:RETURN_VALUE: (TestResult : PASS ; Duration : 0.001475s) +++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : SET_PROCESS_STATUS:RETURN_VALUE: ===> parameters:
{
IP_Priority ==> 0 
CancelToEnd ==> 1 
IP_NoParametric ==> 1 
}

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> PASS
+++++++++++ [2] SET_PROCESS_STATUS:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000010s) +++++++++++

[2016-03-31 23:45:25.325]
====================== END TEST AmIOK (TestResult : PASS ; Duration : 0.004369s) ======================

[2016-03-31 23:45:25.325]
Item Name:AmIOK, {NA}

[2016-03-31 23:45:25.325]
================================== START TEST RESET FIXTURE (Item122) ==================================

[2016-03-31 23:45:25.325]
^=^ Begin subItem : SEND_COMMAND: ===> parameters:
{
STRING ==> Reset Fixture 
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Clear_UartBuff:TimeOut:readOut:],177) Clear buffer ok!

[2016-03-31 23:45:25.325]
Write to ---> FIXTURE , command[Reset Fixture(STRING)]

[2016-03-31 23:45:25.325]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Write_UartCommand:PackedNum:Interval:IsHex:],263) Para:Reset Fixture,2,0;return value:0!

[2016-03-31 23:45:25.325]
PostTXToUI ===> 
{
Info ==> Reset Fixture 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:25.325 
Identify ==> UartView 
TARGET ==> TX ==> [FIXTURE] 
}

[2016-03-31 23:45:25.325]
SEND_COMMAND => Send command to FIXTURE pass!

[2016-03-31 23:45:25.325]
RETURN_VALUE ===> 
+++++++++++++++++++++ [1] SEND_COMMAND: (TestResult : PASS ; Duration : 0.005274s) +++++++++++++++++++++

[2016-03-31 23:45:25.325]
^=^ Begin subItem : READ_COMMAND:RETURN_VALUE: ===> parameters:
{
MATCHTYPE ==> 0 
BEGIN ==> Reset Fixture 
PASS_RECEIVE ==> Item0=Pass ;  
TARGET ==> FIXTURE 
FAIL_RECEIVE ==> Item0=ERROR ; Item1=NOT FOUND ; Item2=FAIL ;  
DELETE_ENTER ==> 0 
END_SYMBOL ==> Item0=@_@ ;  
TIMEOUT ==> 10 
END ==> @_@ 
}

[2016-03-31 23:45:26.326]
[/Users/build/archive/cm_d10_CG-SENSOR_38/src/Binaries/PEGA_ATS_UART/PEGA_ATS_UART/PEGA_ATS_UART.m](-[PEGA_ATS_UART Read_UartData:TerminateSymbol:MatchType:IntervalTime:TimeOut:],360) (Read_UartData:Reset Fixture
Reset Fixture Pass
@_@ TerminateSymbol:(
    "@_@"
) MatchType:0 IntervalTime:0.000100 TimeOut:10.000000);return value:0!

[2016-03-31 23:45:26.326]
PostRXToUI ===> 
{
Info ==> Reset Fixture
Reset Fixture Pass
@_@ 
PORTCOLOR ==>  
TIME ==> 2016-03-31 23:45:26.326 
Identify ==> UartView 
TARGET ==> RX ==> [FIXTURE] 
}

[2016-03-31 23:45:26.326]
READ_COMMAND => Read command from FIXTURE pass!

[2016-03-31 23:45:26.326]
CATCH_VALUE => Catch OK : Reset Fixture Pass

[2016-03-31 23:45:26.326]
READ_COMMAND => Catch string between Reset Fixture and @_@ == Reset Fixture Pass

[2016-03-31 23:45:26.326]
RETURN_VALUE ===> Reset Fixture Pass
++++++++++++++ [2] READ_COMMAND:RETURN_VALUE: (TestResult : PASS ; Duration : 0.028537s) ++++++++++++++

[2016-03-31 23:45:26.326]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:45:26.326]
RETURN_VALUE ===> PASS
+++++ [3] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000012s) +++++

[2016-03-31 23:45:26.326]
================== END TEST Reset Fixture (TestResult : PASS ; Duration : 0.037315s) ==================

[2016-03-31 23:45:26.326]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(Reset Fixture,,,PASS,NA,NA,,)

[2016-03-31 23:45:26.326]
Item Name:Reset Fixture, {NA}

[2016-03-31 23:45:26.326]
=============================== START TEST END_TEST_CG-SENSOR (Item123) ===============================

[2016-03-31 23:45:26.326]
^=^ Begin subItem : CLOSE_TARGET:RETURN_VALUE: ===> parameters:
{
TARGET ==> FIXTURE 
}

[2016-03-31 23:45:26.326]
RETURN_VALUE ===> 
++++++++++++++ [1] CLOSE_TARGET:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000478s) ++++++++++++++

[2016-03-31 23:45:26.326]
^=^ Begin subItem : CLOSE_TARGET:RETURN_VALUE: ===> parameters:
{
TARGET ==> MOBILE 
}

[2016-03-31 23:45:26.326]
RETURN_VALUE ===> 
++++++++++++++ [2] CLOSE_TARGET:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000402s) ++++++++++++++

[2016-03-31 23:45:26.326]
^=^ Begin subItem : CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: ===> parameters:
{
SZ_FAIL ==> FAIL 
SZ_PASS ==> PASS 
}

[2016-03-31 23:45:26.326]
RETURN_VALUE ===> PASS
+++++ [3] CHANGE_RETURNVALUE_TO_PASS_FAIL:RETURN_VALUE: (TestResult : PASS ; Duration : 0.000014s) +++++

[2016-03-31 23:45:26.326]
================ END TEST END_TEST_CG-SENSOR (TestResult : PASS ; Duration : 0.004615s) ================

[2016-03-31 23:45:26.326]
PuddingPDCA Framework : PuddingPDCA Framework : SetTestItemStatus(END_TEST_CG-SENSOR,,,PASS,NA,NA,,)

[2016-03-31 23:45:26.326]
Item Name:END_TEST_CG-SENSOR, {NA}

[2016-03-31 23:45:26.326]
############################### END DUT PROGRESS (Duration : 54.563830) ###############################

[2016-03-31 23:45:26.326]
It's EVT, upload process log!

[2016-03-31 23:45:26.326]
PuddingPDCA Framework : Start MakeBlobZIP_File(szFileName = /vault/C7C6145000HGXX71S_UpPDCAFile.zip, FolderPath = /vault/Muifa/20160331/FAIL_C7C6145000HGXX71S_2016-03-31 23-44-31)
